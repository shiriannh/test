<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of VariableCommentSniff.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file VariableCommentSniff.php</h1><p>
                        Size: 6,646 Bytes - Last Modified: 2016-08-13T21:27:30+00:00</p><section><h2><small>/home/codeur/git/test/test/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Squiz/Sniffs/Commenting/</small>VariableCommentSniff.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Parses and verifies the variable doc comment.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * PHP version 5</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * @category  PHP</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * @package   PHP_CodeSniffer</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * @author    Greg Sherwood &lt;gsherwood@squiz.net&gt;</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * @author    Marc McIntyre &lt;mmcintyre@squiz.net&gt;</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * @copyright 2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * @link      http://pear.php.net/package/PHP_CodeSniffer</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">class_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_CodeSniffer_Standards_AbstractVariableSniff'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line17"><pre><span class="token T_WHITESPACE">    </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer_Exception</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Class PHP_CodeSniffer_Standards_AbstractVariableSniff not found'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line18"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line19"><br/></div><div id="line20"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * Parses and verifies the variable doc comment.</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * @category  PHP</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> * @package   PHP_CodeSniffer</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * @author    Greg Sherwood &lt;gsherwood@squiz.net&gt;</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * @author    Marc McIntyre &lt;mmcintyre@squiz.net&gt;</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * @copyright 2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * @license   https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * @version   Release: @package_version@</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * @link      http://pear.php.net/package/PHP_CodeSniffer</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Squiz_Sniffs_Commenting_VariableCommentSniff</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer_Standards_AbstractVariableSniff</span></pre></div><div id="line34"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line35"><br/></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     * Called to process class member vars.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * @param PHP_CodeSniffer_File $phpcsFile The file being scanned.</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     * @param int                  $stackPtr  The position of the current token</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     *                                        in the stack passed in $tokens.</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">processMemberVar</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">PHP_CodeSniffer_File</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokens</span><span class="token T_WHITESPACE">       </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$commentToken</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">                         </span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">                         </span><span class="token T_STRING">T_DOC_COMMENT_CLOSE_TAG</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><br/></div><div id="line54"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">findPrevious</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$commentToken</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line55"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing member variable doc comment'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line59"><br/></div><div id="line60"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line61"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'You must use "/**" style comments for a member variable comment'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'WrongStyle'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line62"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line63"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">T_DOC_COMMENT_CLOSE_TAG</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing member variable doc comment'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Make sure the comment we have found belongs to us.</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$commentFor</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">findNext</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">T_CLASS</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">T_INTERFACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$commentFor</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line70"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing member variable doc comment'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line72"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line74"><br/></div><div id="line75"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$commentStart</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'comment_opener'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line76"><br/></div><div id="line77"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$commentStart</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'comment_tags'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line79"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'content'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'@var'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Only one @var tag is allowed in a member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'DuplicateVar'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line86"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'content'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'@see'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line87"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">// Make sure the tag isn't empty.</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">findNext</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">T_DOC_COMMENT_STRING</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$string</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Content missing for @see tag in member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'EmptySees'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'%s tag is not allowed in member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$data</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'content'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line96"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addWarning</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'TagNotAllowed'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end if</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end foreach</span></pre></div><div id="line99"><br/></div><div id="line100"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// The @var tag is the only one we require.</span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Missing @var tag in member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line103"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'MissingVar'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line106"><br/></div><div id="line107"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$firstTag</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$commentStart</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'comment_tags'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line108"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$firstTag</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'content'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'@var'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line109"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'The @var tag must be the first tag in a member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line110"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$foundVar</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'VarOrder'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line111"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line112"><br/></div><div id="line113"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Make sure the tag isn't empty and has the correct padding.</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">findNext</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">T_DOC_COMMENT_STRING</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$foundVar</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$commentEnd</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$string</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line116"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Content missing for @var tag in member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line117"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$foundVar</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'EmptyVar'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line118"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line119"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line120"><br/></div><div id="line121"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$varType</span><span class="token T_WHITESPACE">       </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'content'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$suggestedType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHP_CodeSniffer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">suggestType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$varType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$varType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$suggestedType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line124"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Expected "%s" but found "%s" for @var tag in member variable comment'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line125"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$data</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line126"><pre><span class="token T_WHITESPACE">                      </span><span class="token T_VARIABLE">$suggestedType</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">                      </span><span class="token T_VARIABLE">$varType</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">                     </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$error</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foundVar</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'IncorrectVarType'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line130"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line131"><br/></div><div id="line132"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end processMemberVar()</span></pre></div><div id="line133"><br/></div><div id="line134"><br/></div><div id="line135"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">     * Called to process a normal variable.</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line138"><pre><span class="token T_DOC_COMMENT">     * Not required for this sniff.</span></pre></div><div id="line139"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line140"><pre><span class="token T_DOC_COMMENT">     * @param PHP_CodeSniffer_File $phpcsFile The PHP_CodeSniffer file where this token was found.</span></pre></div><div id="line141"><pre><span class="token T_DOC_COMMENT">     * @param int                  $stackPtr  The position where the double quoted</span></pre></div><div id="line142"><pre><span class="token T_DOC_COMMENT">     *                                        string was found.</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line145"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line146"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">processVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">PHP_CodeSniffer_File</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line148"><br/></div><div id="line149"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end processVariable()</span></pre></div><div id="line150"><br/></div><div id="line151"><br/></div><div id="line152"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line153"><pre><span class="token T_DOC_COMMENT">     * Called to process variables found in double quoted strings.</span></pre></div><div id="line154"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line155"><pre><span class="token T_DOC_COMMENT">     * Not required for this sniff.</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line157"><pre><span class="token T_DOC_COMMENT">     * @param PHP_CodeSniffer_File $phpcsFile The PHP_CodeSniffer file where this token was found.</span></pre></div><div id="line158"><pre><span class="token T_DOC_COMMENT">     * @param int                  $stackPtr  The position where the double quoted</span></pre></div><div id="line159"><pre><span class="token T_DOC_COMMENT">     *                                        string was found.</span></pre></div><div id="line160"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line161"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line162"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">processVariableInString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">PHP_CodeSniffer_File</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpcsFile</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stackPtr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line165"><br/></div><div id="line166"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end processVariableInString()</span></pre></div><div id="line167"><br/></div><div id="line168"><br/></div><div id="line169"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_COMMENT">//end class</span></pre></div><div id="line170"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
