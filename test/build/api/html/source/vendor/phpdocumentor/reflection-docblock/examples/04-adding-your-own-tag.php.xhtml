<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of 04-adding-your-own-tag.php</title><link rel="stylesheet" type="text/css" href="../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file 04-adding-your-own-tag.php</h1><p>
                        Size: 5,968 Bytes - Last Modified: 2016-08-13T21:27:28+00:00</p><section><h2><small>/home/codeur/git/test/test/vendor/phpdocumentor/reflection-docblock/examples/</small>04-adding-your-own-tag.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * In this example we demonstrate how you can add your own Tag using a Static Factory method in your Tag class.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line5"><br/></div><div id="line6"><pre><span class="token T_REQUIRE_ONCE">require_once</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_DIR">__DIR__</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/../vendor/autoload.php'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line7"><br/></div><div id="line8"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlock</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Serializer</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line9"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlock</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tags</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Factory</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">StaticMethod</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line10"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlockFactory</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line11"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlock</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Description</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line12"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlock</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DescriptionFactory</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">DocBlock</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tags</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">BaseTag</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line14"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">phpDocumentor</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Types</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Context</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line15"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Webmozart</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Assert</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Assert</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line16"><br/></div><div id="line17"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * An example of a custom tag called `my-tag` with an optional description.</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * A Custom Tag is a class that can consist of two parts:</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * 1. a method `create` that is a static factory for this class.</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * 2. methods and properties that have this object act as an immutable Value Object representing a Tag instance.</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * The static factory `create` is used to convert a tag line (without the tag name) into an instance of the</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * same tag object with the right constructor parameters set. This method has a dynamic list of parameters so that you</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * can inject various dependencies, see the method's DocBlock for more information.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * An object of this class, and its methods and properties, represent a single instance of that tag in your</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * documentation in the form of a Value Object whose properties should not be changed after instantiation (it should be</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> * immutable).</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * &gt; Important: Tag classes that act as Factories using the `create` method should implement the TagFactory interface.</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line35"><pre><span class="token T_FINAL">final</span><span class="token T_WHITESPACE"> </span><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">MyTag</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">BaseTag</span><span class="token T_WHITESPACE"> </span><span class="token T_IMPLEMENTS">implements</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">StaticMethod</span></pre></div><div id="line36"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line37"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     * A required property that is used by Formatters to reconstitute the complete tag line.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * @see Formatter</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'my-tag'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line45"><br/></div><div id="line46"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT">     * The constructor for this Tag; this should contain all properties for this object.</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">     * @param Description $description An example of how to add a Description to the tag; the Description is often</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">     *                                 an optional variable so passing null is allowed in this instance (though you can</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">     *                                 also construct an empty description object).</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     * @see BaseTag for the declaration of the description property and getDescription method.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line55"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Description</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$description</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">description</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$description</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line59"><br/></div><div id="line60"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     * A static Factory that creates a new instance of the current Tag.</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     * In this example the MyTag tag can be created by passing a description text as $body. Because we have added</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     * a $descriptionFactory that is type-hinted as DescriptionFactory we can now construct a new Description object</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     * and pass that to the constructor.</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">     * &gt; You could directly instantiate a Description object here but that won't be parsed for inline tags and Types</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">     * &gt; won't be resolved. The DescriptionFactory will take care of those actions.</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">     * The `create` method's interface states that this method only features a single parameter (`$body`) but the</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">     * {@see TagFactory} will read the signature of this method and if it has more parameters then it will try</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">     * to find declarations for it in the ServiceLocator of the TagFactory (see {@see TagFactory::$serviceLocator}).</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">     * &gt; Important: all properties following the `$body` should default to `null`, otherwise PHP will error because</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">     * &gt; it no longer matches the interface. This is why you often see the default tags check that an optional argument</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">     * &gt; is not null nonetheless.</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">     * @param string             $body</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">     * @param DescriptionFactory $descriptionFactory</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">     * @param Context|null       $context The Context is used to resolve Types and FQSENs, although optional</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">     *                                    it is highly recommended to pass it. If you omit it then it is assumed that</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">     *                                    the DocBlock is in the global namespace and has no `use` statements.</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">     * @see Tag for the interface declaration of the `create` method.</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">     * @see Tag::create() for more information on this method's workings.</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">     * @return MyTag</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">create</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$body</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DescriptionFactory</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$descriptionFactory</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Context</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$context</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">Assert</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">string</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$body</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">Assert</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">notNull</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$descriptionFactory</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><br/></div><div id="line94"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$descriptionFactory</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">create</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$body</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$context</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line96"><br/></div><div id="line97"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     * Returns a rendition of the original tag line.</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * This method is used to reconstitute a DocBlock into its original form by the {@see Serializer}. It should</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     * feature all parts of the tag so that the serializer can put it back together.</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__toString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line106"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line107"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING_CAST">(string)</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">description</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line108"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line109"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line110"><br/></div><div id="line111"><pre><span class="token T_VARIABLE">$docComment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_START_HEREDOC">&lt;&lt;&lt;DOCCOMMENT</span></pre></div><div id="line112"><pre><span class="token T_ENCAPSED_AND_WHITESPACE">/**</span></pre></div><div id="line113"><pre><span class="token T_ENCAPSED_AND_WHITESPACE"> * This is an example of a summary.</span></pre></div><div id="line114"><pre><span class="token T_ENCAPSED_AND_WHITESPACE"> *</span></pre></div><div id="line115"><pre><span class="token T_ENCAPSED_AND_WHITESPACE"> * @my-tag I have a description</span></pre></div><div id="line116"><pre><span class="token T_ENCAPSED_AND_WHITESPACE"> */</span></pre></div><div id="line117"><pre><span class="token T_END_HEREDOC">DOCCOMMENT</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line118"><br/></div><div id="line119"><pre><span class="token T_COMMENT">// Make a mapping between the tag name `my-tag` and the Tag class containing the Factory Method `create`.</span></pre></div><div id="line120"><pre><span class="token T_VARIABLE">$customTags</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'my-tag'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">MyTag</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_CLASS">class</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line121"><br/></div><div id="line122"><pre><span class="token T_COMMENT">// Do pass the list of custom tags to the Factory for the DocBlockFactory.</span></pre></div><div id="line123"><pre><span class="token T_VARIABLE">$factory</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DocBlockFactory</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">createInstance</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$customTags</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line124"><pre><span class="token T_COMMENT">// You can also add Tags later using `$factory-&gt;registerTagHandler()` with a tag name and Tag class name.</span></pre></div><div id="line125"><br/></div><div id="line126"><pre><span class="token T_COMMENT">// Create the DocBlock</span></pre></div><div id="line127"><pre><span class="token T_VARIABLE">$docblock</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$factory</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">create</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line128"><br/></div><div id="line129"><pre><span class="token T_COMMENT">// Take a look: the $customTagObjects now contain an array with your newly added tag</span></pre></div><div id="line130"><pre><span class="token T_VARIABLE">$customTagObjects</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$docblock</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getTagsByName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'my-tag'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line131"><br/></div><div id="line132"><pre><span class="token T_COMMENT">// As an experiment: let's reconstitute the DocBlock and observe that because we added a __toString() method</span></pre></div><div id="line133"><pre><span class="token T_COMMENT">// to the tag class that we can now also see it.</span></pre></div><div id="line134"><pre><span class="token T_VARIABLE">$serializer</span><span class="token T_WHITESPACE">              </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Serializer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line135"><pre><span class="token T_VARIABLE">$reconstitutedDocComment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$serializer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getDocComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$docblock</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line136"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
