<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of AbstractLocalVariable.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file AbstractLocalVariable.php</h1><p>
                        Size: 6,467 Bytes - Last Modified: 2016-08-13T21:27:28+00:00</p><section><h2><small>/home/codeur/git/test/test/vendor/phpmd/phpmd/src/main/php/PHPMD/Rule/</small>AbstractLocalVariable.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * This file is part of PHP Mess Detector.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * Copyright (c) 2008-2012, Manuel Pichler &lt;mapi@phpmd.org&gt;.</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * All rights reserved.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * Redistribution and use in source and binary forms, with or without</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * modification, are permitted provided that the following conditions</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * are met:</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> *   * Redistributions of source code must retain the above copyright</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> *     notice, this list of conditions and the following disclaimer.</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> *   * Redistributions in binary form must reproduce the above copyright</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *     notice, this list of conditions and the following disclaimer in</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> *     the documentation and/or other materials provided with the</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *     distribution.</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> *   * Neither the name of Manuel Pichler nor the names of his</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> *     contributors may be used to endorse or promote products derived</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> *     from this software without specific prior written permission.</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * POSSIBILITY OF SUCH DAMAGE.</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * @author    Manuel Pichler &lt;mapi@phpmd.org&gt;</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> * @copyright 2008-2014 Manuel Pichler. All rights reserved.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * @license   http://www.opensource.org/licenses/bsd-license.php BSD License</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * @since      0.2.6</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line42"><br/></div><div id="line43"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHPMD</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Rule</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><br/></div><div id="line45"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHPMD</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractNode</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line46"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHPMD</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractRule</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line47"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PHPMD</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Node</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line48"><br/></div><div id="line49"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT"> * Base class for rules that rely on local variables.</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT"> * @author    Manuel Pichler &lt;mapi@phpmd.org&gt;</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT"> * @copyright 2008-2014 Manuel Pichler. All rights reserved.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT"> * @license   http://www.opensource.org/licenses/bsd-license.php BSD License</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT"> * @since     0.2.6</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line57"><pre><span class="token T_ABSTRACT">abstract</span><span class="token T_WHITESPACE"> </span><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">AbstractLocalVariable</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">AbstractRule</span></pre></div><div id="line58"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">     * PHP super globals that are available in all php scopes, so that they</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     * can never be unused local variables.</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     * @var array(string=&gt;boolean)</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$superGlobals</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$argc'</span><span class="token T_WHITESPACE">                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$argv'</span><span class="token T_WHITESPACE">                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_COOKIE'</span><span class="token T_WHITESPACE">             </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_ENV'</span><span class="token T_WHITESPACE">                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line70"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_FILES'</span><span class="token T_WHITESPACE">              </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_GET'</span><span class="token T_WHITESPACE">                </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line72"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_POST'</span><span class="token T_WHITESPACE">               </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_REQUEST'</span><span class="token T_WHITESPACE">            </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_SERVER'</span><span class="token T_WHITESPACE">             </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$_SESSION'</span><span class="token T_WHITESPACE">            </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$GLOBALS'</span><span class="token T_WHITESPACE">             </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'$HTTP_RAW_POST_DATA'</span><span class="token T_WHITESPACE">  </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line79"><br/></div><div id="line80"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">     * Tests if the given variable node represents a local variable or if it is</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">     * a static object property or something similar.</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\Node\ASTNode $variable The variable to check.</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line87"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isLocal</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isThis</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isNotSuperGlobal</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isRegularVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line94"><br/></div><div id="line95"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     * Tests if the given variable represents one of the PHP super globals</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     * that are available in scopes.</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\AbstractNode $variable</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isNotSuperGlobal</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line103"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$superGlobals</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$variable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line106"><br/></div><div id="line107"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line108"><pre><span class="token T_DOC_COMMENT">     * Tests if the given variable node is a regular variable an not property</span></pre></div><div id="line109"><pre><span class="token T_DOC_COMMENT">     * or method postfix.</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\Node\ASTNode $variable</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isRegularVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line116"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE">   </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">stripWrappedIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line117"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line118"><br/></div><div id="line119"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parent</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isInstanceOf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'PropertyPostfix'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$primaryPrefix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parent</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$primaryPrefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isInstanceOf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'MemberPrimaryPrefix'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$primaryPrefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isStatic</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line124"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parent</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line125"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$primaryPrefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isStatic</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line126"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line130"><br/></div><div id="line131"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line132"><pre><span class="token T_DOC_COMMENT">     * Removes all index expressions that are wrapped around the given node</span></pre></div><div id="line133"><pre><span class="token T_DOC_COMMENT">     * instance.</span></pre></div><div id="line134"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\Node\ASTNode $node</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">     * @return \PHPMD\Node\ASTNode</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line138"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">stripWrappedIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line139"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line140"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isWrappedByIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line141"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line142"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line143"><br/></div><div id="line144"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line145"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parent</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line146"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">stripWrappedIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parent</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line148"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line149"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line150"><br/></div><div id="line151"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line152"><pre><span class="token T_DOC_COMMENT">     * Tests if the given variable node os part of an index expression.</span></pre></div><div id="line153"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line154"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\Node\ASTNode $node</span></pre></div><div id="line155"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line157"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isWrappedByIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line158"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isInstanceOf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'ArrayIndexExpression'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line160"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParent</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isInstanceOf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'StringIndexExpression'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line161"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line162"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line163"><br/></div><div id="line164"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line165"><pre><span class="token T_DOC_COMMENT">     * PHP is case insensitive so we should compare function names case</span></pre></div><div id="line166"><pre><span class="token T_DOC_COMMENT">     * insensitive.</span></pre></div><div id="line167"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line168"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\AbstractNode $node</span></pre></div><div id="line169"><pre><span class="token T_DOC_COMMENT">     * @param string $name</span></pre></div><div id="line170"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line171"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line172"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isFunctionNameEqual</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line174"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strcasecmp</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line175"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line176"><br/></div><div id="line177"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line178"><pre><span class="token T_DOC_COMMENT">     * AST puts namespace prefix to global functions called from a namespace.</span></pre></div><div id="line179"><pre><span class="token T_DOC_COMMENT">     * This method checks if the last part of function fully qualified name is equal to $name</span></pre></div><div id="line180"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line181"><pre><span class="token T_DOC_COMMENT">     * @param \PHPMD\AbstractNode $node</span></pre></div><div id="line182"><pre><span class="token T_DOC_COMMENT">     * @param string $name</span></pre></div><div id="line183"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line184"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line185"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isFunctionNameEndingWith</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line186"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line187"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parts</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">explode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line188"><br/></div><div id="line189"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strcasecmp</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parts</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line190"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line191"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line192"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
