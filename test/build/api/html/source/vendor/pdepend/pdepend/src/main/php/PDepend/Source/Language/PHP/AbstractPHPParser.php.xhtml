<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of AbstractPHPParser.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file AbstractPHPParser.php</h1><p>
                        Size: 210,056 Bytes - Last Modified: 2016-08-13T21:27:28+00:00</p><section><h2><small>/home/codeur/git/test/test/vendor/pdepend/pdepend/src/main/php/PDepend/Source/Language/PHP/</small>AbstractPHPParser.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker" href="#line220">220</a><a class="anker" href="#line221">221</a><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker" href="#line224">224</a><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker" href="#line246">246</a><a class="anker" href="#line247">247</a><a class="anker" href="#line248">248</a><a class="anker" href="#line249">249</a><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker" href="#line263">263</a><a class="anker" href="#line264">264</a><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker" href="#line268">268</a><a class="anker" href="#line269">269</a><a class="anker" href="#line270">270</a><a class="anker" href="#line271">271</a><a class="anker" href="#line272">272</a><a class="anker" href="#line273">273</a><a class="anker" href="#line274">274</a><a class="anker" href="#line275">275</a><a class="anker" href="#line276">276</a><a class="anker" href="#line277">277</a><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker" href="#line290">290</a><a class="anker" href="#line291">291</a><a class="anker" href="#line292">292</a><a class="anker" href="#line293">293</a><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a><a class="anker" href="#line299">299</a><a class="anker" href="#line300">300</a><a class="anker" href="#line301">301</a><a class="anker" href="#line302">302</a><a class="anker" href="#line303">303</a><a class="anker" href="#line304">304</a><a class="anker" href="#line305">305</a><a class="anker" href="#line306">306</a><a class="anker" href="#line307">307</a><a class="anker" href="#line308">308</a><a class="anker" href="#line309">309</a><a class="anker" href="#line310">310</a><a class="anker" href="#line311">311</a><a class="anker" href="#line312">312</a><a class="anker" href="#line313">313</a><a class="anker" href="#line314">314</a><a class="anker" href="#line315">315</a><a class="anker" href="#line316">316</a><a class="anker" href="#line317">317</a><a class="anker" href="#line318">318</a><a class="anker" href="#line319">319</a><a class="anker" href="#line320">320</a><a class="anker" href="#line321">321</a><a class="anker" href="#line322">322</a><a class="anker" href="#line323">323</a><a class="anker" href="#line324">324</a><a class="anker" href="#line325">325</a><a class="anker" href="#line326">326</a><a class="anker" href="#line327">327</a><a class="anker" href="#line328">328</a><a class="anker" href="#line329">329</a><a class="anker" href="#line330">330</a><a class="anker" href="#line331">331</a><a class="anker" href="#line332">332</a><a class="anker" href="#line333">333</a><a class="anker" href="#line334">334</a><a class="anker" href="#line335">335</a><a class="anker" href="#line336">336</a><a class="anker" href="#line337">337</a><a class="anker" href="#line338">338</a><a class="anker" href="#line339">339</a><a class="anker" href="#line340">340</a><a class="anker" href="#line341">341</a><a class="anker" href="#line342">342</a><a class="anker" href="#line343">343</a><a class="anker" href="#line344">344</a><a class="anker" href="#line345">345</a><a class="anker" href="#line346">346</a><a class="anker" href="#line347">347</a><a class="anker" href="#line348">348</a><a class="anker" href="#line349">349</a><a class="anker" href="#line350">350</a><a class="anker" href="#line351">351</a><a class="anker" href="#line352">352</a><a class="anker" href="#line353">353</a><a class="anker" href="#line354">354</a><a class="anker" href="#line355">355</a><a class="anker" href="#line356">356</a><a class="anker" href="#line357">357</a><a class="anker" href="#line358">358</a><a class="anker" href="#line359">359</a><a class="anker" href="#line360">360</a><a class="anker" href="#line361">361</a><a class="anker" href="#line362">362</a><a class="anker" href="#line363">363</a><a class="anker" href="#line364">364</a><a class="anker" href="#line365">365</a><a class="anker" href="#line366">366</a><a class="anker" href="#line367">367</a><a class="anker" href="#line368">368</a><a class="anker" href="#line369">369</a><a class="anker" href="#line370">370</a><a class="anker" href="#line371">371</a><a class="anker" href="#line372">372</a><a class="anker" href="#line373">373</a><a class="anker" href="#line374">374</a><a class="anker" href="#line375">375</a><a class="anker" href="#line376">376</a><a class="anker" href="#line377">377</a><a class="anker" href="#line378">378</a><a class="anker" href="#line379">379</a><a class="anker" href="#line380">380</a><a class="anker" href="#line381">381</a><a class="anker" href="#line382">382</a><a class="anker" href="#line383">383</a><a class="anker" href="#line384">384</a><a class="anker" href="#line385">385</a><a class="anker" href="#line386">386</a><a class="anker" href="#line387">387</a><a class="anker" href="#line388">388</a><a class="anker" href="#line389">389</a><a class="anker" href="#line390">390</a><a class="anker" href="#line391">391</a><a class="anker" href="#line392">392</a><a class="anker" href="#line393">393</a><a class="anker" href="#line394">394</a><a class="anker" href="#line395">395</a><a class="anker" href="#line396">396</a><a class="anker" href="#line397">397</a><a class="anker" href="#line398">398</a><a class="anker" href="#line399">399</a><a class="anker" href="#line400">400</a><a class="anker" href="#line401">401</a><a class="anker" href="#line402">402</a><a class="anker" href="#line403">403</a><a class="anker" href="#line404">404</a><a class="anker" href="#line405">405</a><a class="anker" href="#line406">406</a><a class="anker" href="#line407">407</a><a class="anker" href="#line408">408</a><a class="anker" href="#line409">409</a><a class="anker" href="#line410">410</a><a class="anker" href="#line411">411</a><a class="anker" href="#line412">412</a><a class="anker" href="#line413">413</a><a class="anker" href="#line414">414</a><a class="anker" href="#line415">415</a><a class="anker" href="#line416">416</a><a class="anker" href="#line417">417</a><a class="anker" href="#line418">418</a><a class="anker" href="#line419">419</a><a class="anker" href="#line420">420</a><a class="anker" href="#line421">421</a><a class="anker" href="#line422">422</a><a class="anker" href="#line423">423</a><a class="anker" href="#line424">424</a><a class="anker" href="#line425">425</a><a class="anker" href="#line426">426</a><a class="anker" href="#line427">427</a><a class="anker" href="#line428">428</a><a class="anker" href="#line429">429</a><a class="anker" href="#line430">430</a><a class="anker" href="#line431">431</a><a class="anker" href="#line432">432</a><a class="anker" href="#line433">433</a><a class="anker" href="#line434">434</a><a class="anker" href="#line435">435</a><a class="anker" href="#line436">436</a><a class="anker" href="#line437">437</a><a class="anker" href="#line438">438</a><a class="anker" href="#line439">439</a><a class="anker" href="#line440">440</a><a class="anker" href="#line441">441</a><a class="anker" href="#line442">442</a><a class="anker" href="#line443">443</a><a class="anker" href="#line444">444</a><a class="anker" href="#line445">445</a><a class="anker" href="#line446">446</a><a class="anker" href="#line447">447</a><a class="anker" href="#line448">448</a><a class="anker" href="#line449">449</a><a class="anker" href="#line450">450</a><a class="anker" href="#line451">451</a><a class="anker" href="#line452">452</a><a class="anker" href="#line453">453</a><a class="anker" href="#line454">454</a><a class="anker" href="#line455">455</a><a class="anker" href="#line456">456</a><a class="anker" href="#line457">457</a><a class="anker" href="#line458">458</a><a class="anker" href="#line459">459</a><a class="anker" href="#line460">460</a><a class="anker" href="#line461">461</a><a class="anker" href="#line462">462</a><a class="anker" href="#line463">463</a><a class="anker" href="#line464">464</a><a class="anker" href="#line465">465</a><a class="anker" href="#line466">466</a><a class="anker" href="#line467">467</a><a class="anker" href="#line468">468</a><a class="anker" href="#line469">469</a><a class="anker" href="#line470">470</a><a class="anker" href="#line471">471</a><a class="anker" href="#line472">472</a><a class="anker" href="#line473">473</a><a class="anker" href="#line474">474</a><a class="anker" href="#line475">475</a><a class="anker" href="#line476">476</a><a class="anker" href="#line477">477</a><a class="anker" href="#line478">478</a><a class="anker" href="#line479">479</a><a class="anker" href="#line480">480</a><a class="anker" href="#line481">481</a><a class="anker" href="#line482">482</a><a class="anker" href="#line483">483</a><a class="anker" href="#line484">484</a><a class="anker" href="#line485">485</a><a class="anker" href="#line486">486</a><a class="anker" href="#line487">487</a><a class="anker" href="#line488">488</a><a class="anker" href="#line489">489</a><a class="anker" href="#line490">490</a><a class="anker" href="#line491">491</a><a class="anker" href="#line492">492</a><a class="anker" href="#line493">493</a><a class="anker" href="#line494">494</a><a class="anker" href="#line495">495</a><a class="anker" href="#line496">496</a><a class="anker" href="#line497">497</a><a class="anker" href="#line498">498</a><a class="anker" href="#line499">499</a><a class="anker" href="#line500">500</a><a class="anker" href="#line501">501</a><a class="anker" href="#line502">502</a><a class="anker" href="#line503">503</a><a class="anker" href="#line504">504</a><a class="anker" href="#line505">505</a><a class="anker" href="#line506">506</a><a class="anker" href="#line507">507</a><a class="anker" href="#line508">508</a><a class="anker" href="#line509">509</a><a class="anker" href="#line510">510</a><a class="anker" href="#line511">511</a><a class="anker" href="#line512">512</a><a class="anker" href="#line513">513</a><a class="anker" href="#line514">514</a><a class="anker" href="#line515">515</a><a class="anker" href="#line516">516</a><a class="anker" href="#line517">517</a><a class="anker" href="#line518">518</a><a class="anker" href="#line519">519</a><a class="anker" href="#line520">520</a><a class="anker" href="#line521">521</a><a class="anker" href="#line522">522</a><a class="anker" href="#line523">523</a><a class="anker" href="#line524">524</a><a class="anker" href="#line525">525</a><a class="anker" href="#line526">526</a><a class="anker" href="#line527">527</a><a class="anker" href="#line528">528</a><a class="anker" href="#line529">529</a><a class="anker" href="#line530">530</a><a class="anker" href="#line531">531</a><a class="anker" href="#line532">532</a><a class="anker" href="#line533">533</a><a class="anker" href="#line534">534</a><a class="anker" href="#line535">535</a><a class="anker" href="#line536">536</a><a class="anker" href="#line537">537</a><a class="anker" href="#line538">538</a><a class="anker" href="#line539">539</a><a class="anker" href="#line540">540</a><a class="anker" href="#line541">541</a><a class="anker" href="#line542">542</a><a class="anker" href="#line543">543</a><a class="anker" href="#line544">544</a><a class="anker" href="#line545">545</a><a class="anker" href="#line546">546</a><a class="anker" href="#line547">547</a><a class="anker" href="#line548">548</a><a class="anker" href="#line549">549</a><a class="anker" href="#line550">550</a><a class="anker" href="#line551">551</a><a class="anker" href="#line552">552</a><a class="anker" href="#line553">553</a><a class="anker" href="#line554">554</a><a class="anker" href="#line555">555</a><a class="anker" href="#line556">556</a><a class="anker" href="#line557">557</a><a class="anker" href="#line558">558</a><a class="anker" href="#line559">559</a><a class="anker" href="#line560">560</a><a class="anker" href="#line561">561</a><a class="anker" href="#line562">562</a><a class="anker" href="#line563">563</a><a class="anker" href="#line564">564</a><a class="anker" href="#line565">565</a><a class="anker" href="#line566">566</a><a class="anker" href="#line567">567</a><a class="anker" href="#line568">568</a><a class="anker" href="#line569">569</a><a class="anker" href="#line570">570</a><a class="anker" href="#line571">571</a><a class="anker" href="#line572">572</a><a class="anker" href="#line573">573</a><a class="anker" href="#line574">574</a><a class="anker" href="#line575">575</a><a class="anker" href="#line576">576</a><a class="anker" href="#line577">577</a><a class="anker" href="#line578">578</a><a class="anker" href="#line579">579</a><a class="anker" href="#line580">580</a><a class="anker" href="#line581">581</a><a class="anker" href="#line582">582</a><a class="anker" href="#line583">583</a><a class="anker" href="#line584">584</a><a class="anker" href="#line585">585</a><a class="anker" href="#line586">586</a><a class="anker" href="#line587">587</a><a class="anker" href="#line588">588</a><a class="anker" href="#line589">589</a><a class="anker" href="#line590">590</a><a class="anker" href="#line591">591</a><a class="anker" href="#line592">592</a><a class="anker" href="#line593">593</a><a class="anker" href="#line594">594</a><a class="anker" href="#line595">595</a><a class="anker" href="#line596">596</a><a class="anker" href="#line597">597</a><a class="anker" href="#line598">598</a><a class="anker" href="#line599">599</a><a class="anker" href="#line600">600</a><a class="anker" href="#line601">601</a><a class="anker" href="#line602">602</a><a class="anker" href="#line603">603</a><a class="anker" href="#line604">604</a><a class="anker" href="#line605">605</a><a class="anker" href="#line606">606</a><a class="anker" href="#line607">607</a><a class="anker" href="#line608">608</a><a class="anker" href="#line609">609</a><a class="anker" href="#line610">610</a><a class="anker" href="#line611">611</a><a class="anker" href="#line612">612</a><a class="anker" href="#line613">613</a><a class="anker" href="#line614">614</a><a class="anker" href="#line615">615</a><a class="anker" href="#line616">616</a><a class="anker" href="#line617">617</a><a class="anker" href="#line618">618</a><a class="anker" href="#line619">619</a><a class="anker" href="#line620">620</a><a class="anker" href="#line621">621</a><a class="anker" href="#line622">622</a><a class="anker" href="#line623">623</a><a class="anker" href="#line624">624</a><a class="anker" href="#line625">625</a><a class="anker" href="#line626">626</a><a class="anker" href="#line627">627</a><a class="anker" href="#line628">628</a><a class="anker" href="#line629">629</a><a class="anker" href="#line630">630</a><a class="anker" href="#line631">631</a><a class="anker" href="#line632">632</a><a class="anker" href="#line633">633</a><a class="anker" href="#line634">634</a><a class="anker" href="#line635">635</a><a class="anker" href="#line636">636</a><a class="anker" href="#line637">637</a><a class="anker" href="#line638">638</a><a class="anker" href="#line639">639</a><a class="anker" href="#line640">640</a><a class="anker" href="#line641">641</a><a class="anker" href="#line642">642</a><a class="anker" href="#line643">643</a><a class="anker" href="#line644">644</a><a class="anker" href="#line645">645</a><a class="anker" href="#line646">646</a><a class="anker" href="#line647">647</a><a class="anker" href="#line648">648</a><a class="anker" href="#line649">649</a><a class="anker" href="#line650">650</a><a class="anker" href="#line651">651</a><a class="anker" href="#line652">652</a><a class="anker" href="#line653">653</a><a class="anker" href="#line654">654</a><a class="anker" href="#line655">655</a><a class="anker" href="#line656">656</a><a class="anker" href="#line657">657</a><a class="anker" href="#line658">658</a><a class="anker" href="#line659">659</a><a class="anker" href="#line660">660</a><a class="anker" href="#line661">661</a><a class="anker" href="#line662">662</a><a class="anker" href="#line663">663</a><a class="anker" href="#line664">664</a><a class="anker" href="#line665">665</a><a class="anker" href="#line666">666</a><a class="anker" href="#line667">667</a><a class="anker" href="#line668">668</a><a class="anker" href="#line669">669</a><a class="anker" href="#line670">670</a><a class="anker" href="#line671">671</a><a class="anker" href="#line672">672</a><a class="anker" href="#line673">673</a><a class="anker" href="#line674">674</a><a class="anker" href="#line675">675</a><a class="anker" href="#line676">676</a><a class="anker" href="#line677">677</a><a class="anker" href="#line678">678</a><a class="anker" href="#line679">679</a><a class="anker" href="#line680">680</a><a class="anker" href="#line681">681</a><a class="anker" href="#line682">682</a><a class="anker" href="#line683">683</a><a class="anker" href="#line684">684</a><a class="anker" href="#line685">685</a><a class="anker" href="#line686">686</a><a class="anker" href="#line687">687</a><a class="anker" href="#line688">688</a><a class="anker" href="#line689">689</a><a class="anker" href="#line690">690</a><a class="anker" href="#line691">691</a><a class="anker" href="#line692">692</a><a class="anker" href="#line693">693</a><a class="anker" href="#line694">694</a><a class="anker" href="#line695">695</a><a class="anker" href="#line696">696</a><a class="anker" href="#line697">697</a><a class="anker" href="#line698">698</a><a class="anker" href="#line699">699</a><a class="anker" href="#line700">700</a><a class="anker" href="#line701">701</a><a class="anker" href="#line702">702</a><a class="anker" href="#line703">703</a><a class="anker" href="#line704">704</a><a class="anker" href="#line705">705</a><a class="anker" href="#line706">706</a><a class="anker" href="#line707">707</a><a class="anker" href="#line708">708</a><a class="anker" href="#line709">709</a><a class="anker" href="#line710">710</a><a class="anker" href="#line711">711</a><a class="anker" href="#line712">712</a><a class="anker" href="#line713">713</a><a class="anker" href="#line714">714</a><a class="anker" href="#line715">715</a><a class="anker" href="#line716">716</a><a class="anker" href="#line717">717</a><a class="anker" href="#line718">718</a><a class="anker" href="#line719">719</a><a class="anker" href="#line720">720</a><a class="anker" href="#line721">721</a><a class="anker" href="#line722">722</a><a class="anker" href="#line723">723</a><a class="anker" href="#line724">724</a><a class="anker" href="#line725">725</a><a class="anker" href="#line726">726</a><a class="anker" href="#line727">727</a><a class="anker" href="#line728">728</a><a class="anker" href="#line729">729</a><a class="anker" href="#line730">730</a><a class="anker" href="#line731">731</a><a class="anker" href="#line732">732</a><a class="anker" href="#line733">733</a><a class="anker" href="#line734">734</a><a class="anker" href="#line735">735</a><a class="anker" href="#line736">736</a><a class="anker" href="#line737">737</a><a class="anker" href="#line738">738</a><a class="anker" href="#line739">739</a><a class="anker" href="#line740">740</a><a class="anker" href="#line741">741</a><a class="anker" href="#line742">742</a><a class="anker" href="#line743">743</a><a class="anker" href="#line744">744</a><a class="anker" href="#line745">745</a><a class="anker" href="#line746">746</a><a class="anker" href="#line747">747</a><a class="anker" href="#line748">748</a><a class="anker" href="#line749">749</a><a class="anker" href="#line750">750</a><a class="anker" href="#line751">751</a><a class="anker" href="#line752">752</a><a class="anker" href="#line753">753</a><a class="anker" href="#line754">754</a><a class="anker" href="#line755">755</a><a class="anker" href="#line756">756</a><a class="anker" href="#line757">757</a><a class="anker" href="#line758">758</a><a class="anker" href="#line759">759</a><a class="anker" href="#line760">760</a><a class="anker" href="#line761">761</a><a class="anker" href="#line762">762</a><a class="anker" href="#line763">763</a><a class="anker" href="#line764">764</a><a class="anker" href="#line765">765</a><a class="anker" href="#line766">766</a><a class="anker" href="#line767">767</a><a class="anker" href="#line768">768</a><a class="anker" href="#line769">769</a><a class="anker" href="#line770">770</a><a class="anker" href="#line771">771</a><a class="anker" href="#line772">772</a><a class="anker" href="#line773">773</a><a class="anker" href="#line774">774</a><a class="anker" href="#line775">775</a><a class="anker" href="#line776">776</a><a class="anker" href="#line777">777</a><a class="anker" href="#line778">778</a><a class="anker" href="#line779">779</a><a class="anker" href="#line780">780</a><a class="anker" href="#line781">781</a><a class="anker" href="#line782">782</a><a class="anker" href="#line783">783</a><a class="anker" href="#line784">784</a><a class="anker" href="#line785">785</a><a class="anker" href="#line786">786</a><a class="anker" href="#line787">787</a><a class="anker" href="#line788">788</a><a class="anker" href="#line789">789</a><a class="anker" href="#line790">790</a><a class="anker" href="#line791">791</a><a class="anker" href="#line792">792</a><a class="anker" href="#line793">793</a><a class="anker" href="#line794">794</a><a class="anker" href="#line795">795</a><a class="anker" href="#line796">796</a><a class="anker" href="#line797">797</a><a class="anker" href="#line798">798</a><a class="anker" href="#line799">799</a><a class="anker" href="#line800">800</a><a class="anker" href="#line801">801</a><a class="anker" href="#line802">802</a><a class="anker" href="#line803">803</a><a class="anker" href="#line804">804</a><a class="anker" href="#line805">805</a><a class="anker" href="#line806">806</a><a class="anker" href="#line807">807</a><a class="anker" href="#line808">808</a><a class="anker" href="#line809">809</a><a class="anker" href="#line810">810</a><a class="anker" href="#line811">811</a><a class="anker" href="#line812">812</a><a class="anker" href="#line813">813</a><a class="anker" href="#line814">814</a><a class="anker" href="#line815">815</a><a class="anker" href="#line816">816</a><a class="anker" href="#line817">817</a><a class="anker" href="#line818">818</a><a class="anker" href="#line819">819</a><a class="anker" href="#line820">820</a><a class="anker" href="#line821">821</a><a class="anker" href="#line822">822</a><a class="anker" href="#line823">823</a><a class="anker" href="#line824">824</a><a class="anker" href="#line825">825</a><a class="anker" href="#line826">826</a><a class="anker" href="#line827">827</a><a class="anker" href="#line828">828</a><a class="anker" href="#line829">829</a><a class="anker" href="#line830">830</a><a class="anker" href="#line831">831</a><a class="anker" href="#line832">832</a><a class="anker" href="#line833">833</a><a class="anker" href="#line834">834</a><a class="anker" href="#line835">835</a><a class="anker" href="#line836">836</a><a class="anker" href="#line837">837</a><a class="anker" href="#line838">838</a><a class="anker" href="#line839">839</a><a class="anker" href="#line840">840</a><a class="anker" href="#line841">841</a><a class="anker" href="#line842">842</a><a class="anker" href="#line843">843</a><a class="anker" href="#line844">844</a><a class="anker" href="#line845">845</a><a class="anker" href="#line846">846</a><a class="anker" href="#line847">847</a><a class="anker" href="#line848">848</a><a class="anker" href="#line849">849</a><a class="anker" href="#line850">850</a><a class="anker" href="#line851">851</a><a class="anker" href="#line852">852</a><a class="anker" href="#line853">853</a><a class="anker" href="#line854">854</a><a class="anker" href="#line855">855</a><a class="anker" href="#line856">856</a><a class="anker" href="#line857">857</a><a class="anker" href="#line858">858</a><a class="anker" href="#line859">859</a><a class="anker" href="#line860">860</a><a class="anker" href="#line861">861</a><a class="anker" href="#line862">862</a><a class="anker" href="#line863">863</a><a class="anker" href="#line864">864</a><a class="anker" href="#line865">865</a><a class="anker" href="#line866">866</a><a class="anker" href="#line867">867</a><a class="anker" href="#line868">868</a><a class="anker" href="#line869">869</a><a class="anker" href="#line870">870</a><a class="anker" href="#line871">871</a><a class="anker" href="#line872">872</a><a class="anker" href="#line873">873</a><a class="anker" href="#line874">874</a><a class="anker" href="#line875">875</a><a class="anker" href="#line876">876</a><a class="anker" href="#line877">877</a><a class="anker" href="#line878">878</a><a class="anker" href="#line879">879</a><a class="anker" href="#line880">880</a><a class="anker" href="#line881">881</a><a class="anker" href="#line882">882</a><a class="anker" href="#line883">883</a><a class="anker" href="#line884">884</a><a class="anker" href="#line885">885</a><a class="anker" href="#line886">886</a><a class="anker" href="#line887">887</a><a class="anker" href="#line888">888</a><a class="anker" href="#line889">889</a><a class="anker" href="#line890">890</a><a class="anker" href="#line891">891</a><a class="anker" href="#line892">892</a><a class="anker" href="#line893">893</a><a class="anker" href="#line894">894</a><a class="anker" href="#line895">895</a><a class="anker" href="#line896">896</a><a class="anker" href="#line897">897</a><a class="anker" href="#line898">898</a><a class="anker" href="#line899">899</a><a class="anker" href="#line900">900</a><a class="anker" href="#line901">901</a><a class="anker" href="#line902">902</a><a class="anker" href="#line903">903</a><a class="anker" href="#line904">904</a><a class="anker" href="#line905">905</a><a class="anker" href="#line906">906</a><a class="anker" href="#line907">907</a><a class="anker" href="#line908">908</a><a class="anker" href="#line909">909</a><a class="anker" href="#line910">910</a><a class="anker" href="#line911">911</a><a class="anker" href="#line912">912</a><a class="anker" href="#line913">913</a><a class="anker" href="#line914">914</a><a class="anker" href="#line915">915</a><a class="anker" href="#line916">916</a><a class="anker" href="#line917">917</a><a class="anker" href="#line918">918</a><a class="anker" href="#line919">919</a><a class="anker" href="#line920">920</a><a class="anker" href="#line921">921</a><a class="anker" href="#line922">922</a><a class="anker" href="#line923">923</a><a class="anker" href="#line924">924</a><a class="anker" href="#line925">925</a><a class="anker" href="#line926">926</a><a class="anker" href="#line927">927</a><a class="anker" href="#line928">928</a><a class="anker" href="#line929">929</a><a class="anker" href="#line930">930</a><a class="anker" href="#line931">931</a><a class="anker" href="#line932">932</a><a class="anker" href="#line933">933</a><a class="anker" href="#line934">934</a><a class="anker" href="#line935">935</a><a class="anker" href="#line936">936</a><a class="anker" href="#line937">937</a><a class="anker" href="#line938">938</a><a class="anker" href="#line939">939</a><a class="anker" href="#line940">940</a><a class="anker" href="#line941">941</a><a class="anker" href="#line942">942</a><a class="anker" href="#line943">943</a><a class="anker" href="#line944">944</a><a class="anker" href="#line945">945</a><a class="anker" href="#line946">946</a><a class="anker" href="#line947">947</a><a class="anker" href="#line948">948</a><a class="anker" href="#line949">949</a><a class="anker" href="#line950">950</a><a class="anker" href="#line951">951</a><a class="anker" href="#line952">952</a><a class="anker" href="#line953">953</a><a class="anker" href="#line954">954</a><a class="anker" href="#line955">955</a><a class="anker" href="#line956">956</a><a class="anker" href="#line957">957</a><a class="anker" href="#line958">958</a><a class="anker" href="#line959">959</a><a class="anker" href="#line960">960</a><a class="anker" href="#line961">961</a><a class="anker" href="#line962">962</a><a class="anker" href="#line963">963</a><a class="anker" href="#line964">964</a><a class="anker" href="#line965">965</a><a class="anker" href="#line966">966</a><a class="anker" href="#line967">967</a><a class="anker" href="#line968">968</a><a class="anker" href="#line969">969</a><a class="anker" href="#line970">970</a><a class="anker" href="#line971">971</a><a class="anker" href="#line972">972</a><a class="anker" href="#line973">973</a><a class="anker" href="#line974">974</a><a class="anker" href="#line975">975</a><a class="anker" href="#line976">976</a><a class="anker" href="#line977">977</a><a class="anker" href="#line978">978</a><a class="anker" href="#line979">979</a><a class="anker" href="#line980">980</a><a class="anker" href="#line981">981</a><a class="anker" href="#line982">982</a><a class="anker" href="#line983">983</a><a class="anker" href="#line984">984</a><a class="anker" href="#line985">985</a><a class="anker" href="#line986">986</a><a class="anker" href="#line987">987</a><a class="anker" href="#line988">988</a><a class="anker" href="#line989">989</a><a class="anker" href="#line990">990</a><a class="anker" href="#line991">991</a><a class="anker" href="#line992">992</a><a class="anker" href="#line993">993</a><a class="anker" href="#line994">994</a><a class="anker" href="#line995">995</a><a class="anker" href="#line996">996</a><a class="anker" href="#line997">997</a><a class="anker" href="#line998">998</a><a class="anker" href="#line999">999</a><a class="anker" href="#line1000">1000</a><a class="anker" href="#line1001">1001</a><a class="anker" href="#line1002">1002</a><a class="anker" href="#line1003">1003</a><a class="anker" href="#line1004">1004</a><a class="anker" href="#line1005">1005</a><a class="anker" href="#line1006">1006</a><a class="anker" href="#line1007">1007</a><a class="anker" href="#line1008">1008</a><a class="anker" href="#line1009">1009</a><a class="anker" href="#line1010">1010</a><a class="anker" href="#line1011">1011</a><a class="anker" href="#line1012">1012</a><a class="anker" href="#line1013">1013</a><a class="anker" href="#line1014">1014</a><a class="anker" href="#line1015">1015</a><a class="anker" href="#line1016">1016</a><a class="anker" href="#line1017">1017</a><a class="anker" href="#line1018">1018</a><a class="anker" href="#line1019">1019</a><a class="anker" href="#line1020">1020</a><a class="anker" href="#line1021">1021</a><a class="anker" href="#line1022">1022</a><a class="anker" href="#line1023">1023</a><a class="anker" href="#line1024">1024</a><a class="anker" href="#line1025">1025</a><a class="anker" href="#line1026">1026</a><a class="anker" href="#line1027">1027</a><a class="anker" href="#line1028">1028</a><a class="anker" href="#line1029">1029</a><a class="anker" href="#line1030">1030</a><a class="anker" href="#line1031">1031</a><a class="anker" href="#line1032">1032</a><a class="anker" href="#line1033">1033</a><a class="anker" href="#line1034">1034</a><a class="anker" href="#line1035">1035</a><a class="anker" href="#line1036">1036</a><a class="anker" href="#line1037">1037</a><a class="anker" href="#line1038">1038</a><a class="anker" href="#line1039">1039</a><a class="anker" href="#line1040">1040</a><a class="anker" href="#line1041">1041</a><a class="anker" href="#line1042">1042</a><a class="anker" href="#line1043">1043</a><a class="anker" href="#line1044">1044</a><a class="anker" href="#line1045">1045</a><a class="anker" href="#line1046">1046</a><a class="anker" href="#line1047">1047</a><a class="anker" href="#line1048">1048</a><a class="anker" href="#line1049">1049</a><a class="anker" href="#line1050">1050</a><a class="anker" href="#line1051">1051</a><a class="anker" href="#line1052">1052</a><a class="anker" href="#line1053">1053</a><a class="anker" href="#line1054">1054</a><a class="anker" href="#line1055">1055</a><a class="anker" href="#line1056">1056</a><a class="anker" href="#line1057">1057</a><a class="anker" href="#line1058">1058</a><a class="anker" href="#line1059">1059</a><a class="anker" href="#line1060">1060</a><a class="anker" href="#line1061">1061</a><a class="anker" href="#line1062">1062</a><a class="anker" href="#line1063">1063</a><a class="anker" href="#line1064">1064</a><a class="anker" href="#line1065">1065</a><a class="anker" href="#line1066">1066</a><a class="anker" href="#line1067">1067</a><a class="anker" href="#line1068">1068</a><a class="anker" href="#line1069">1069</a><a class="anker" href="#line1070">1070</a><a class="anker" href="#line1071">1071</a><a class="anker" href="#line1072">1072</a><a class="anker" href="#line1073">1073</a><a class="anker" href="#line1074">1074</a><a class="anker" href="#line1075">1075</a><a class="anker" href="#line1076">1076</a><a class="anker" href="#line1077">1077</a><a class="anker" href="#line1078">1078</a><a class="anker" href="#line1079">1079</a><a class="anker" href="#line1080">1080</a><a class="anker" href="#line1081">1081</a><a class="anker" href="#line1082">1082</a><a class="anker" href="#line1083">1083</a><a class="anker" href="#line1084">1084</a><a class="anker" href="#line1085">1085</a><a class="anker" href="#line1086">1086</a><a class="anker" href="#line1087">1087</a><a class="anker" href="#line1088">1088</a><a class="anker" href="#line1089">1089</a><a class="anker" href="#line1090">1090</a><a class="anker" href="#line1091">1091</a><a class="anker" href="#line1092">1092</a><a class="anker" href="#line1093">1093</a><a class="anker" href="#line1094">1094</a><a class="anker" href="#line1095">1095</a><a class="anker" href="#line1096">1096</a><a class="anker" href="#line1097">1097</a><a class="anker" href="#line1098">1098</a><a class="anker" href="#line1099">1099</a><a class="anker" href="#line1100">1100</a><a class="anker" href="#line1101">1101</a><a class="anker" href="#line1102">1102</a><a class="anker" href="#line1103">1103</a><a class="anker" href="#line1104">1104</a><a class="anker" href="#line1105">1105</a><a class="anker" href="#line1106">1106</a><a class="anker" href="#line1107">1107</a><a class="anker" href="#line1108">1108</a><a class="anker" href="#line1109">1109</a><a class="anker" href="#line1110">1110</a><a class="anker" href="#line1111">1111</a><a class="anker" href="#line1112">1112</a><a class="anker" href="#line1113">1113</a><a class="anker" href="#line1114">1114</a><a class="anker" href="#line1115">1115</a><a class="anker" href="#line1116">1116</a><a class="anker" href="#line1117">1117</a><a class="anker" href="#line1118">1118</a><a class="anker" href="#line1119">1119</a><a class="anker" href="#line1120">1120</a><a class="anker" href="#line1121">1121</a><a class="anker" href="#line1122">1122</a><a class="anker" href="#line1123">1123</a><a class="anker" href="#line1124">1124</a><a class="anker" href="#line1125">1125</a><a class="anker" href="#line1126">1126</a><a class="anker" href="#line1127">1127</a><a class="anker" href="#line1128">1128</a><a class="anker" href="#line1129">1129</a><a class="anker" href="#line1130">1130</a><a class="anker" href="#line1131">1131</a><a class="anker" href="#line1132">1132</a><a class="anker" href="#line1133">1133</a><a class="anker" href="#line1134">1134</a><a class="anker" href="#line1135">1135</a><a class="anker" href="#line1136">1136</a><a class="anker" href="#line1137">1137</a><a class="anker" href="#line1138">1138</a><a class="anker" href="#line1139">1139</a><a class="anker" href="#line1140">1140</a><a class="anker" href="#line1141">1141</a><a class="anker" href="#line1142">1142</a><a class="anker" href="#line1143">1143</a><a class="anker" href="#line1144">1144</a><a class="anker" href="#line1145">1145</a><a class="anker" href="#line1146">1146</a><a class="anker" href="#line1147">1147</a><a class="anker" href="#line1148">1148</a><a class="anker" href="#line1149">1149</a><a class="anker" href="#line1150">1150</a><a class="anker" href="#line1151">1151</a><a class="anker" href="#line1152">1152</a><a class="anker" href="#line1153">1153</a><a class="anker" href="#line1154">1154</a><a class="anker" href="#line1155">1155</a><a class="anker" href="#line1156">1156</a><a class="anker" href="#line1157">1157</a><a class="anker" href="#line1158">1158</a><a class="anker" href="#line1159">1159</a><a class="anker" href="#line1160">1160</a><a class="anker" href="#line1161">1161</a><a class="anker" href="#line1162">1162</a><a class="anker" href="#line1163">1163</a><a class="anker" href="#line1164">1164</a><a class="anker" href="#line1165">1165</a><a class="anker" href="#line1166">1166</a><a class="anker" href="#line1167">1167</a><a class="anker" href="#line1168">1168</a><a class="anker" href="#line1169">1169</a><a class="anker" href="#line1170">1170</a><a class="anker" href="#line1171">1171</a><a class="anker" href="#line1172">1172</a><a class="anker" href="#line1173">1173</a><a class="anker" href="#line1174">1174</a><a class="anker" href="#line1175">1175</a><a class="anker" href="#line1176">1176</a><a class="anker" href="#line1177">1177</a><a class="anker" href="#line1178">1178</a><a class="anker" href="#line1179">1179</a><a class="anker" href="#line1180">1180</a><a class="anker" href="#line1181">1181</a><a class="anker" href="#line1182">1182</a><a class="anker" href="#line1183">1183</a><a class="anker" href="#line1184">1184</a><a class="anker" href="#line1185">1185</a><a class="anker" href="#line1186">1186</a><a class="anker" href="#line1187">1187</a><a class="anker" href="#line1188">1188</a><a class="anker" href="#line1189">1189</a><a class="anker" href="#line1190">1190</a><a class="anker" href="#line1191">1191</a><a class="anker" href="#line1192">1192</a><a class="anker" href="#line1193">1193</a><a class="anker" href="#line1194">1194</a><a class="anker" href="#line1195">1195</a><a class="anker" href="#line1196">1196</a><a class="anker" href="#line1197">1197</a><a class="anker" href="#line1198">1198</a><a class="anker" href="#line1199">1199</a><a class="anker" href="#line1200">1200</a><a class="anker" href="#line1201">1201</a><a class="anker" href="#line1202">1202</a><a class="anker" href="#line1203">1203</a><a class="anker" href="#line1204">1204</a><a class="anker" href="#line1205">1205</a><a class="anker" href="#line1206">1206</a><a class="anker" href="#line1207">1207</a><a class="anker" href="#line1208">1208</a><a class="anker" href="#line1209">1209</a><a class="anker" href="#line1210">1210</a><a class="anker" href="#line1211">1211</a><a class="anker" href="#line1212">1212</a><a class="anker" href="#line1213">1213</a><a class="anker" href="#line1214">1214</a><a class="anker" href="#line1215">1215</a><a class="anker" href="#line1216">1216</a><a class="anker" href="#line1217">1217</a><a class="anker" href="#line1218">1218</a><a class="anker" href="#line1219">1219</a><a class="anker" href="#line1220">1220</a><a class="anker" href="#line1221">1221</a><a class="anker" href="#line1222">1222</a><a class="anker" href="#line1223">1223</a><a class="anker" href="#line1224">1224</a><a class="anker" href="#line1225">1225</a><a class="anker" href="#line1226">1226</a><a class="anker" href="#line1227">1227</a><a class="anker" href="#line1228">1228</a><a class="anker" href="#line1229">1229</a><a class="anker" href="#line1230">1230</a><a class="anker" href="#line1231">1231</a><a class="anker" href="#line1232">1232</a><a class="anker" href="#line1233">1233</a><a class="anker" href="#line1234">1234</a><a class="anker" href="#line1235">1235</a><a class="anker" href="#line1236">1236</a><a class="anker" href="#line1237">1237</a><a class="anker" href="#line1238">1238</a><a class="anker" href="#line1239">1239</a><a class="anker" href="#line1240">1240</a><a class="anker" href="#line1241">1241</a><a class="anker" href="#line1242">1242</a><a class="anker" href="#line1243">1243</a><a class="anker" href="#line1244">1244</a><a class="anker" href="#line1245">1245</a><a class="anker" href="#line1246">1246</a><a class="anker" href="#line1247">1247</a><a class="anker" href="#line1248">1248</a><a class="anker" href="#line1249">1249</a><a class="anker" href="#line1250">1250</a><a class="anker" href="#line1251">1251</a><a class="anker" href="#line1252">1252</a><a class="anker" href="#line1253">1253</a><a class="anker" href="#line1254">1254</a><a class="anker" href="#line1255">1255</a><a class="anker" href="#line1256">1256</a><a class="anker" href="#line1257">1257</a><a class="anker" href="#line1258">1258</a><a class="anker" href="#line1259">1259</a><a class="anker" href="#line1260">1260</a><a class="anker" href="#line1261">1261</a><a class="anker" href="#line1262">1262</a><a class="anker" href="#line1263">1263</a><a class="anker" href="#line1264">1264</a><a class="anker" href="#line1265">1265</a><a class="anker" href="#line1266">1266</a><a class="anker" href="#line1267">1267</a><a class="anker" href="#line1268">1268</a><a class="anker" href="#line1269">1269</a><a class="anker" href="#line1270">1270</a><a class="anker" href="#line1271">1271</a><a class="anker" href="#line1272">1272</a><a class="anker" href="#line1273">1273</a><a class="anker" href="#line1274">1274</a><a class="anker" href="#line1275">1275</a><a class="anker" href="#line1276">1276</a><a class="anker" href="#line1277">1277</a><a class="anker" href="#line1278">1278</a><a class="anker" href="#line1279">1279</a><a class="anker" href="#line1280">1280</a><a class="anker" href="#line1281">1281</a><a class="anker" href="#line1282">1282</a><a class="anker" href="#line1283">1283</a><a class="anker" href="#line1284">1284</a><a class="anker" href="#line1285">1285</a><a class="anker" href="#line1286">1286</a><a class="anker" href="#line1287">1287</a><a class="anker" href="#line1288">1288</a><a class="anker" href="#line1289">1289</a><a class="anker" href="#line1290">1290</a><a class="anker" href="#line1291">1291</a><a class="anker" href="#line1292">1292</a><a class="anker" href="#line1293">1293</a><a class="anker" href="#line1294">1294</a><a class="anker" href="#line1295">1295</a><a class="anker" href="#line1296">1296</a><a class="anker" href="#line1297">1297</a><a class="anker" href="#line1298">1298</a><a class="anker" href="#line1299">1299</a><a class="anker" href="#line1300">1300</a><a class="anker" href="#line1301">1301</a><a class="anker" href="#line1302">1302</a><a class="anker" href="#line1303">1303</a><a class="anker" href="#line1304">1304</a><a class="anker" href="#line1305">1305</a><a class="anker" href="#line1306">1306</a><a class="anker" href="#line1307">1307</a><a class="anker" href="#line1308">1308</a><a class="anker" href="#line1309">1309</a><a class="anker" href="#line1310">1310</a><a class="anker" href="#line1311">1311</a><a class="anker" href="#line1312">1312</a><a class="anker" href="#line1313">1313</a><a class="anker" href="#line1314">1314</a><a class="anker" href="#line1315">1315</a><a class="anker" href="#line1316">1316</a><a class="anker" href="#line1317">1317</a><a class="anker" href="#line1318">1318</a><a class="anker" href="#line1319">1319</a><a class="anker" href="#line1320">1320</a><a class="anker" href="#line1321">1321</a><a class="anker" href="#line1322">1322</a><a class="anker" href="#line1323">1323</a><a class="anker" href="#line1324">1324</a><a class="anker" href="#line1325">1325</a><a class="anker" href="#line1326">1326</a><a class="anker" href="#line1327">1327</a><a class="anker" href="#line1328">1328</a><a class="anker" href="#line1329">1329</a><a class="anker" href="#line1330">1330</a><a class="anker" href="#line1331">1331</a><a class="anker" href="#line1332">1332</a><a class="anker" href="#line1333">1333</a><a class="anker" href="#line1334">1334</a><a class="anker" href="#line1335">1335</a><a class="anker" href="#line1336">1336</a><a class="anker" href="#line1337">1337</a><a class="anker" href="#line1338">1338</a><a class="anker" href="#line1339">1339</a><a class="anker" href="#line1340">1340</a><a class="anker" href="#line1341">1341</a><a class="anker" href="#line1342">1342</a><a class="anker" href="#line1343">1343</a><a class="anker" href="#line1344">1344</a><a class="anker" href="#line1345">1345</a><a class="anker" href="#line1346">1346</a><a class="anker" href="#line1347">1347</a><a class="anker" href="#line1348">1348</a><a class="anker" href="#line1349">1349</a><a class="anker" href="#line1350">1350</a><a class="anker" href="#line1351">1351</a><a class="anker" href="#line1352">1352</a><a class="anker" href="#line1353">1353</a><a class="anker" href="#line1354">1354</a><a class="anker" href="#line1355">1355</a><a class="anker" href="#line1356">1356</a><a class="anker" href="#line1357">1357</a><a class="anker" href="#line1358">1358</a><a class="anker" href="#line1359">1359</a><a class="anker" href="#line1360">1360</a><a class="anker" href="#line1361">1361</a><a class="anker" href="#line1362">1362</a><a class="anker" href="#line1363">1363</a><a class="anker" href="#line1364">1364</a><a class="anker" href="#line1365">1365</a><a class="anker" href="#line1366">1366</a><a class="anker" href="#line1367">1367</a><a class="anker" href="#line1368">1368</a><a class="anker" href="#line1369">1369</a><a class="anker" href="#line1370">1370</a><a class="anker" href="#line1371">1371</a><a class="anker" href="#line1372">1372</a><a class="anker" href="#line1373">1373</a><a class="anker" href="#line1374">1374</a><a class="anker" href="#line1375">1375</a><a class="anker" href="#line1376">1376</a><a class="anker" href="#line1377">1377</a><a class="anker" href="#line1378">1378</a><a class="anker" href="#line1379">1379</a><a class="anker" href="#line1380">1380</a><a class="anker" href="#line1381">1381</a><a class="anker" href="#line1382">1382</a><a class="anker" href="#line1383">1383</a><a class="anker" href="#line1384">1384</a><a class="anker" href="#line1385">1385</a><a class="anker" href="#line1386">1386</a><a class="anker" href="#line1387">1387</a><a class="anker" href="#line1388">1388</a><a class="anker" href="#line1389">1389</a><a class="anker" href="#line1390">1390</a><a class="anker" href="#line1391">1391</a><a class="anker" href="#line1392">1392</a><a class="anker" href="#line1393">1393</a><a class="anker" href="#line1394">1394</a><a class="anker" href="#line1395">1395</a><a class="anker" href="#line1396">1396</a><a class="anker" href="#line1397">1397</a><a class="anker" href="#line1398">1398</a><a class="anker" href="#line1399">1399</a><a class="anker" href="#line1400">1400</a><a class="anker" href="#line1401">1401</a><a class="anker" href="#line1402">1402</a><a class="anker" href="#line1403">1403</a><a class="anker" href="#line1404">1404</a><a class="anker" href="#line1405">1405</a><a class="anker" href="#line1406">1406</a><a class="anker" href="#line1407">1407</a><a class="anker" href="#line1408">1408</a><a class="anker" href="#line1409">1409</a><a class="anker" href="#line1410">1410</a><a class="anker" href="#line1411">1411</a><a class="anker" href="#line1412">1412</a><a class="anker" href="#line1413">1413</a><a class="anker" href="#line1414">1414</a><a class="anker" href="#line1415">1415</a><a class="anker" href="#line1416">1416</a><a class="anker" href="#line1417">1417</a><a class="anker" href="#line1418">1418</a><a class="anker" href="#line1419">1419</a><a class="anker" href="#line1420">1420</a><a class="anker" href="#line1421">1421</a><a class="anker" href="#line1422">1422</a><a class="anker" href="#line1423">1423</a><a class="anker" href="#line1424">1424</a><a class="anker" href="#line1425">1425</a><a class="anker" href="#line1426">1426</a><a class="anker" href="#line1427">1427</a><a class="anker" href="#line1428">1428</a><a class="anker" href="#line1429">1429</a><a class="anker" href="#line1430">1430</a><a class="anker" href="#line1431">1431</a><a class="anker" href="#line1432">1432</a><a class="anker" href="#line1433">1433</a><a class="anker" href="#line1434">1434</a><a class="anker" href="#line1435">1435</a><a class="anker" href="#line1436">1436</a><a class="anker" href="#line1437">1437</a><a class="anker" href="#line1438">1438</a><a class="anker" href="#line1439">1439</a><a class="anker" href="#line1440">1440</a><a class="anker" href="#line1441">1441</a><a class="anker" href="#line1442">1442</a><a class="anker" href="#line1443">1443</a><a class="anker" href="#line1444">1444</a><a class="anker" href="#line1445">1445</a><a class="anker" href="#line1446">1446</a><a class="anker" href="#line1447">1447</a><a class="anker" href="#line1448">1448</a><a class="anker" href="#line1449">1449</a><a class="anker" href="#line1450">1450</a><a class="anker" href="#line1451">1451</a><a class="anker" href="#line1452">1452</a><a class="anker" href="#line1453">1453</a><a class="anker" href="#line1454">1454</a><a class="anker" href="#line1455">1455</a><a class="anker" href="#line1456">1456</a><a class="anker" href="#line1457">1457</a><a class="anker" href="#line1458">1458</a><a class="anker" href="#line1459">1459</a><a class="anker" href="#line1460">1460</a><a class="anker" href="#line1461">1461</a><a class="anker" href="#line1462">1462</a><a class="anker" href="#line1463">1463</a><a class="anker" href="#line1464">1464</a><a class="anker" href="#line1465">1465</a><a class="anker" href="#line1466">1466</a><a class="anker" href="#line1467">1467</a><a class="anker" href="#line1468">1468</a><a class="anker" href="#line1469">1469</a><a class="anker" href="#line1470">1470</a><a class="anker" href="#line1471">1471</a><a class="anker" href="#line1472">1472</a><a class="anker" href="#line1473">1473</a><a class="anker" href="#line1474">1474</a><a class="anker" href="#line1475">1475</a><a class="anker" href="#line1476">1476</a><a class="anker" href="#line1477">1477</a><a class="anker" href="#line1478">1478</a><a class="anker" href="#line1479">1479</a><a class="anker" href="#line1480">1480</a><a class="anker" href="#line1481">1481</a><a class="anker" href="#line1482">1482</a><a class="anker" href="#line1483">1483</a><a class="anker" href="#line1484">1484</a><a class="anker" href="#line1485">1485</a><a class="anker" href="#line1486">1486</a><a class="anker" href="#line1487">1487</a><a class="anker" href="#line1488">1488</a><a class="anker" href="#line1489">1489</a><a class="anker" href="#line1490">1490</a><a class="anker" href="#line1491">1491</a><a class="anker" href="#line1492">1492</a><a class="anker" href="#line1493">1493</a><a class="anker" href="#line1494">1494</a><a class="anker" href="#line1495">1495</a><a class="anker" href="#line1496">1496</a><a class="anker" href="#line1497">1497</a><a class="anker" href="#line1498">1498</a><a class="anker" href="#line1499">1499</a><a class="anker" href="#line1500">1500</a><a class="anker" href="#line1501">1501</a><a class="anker" href="#line1502">1502</a><a class="anker" href="#line1503">1503</a><a class="anker" href="#line1504">1504</a><a class="anker" href="#line1505">1505</a><a class="anker" href="#line1506">1506</a><a class="anker" href="#line1507">1507</a><a class="anker" href="#line1508">1508</a><a class="anker" href="#line1509">1509</a><a class="anker" href="#line1510">1510</a><a class="anker" href="#line1511">1511</a><a class="anker" href="#line1512">1512</a><a class="anker" href="#line1513">1513</a><a class="anker" href="#line1514">1514</a><a class="anker" href="#line1515">1515</a><a class="anker" href="#line1516">1516</a><a class="anker" href="#line1517">1517</a><a class="anker" href="#line1518">1518</a><a class="anker" href="#line1519">1519</a><a class="anker" href="#line1520">1520</a><a class="anker" href="#line1521">1521</a><a class="anker" href="#line1522">1522</a><a class="anker" href="#line1523">1523</a><a class="anker" href="#line1524">1524</a><a class="anker" href="#line1525">1525</a><a class="anker" href="#line1526">1526</a><a class="anker" href="#line1527">1527</a><a class="anker" href="#line1528">1528</a><a class="anker" href="#line1529">1529</a><a class="anker" href="#line1530">1530</a><a class="anker" href="#line1531">1531</a><a class="anker" href="#line1532">1532</a><a class="anker" href="#line1533">1533</a><a class="anker" href="#line1534">1534</a><a class="anker" href="#line1535">1535</a><a class="anker" href="#line1536">1536</a><a class="anker" href="#line1537">1537</a><a class="anker" href="#line1538">1538</a><a class="anker" href="#line1539">1539</a><a class="anker" href="#line1540">1540</a><a class="anker" href="#line1541">1541</a><a class="anker" href="#line1542">1542</a><a class="anker" href="#line1543">1543</a><a class="anker" href="#line1544">1544</a><a class="anker" href="#line1545">1545</a><a class="anker" href="#line1546">1546</a><a class="anker" href="#line1547">1547</a><a class="anker" href="#line1548">1548</a><a class="anker" href="#line1549">1549</a><a class="anker" href="#line1550">1550</a><a class="anker" href="#line1551">1551</a><a class="anker" href="#line1552">1552</a><a class="anker" href="#line1553">1553</a><a class="anker" href="#line1554">1554</a><a class="anker" href="#line1555">1555</a><a class="anker" href="#line1556">1556</a><a class="anker" href="#line1557">1557</a><a class="anker" href="#line1558">1558</a><a class="anker" href="#line1559">1559</a><a class="anker" href="#line1560">1560</a><a class="anker" href="#line1561">1561</a><a class="anker" href="#line1562">1562</a><a class="anker" href="#line1563">1563</a><a class="anker" href="#line1564">1564</a><a class="anker" href="#line1565">1565</a><a class="anker" href="#line1566">1566</a><a class="anker" href="#line1567">1567</a><a class="anker" href="#line1568">1568</a><a class="anker" href="#line1569">1569</a><a class="anker" href="#line1570">1570</a><a class="anker" href="#line1571">1571</a><a class="anker" href="#line1572">1572</a><a class="anker" href="#line1573">1573</a><a class="anker" href="#line1574">1574</a><a class="anker" href="#line1575">1575</a><a class="anker" href="#line1576">1576</a><a class="anker" href="#line1577">1577</a><a class="anker" href="#line1578">1578</a><a class="anker" href="#line1579">1579</a><a class="anker" href="#line1580">1580</a><a class="anker" href="#line1581">1581</a><a class="anker" href="#line1582">1582</a><a class="anker" href="#line1583">1583</a><a class="anker" href="#line1584">1584</a><a class="anker" href="#line1585">1585</a><a class="anker" href="#line1586">1586</a><a class="anker" href="#line1587">1587</a><a class="anker" href="#line1588">1588</a><a class="anker" href="#line1589">1589</a><a class="anker" href="#line1590">1590</a><a class="anker" href="#line1591">1591</a><a class="anker" href="#line1592">1592</a><a class="anker" href="#line1593">1593</a><a class="anker" href="#line1594">1594</a><a class="anker" href="#line1595">1595</a><a class="anker" href="#line1596">1596</a><a class="anker" href="#line1597">1597</a><a class="anker" href="#line1598">1598</a><a class="anker" href="#line1599">1599</a><a class="anker" href="#line1600">1600</a><a class="anker" href="#line1601">1601</a><a class="anker" href="#line1602">1602</a><a class="anker" href="#line1603">1603</a><a class="anker" href="#line1604">1604</a><a class="anker" href="#line1605">1605</a><a class="anker" href="#line1606">1606</a><a class="anker" href="#line1607">1607</a><a class="anker" href="#line1608">1608</a><a class="anker" href="#line1609">1609</a><a class="anker" href="#line1610">1610</a><a class="anker" href="#line1611">1611</a><a class="anker" href="#line1612">1612</a><a class="anker" href="#line1613">1613</a><a class="anker" href="#line1614">1614</a><a class="anker" href="#line1615">1615</a><a class="anker" href="#line1616">1616</a><a class="anker" href="#line1617">1617</a><a class="anker" href="#line1618">1618</a><a class="anker" href="#line1619">1619</a><a class="anker" href="#line1620">1620</a><a class="anker" href="#line1621">1621</a><a class="anker" href="#line1622">1622</a><a class="anker" href="#line1623">1623</a><a class="anker" href="#line1624">1624</a><a class="anker" href="#line1625">1625</a><a class="anker" href="#line1626">1626</a><a class="anker" href="#line1627">1627</a><a class="anker" href="#line1628">1628</a><a class="anker" href="#line1629">1629</a><a class="anker" href="#line1630">1630</a><a class="anker" href="#line1631">1631</a><a class="anker" href="#line1632">1632</a><a class="anker" href="#line1633">1633</a><a class="anker" href="#line1634">1634</a><a class="anker" href="#line1635">1635</a><a class="anker" href="#line1636">1636</a><a class="anker" href="#line1637">1637</a><a class="anker" href="#line1638">1638</a><a class="anker" href="#line1639">1639</a><a class="anker" href="#line1640">1640</a><a class="anker" href="#line1641">1641</a><a class="anker" href="#line1642">1642</a><a class="anker" href="#line1643">1643</a><a class="anker" href="#line1644">1644</a><a class="anker" href="#line1645">1645</a><a class="anker" href="#line1646">1646</a><a class="anker" href="#line1647">1647</a><a class="anker" href="#line1648">1648</a><a class="anker" href="#line1649">1649</a><a class="anker" href="#line1650">1650</a><a class="anker" href="#line1651">1651</a><a class="anker" href="#line1652">1652</a><a class="anker" href="#line1653">1653</a><a class="anker" href="#line1654">1654</a><a class="anker" href="#line1655">1655</a><a class="anker" href="#line1656">1656</a><a class="anker" href="#line1657">1657</a><a class="anker" href="#line1658">1658</a><a class="anker" href="#line1659">1659</a><a class="anker" href="#line1660">1660</a><a class="anker" href="#line1661">1661</a><a class="anker" href="#line1662">1662</a><a class="anker" href="#line1663">1663</a><a class="anker" href="#line1664">1664</a><a class="anker" href="#line1665">1665</a><a class="anker" href="#line1666">1666</a><a class="anker" href="#line1667">1667</a><a class="anker" href="#line1668">1668</a><a class="anker" href="#line1669">1669</a><a class="anker" href="#line1670">1670</a><a class="anker" href="#line1671">1671</a><a class="anker" href="#line1672">1672</a><a class="anker" href="#line1673">1673</a><a class="anker" href="#line1674">1674</a><a class="anker" href="#line1675">1675</a><a class="anker" href="#line1676">1676</a><a class="anker" href="#line1677">1677</a><a class="anker" href="#line1678">1678</a><a class="anker" href="#line1679">1679</a><a class="anker" href="#line1680">1680</a><a class="anker" href="#line1681">1681</a><a class="anker" href="#line1682">1682</a><a class="anker" href="#line1683">1683</a><a class="anker" href="#line1684">1684</a><a class="anker" href="#line1685">1685</a><a class="anker" href="#line1686">1686</a><a class="anker" href="#line1687">1687</a><a class="anker" href="#line1688">1688</a><a class="anker" href="#line1689">1689</a><a class="anker" href="#line1690">1690</a><a class="anker" href="#line1691">1691</a><a class="anker" href="#line1692">1692</a><a class="anker" href="#line1693">1693</a><a class="anker" href="#line1694">1694</a><a class="anker" href="#line1695">1695</a><a class="anker" href="#line1696">1696</a><a class="anker" href="#line1697">1697</a><a class="anker" href="#line1698">1698</a><a class="anker" href="#line1699">1699</a><a class="anker" href="#line1700">1700</a><a class="anker" href="#line1701">1701</a><a class="anker" href="#line1702">1702</a><a class="anker" href="#line1703">1703</a><a class="anker" href="#line1704">1704</a><a class="anker" href="#line1705">1705</a><a class="anker" href="#line1706">1706</a><a class="anker" href="#line1707">1707</a><a class="anker" href="#line1708">1708</a><a class="anker" href="#line1709">1709</a><a class="anker" href="#line1710">1710</a><a class="anker" href="#line1711">1711</a><a class="anker" href="#line1712">1712</a><a class="anker" href="#line1713">1713</a><a class="anker" href="#line1714">1714</a><a class="anker" href="#line1715">1715</a><a class="anker" href="#line1716">1716</a><a class="anker" href="#line1717">1717</a><a class="anker" href="#line1718">1718</a><a class="anker" href="#line1719">1719</a><a class="anker" href="#line1720">1720</a><a class="anker" href="#line1721">1721</a><a class="anker" href="#line1722">1722</a><a class="anker" href="#line1723">1723</a><a class="anker" href="#line1724">1724</a><a class="anker" href="#line1725">1725</a><a class="anker" href="#line1726">1726</a><a class="anker" href="#line1727">1727</a><a class="anker" href="#line1728">1728</a><a class="anker" href="#line1729">1729</a><a class="anker" href="#line1730">1730</a><a class="anker" href="#line1731">1731</a><a class="anker" href="#line1732">1732</a><a class="anker" href="#line1733">1733</a><a class="anker" href="#line1734">1734</a><a class="anker" href="#line1735">1735</a><a class="anker" href="#line1736">1736</a><a class="anker" href="#line1737">1737</a><a class="anker" href="#line1738">1738</a><a class="anker" href="#line1739">1739</a><a class="anker" href="#line1740">1740</a><a class="anker" href="#line1741">1741</a><a class="anker" href="#line1742">1742</a><a class="anker" href="#line1743">1743</a><a class="anker" href="#line1744">1744</a><a class="anker" href="#line1745">1745</a><a class="anker" href="#line1746">1746</a><a class="anker" href="#line1747">1747</a><a class="anker" href="#line1748">1748</a><a class="anker" href="#line1749">1749</a><a class="anker" href="#line1750">1750</a><a class="anker" href="#line1751">1751</a><a class="anker" href="#line1752">1752</a><a class="anker" href="#line1753">1753</a><a class="anker" href="#line1754">1754</a><a class="anker" href="#line1755">1755</a><a class="anker" href="#line1756">1756</a><a class="anker" href="#line1757">1757</a><a class="anker" href="#line1758">1758</a><a class="anker" href="#line1759">1759</a><a class="anker" href="#line1760">1760</a><a class="anker" href="#line1761">1761</a><a class="anker" href="#line1762">1762</a><a class="anker" href="#line1763">1763</a><a class="anker" href="#line1764">1764</a><a class="anker" href="#line1765">1765</a><a class="anker" href="#line1766">1766</a><a class="anker" href="#line1767">1767</a><a class="anker" href="#line1768">1768</a><a class="anker" href="#line1769">1769</a><a class="anker" href="#line1770">1770</a><a class="anker" href="#line1771">1771</a><a class="anker" href="#line1772">1772</a><a class="anker" href="#line1773">1773</a><a class="anker" href="#line1774">1774</a><a class="anker" href="#line1775">1775</a><a class="anker" href="#line1776">1776</a><a class="anker" href="#line1777">1777</a><a class="anker" href="#line1778">1778</a><a class="anker" href="#line1779">1779</a><a class="anker" href="#line1780">1780</a><a class="anker" href="#line1781">1781</a><a class="anker" href="#line1782">1782</a><a class="anker" href="#line1783">1783</a><a class="anker" href="#line1784">1784</a><a class="anker" href="#line1785">1785</a><a class="anker" href="#line1786">1786</a><a class="anker" href="#line1787">1787</a><a class="anker" href="#line1788">1788</a><a class="anker" href="#line1789">1789</a><a class="anker" href="#line1790">1790</a><a class="anker" href="#line1791">1791</a><a class="anker" href="#line1792">1792</a><a class="anker" href="#line1793">1793</a><a class="anker" href="#line1794">1794</a><a class="anker" href="#line1795">1795</a><a class="anker" href="#line1796">1796</a><a class="anker" href="#line1797">1797</a><a class="anker" href="#line1798">1798</a><a class="anker" href="#line1799">1799</a><a class="anker" href="#line1800">1800</a><a class="anker" href="#line1801">1801</a><a class="anker" href="#line1802">1802</a><a class="anker" href="#line1803">1803</a><a class="anker" href="#line1804">1804</a><a class="anker" href="#line1805">1805</a><a class="anker" href="#line1806">1806</a><a class="anker" href="#line1807">1807</a><a class="anker" href="#line1808">1808</a><a class="anker" href="#line1809">1809</a><a class="anker" href="#line1810">1810</a><a class="anker" href="#line1811">1811</a><a class="anker" href="#line1812">1812</a><a class="anker" href="#line1813">1813</a><a class="anker" href="#line1814">1814</a><a class="anker" href="#line1815">1815</a><a class="anker" href="#line1816">1816</a><a class="anker" href="#line1817">1817</a><a class="anker" href="#line1818">1818</a><a class="anker" href="#line1819">1819</a><a class="anker" href="#line1820">1820</a><a class="anker" href="#line1821">1821</a><a class="anker" href="#line1822">1822</a><a class="anker" href="#line1823">1823</a><a class="anker" href="#line1824">1824</a><a class="anker" href="#line1825">1825</a><a class="anker" href="#line1826">1826</a><a class="anker" href="#line1827">1827</a><a class="anker" href="#line1828">1828</a><a class="anker" href="#line1829">1829</a><a class="anker" href="#line1830">1830</a><a class="anker" href="#line1831">1831</a><a class="anker" href="#line1832">1832</a><a class="anker" href="#line1833">1833</a><a class="anker" href="#line1834">1834</a><a class="anker" href="#line1835">1835</a><a class="anker" href="#line1836">1836</a><a class="anker" href="#line1837">1837</a><a class="anker" href="#line1838">1838</a><a class="anker" href="#line1839">1839</a><a class="anker" href="#line1840">1840</a><a class="anker" href="#line1841">1841</a><a class="anker" href="#line1842">1842</a><a class="anker" href="#line1843">1843</a><a class="anker" href="#line1844">1844</a><a class="anker" href="#line1845">1845</a><a class="anker" href="#line1846">1846</a><a class="anker" href="#line1847">1847</a><a class="anker" href="#line1848">1848</a><a class="anker" href="#line1849">1849</a><a class="anker" href="#line1850">1850</a><a class="anker" href="#line1851">1851</a><a class="anker" href="#line1852">1852</a><a class="anker" href="#line1853">1853</a><a class="anker" href="#line1854">1854</a><a class="anker" href="#line1855">1855</a><a class="anker" href="#line1856">1856</a><a class="anker" href="#line1857">1857</a><a class="anker" href="#line1858">1858</a><a class="anker" href="#line1859">1859</a><a class="anker" href="#line1860">1860</a><a class="anker" href="#line1861">1861</a><a class="anker" href="#line1862">1862</a><a class="anker" href="#line1863">1863</a><a class="anker" href="#line1864">1864</a><a class="anker" href="#line1865">1865</a><a class="anker" href="#line1866">1866</a><a class="anker" href="#line1867">1867</a><a class="anker" href="#line1868">1868</a><a class="anker" href="#line1869">1869</a><a class="anker" href="#line1870">1870</a><a class="anker" href="#line1871">1871</a><a class="anker" href="#line1872">1872</a><a class="anker" href="#line1873">1873</a><a class="anker" href="#line1874">1874</a><a class="anker" href="#line1875">1875</a><a class="anker" href="#line1876">1876</a><a class="anker" href="#line1877">1877</a><a class="anker" href="#line1878">1878</a><a class="anker" href="#line1879">1879</a><a class="anker" href="#line1880">1880</a><a class="anker" href="#line1881">1881</a><a class="anker" href="#line1882">1882</a><a class="anker" href="#line1883">1883</a><a class="anker" href="#line1884">1884</a><a class="anker" href="#line1885">1885</a><a class="anker" href="#line1886">1886</a><a class="anker" href="#line1887">1887</a><a class="anker" href="#line1888">1888</a><a class="anker" href="#line1889">1889</a><a class="anker" href="#line1890">1890</a><a class="anker" href="#line1891">1891</a><a class="anker" href="#line1892">1892</a><a class="anker" href="#line1893">1893</a><a class="anker" href="#line1894">1894</a><a class="anker" href="#line1895">1895</a><a class="anker" href="#line1896">1896</a><a class="anker" href="#line1897">1897</a><a class="anker" href="#line1898">1898</a><a class="anker" href="#line1899">1899</a><a class="anker" href="#line1900">1900</a><a class="anker" href="#line1901">1901</a><a class="anker" href="#line1902">1902</a><a class="anker" href="#line1903">1903</a><a class="anker" href="#line1904">1904</a><a class="anker" href="#line1905">1905</a><a class="anker" href="#line1906">1906</a><a class="anker" href="#line1907">1907</a><a class="anker" href="#line1908">1908</a><a class="anker" href="#line1909">1909</a><a class="anker" href="#line1910">1910</a><a class="anker" href="#line1911">1911</a><a class="anker" href="#line1912">1912</a><a class="anker" href="#line1913">1913</a><a class="anker" href="#line1914">1914</a><a class="anker" href="#line1915">1915</a><a class="anker" href="#line1916">1916</a><a class="anker" href="#line1917">1917</a><a class="anker" href="#line1918">1918</a><a class="anker" href="#line1919">1919</a><a class="anker" href="#line1920">1920</a><a class="anker" href="#line1921">1921</a><a class="anker" href="#line1922">1922</a><a class="anker" href="#line1923">1923</a><a class="anker" href="#line1924">1924</a><a class="anker" href="#line1925">1925</a><a class="anker" href="#line1926">1926</a><a class="anker" href="#line1927">1927</a><a class="anker" href="#line1928">1928</a><a class="anker" href="#line1929">1929</a><a class="anker" href="#line1930">1930</a><a class="anker" href="#line1931">1931</a><a class="anker" href="#line1932">1932</a><a class="anker" href="#line1933">1933</a><a class="anker" href="#line1934">1934</a><a class="anker" href="#line1935">1935</a><a class="anker" href="#line1936">1936</a><a class="anker" href="#line1937">1937</a><a class="anker" href="#line1938">1938</a><a class="anker" href="#line1939">1939</a><a class="anker" href="#line1940">1940</a><a class="anker" href="#line1941">1941</a><a class="anker" href="#line1942">1942</a><a class="anker" href="#line1943">1943</a><a class="anker" href="#line1944">1944</a><a class="anker" href="#line1945">1945</a><a class="anker" href="#line1946">1946</a><a class="anker" href="#line1947">1947</a><a class="anker" href="#line1948">1948</a><a class="anker" href="#line1949">1949</a><a class="anker" href="#line1950">1950</a><a class="anker" href="#line1951">1951</a><a class="anker" href="#line1952">1952</a><a class="anker" href="#line1953">1953</a><a class="anker" href="#line1954">1954</a><a class="anker" href="#line1955">1955</a><a class="anker" href="#line1956">1956</a><a class="anker" href="#line1957">1957</a><a class="anker" href="#line1958">1958</a><a class="anker" href="#line1959">1959</a><a class="anker" href="#line1960">1960</a><a class="anker" href="#line1961">1961</a><a class="anker" href="#line1962">1962</a><a class="anker" href="#line1963">1963</a><a class="anker" href="#line1964">1964</a><a class="anker" href="#line1965">1965</a><a class="anker" href="#line1966">1966</a><a class="anker" href="#line1967">1967</a><a class="anker" href="#line1968">1968</a><a class="anker" href="#line1969">1969</a><a class="anker" href="#line1970">1970</a><a class="anker" href="#line1971">1971</a><a class="anker" href="#line1972">1972</a><a class="anker" href="#line1973">1973</a><a class="anker" href="#line1974">1974</a><a class="anker" href="#line1975">1975</a><a class="anker" href="#line1976">1976</a><a class="anker" href="#line1977">1977</a><a class="anker" href="#line1978">1978</a><a class="anker" href="#line1979">1979</a><a class="anker" href="#line1980">1980</a><a class="anker" href="#line1981">1981</a><a class="anker" href="#line1982">1982</a><a class="anker" href="#line1983">1983</a><a class="anker" href="#line1984">1984</a><a class="anker" href="#line1985">1985</a><a class="anker" href="#line1986">1986</a><a class="anker" href="#line1987">1987</a><a class="anker" href="#line1988">1988</a><a class="anker" href="#line1989">1989</a><a class="anker" href="#line1990">1990</a><a class="anker" href="#line1991">1991</a><a class="anker" href="#line1992">1992</a><a class="anker" href="#line1993">1993</a><a class="anker" href="#line1994">1994</a><a class="anker" href="#line1995">1995</a><a class="anker" href="#line1996">1996</a><a class="anker" href="#line1997">1997</a><a class="anker" href="#line1998">1998</a><a class="anker" href="#line1999">1999</a><a class="anker" href="#line2000">2000</a><a class="anker" href="#line2001">2001</a><a class="anker" href="#line2002">2002</a><a class="anker" href="#line2003">2003</a><a class="anker" href="#line2004">2004</a><a class="anker" href="#line2005">2005</a><a class="anker" href="#line2006">2006</a><a class="anker" href="#line2007">2007</a><a class="anker" href="#line2008">2008</a><a class="anker" href="#line2009">2009</a><a class="anker" href="#line2010">2010</a><a class="anker" href="#line2011">2011</a><a class="anker" href="#line2012">2012</a><a class="anker" href="#line2013">2013</a><a class="anker" href="#line2014">2014</a><a class="anker" href="#line2015">2015</a><a class="anker" href="#line2016">2016</a><a class="anker" href="#line2017">2017</a><a class="anker" href="#line2018">2018</a><a class="anker" href="#line2019">2019</a><a class="anker" href="#line2020">2020</a><a class="anker" href="#line2021">2021</a><a class="anker" href="#line2022">2022</a><a class="anker" href="#line2023">2023</a><a class="anker" href="#line2024">2024</a><a class="anker" href="#line2025">2025</a><a class="anker" href="#line2026">2026</a><a class="anker" href="#line2027">2027</a><a class="anker" href="#line2028">2028</a><a class="anker" href="#line2029">2029</a><a class="anker" href="#line2030">2030</a><a class="anker" href="#line2031">2031</a><a class="anker" href="#line2032">2032</a><a class="anker" href="#line2033">2033</a><a class="anker" href="#line2034">2034</a><a class="anker" href="#line2035">2035</a><a class="anker" href="#line2036">2036</a><a class="anker" href="#line2037">2037</a><a class="anker" href="#line2038">2038</a><a class="anker" href="#line2039">2039</a><a class="anker" href="#line2040">2040</a><a class="anker" href="#line2041">2041</a><a class="anker" href="#line2042">2042</a><a class="anker" href="#line2043">2043</a><a class="anker" href="#line2044">2044</a><a class="anker" href="#line2045">2045</a><a class="anker" href="#line2046">2046</a><a class="anker" href="#line2047">2047</a><a class="anker" href="#line2048">2048</a><a class="anker" href="#line2049">2049</a><a class="anker" href="#line2050">2050</a><a class="anker" href="#line2051">2051</a><a class="anker" href="#line2052">2052</a><a class="anker" href="#line2053">2053</a><a class="anker" href="#line2054">2054</a><a class="anker" href="#line2055">2055</a><a class="anker" href="#line2056">2056</a><a class="anker" href="#line2057">2057</a><a class="anker" href="#line2058">2058</a><a class="anker" href="#line2059">2059</a><a class="anker" href="#line2060">2060</a><a class="anker" href="#line2061">2061</a><a class="anker" href="#line2062">2062</a><a class="anker" href="#line2063">2063</a><a class="anker" href="#line2064">2064</a><a class="anker" href="#line2065">2065</a><a class="anker" href="#line2066">2066</a><a class="anker" href="#line2067">2067</a><a class="anker" href="#line2068">2068</a><a class="anker" href="#line2069">2069</a><a class="anker" href="#line2070">2070</a><a class="anker" href="#line2071">2071</a><a class="anker" href="#line2072">2072</a><a class="anker" href="#line2073">2073</a><a class="anker" href="#line2074">2074</a><a class="anker" href="#line2075">2075</a><a class="anker" href="#line2076">2076</a><a class="anker" href="#line2077">2077</a><a class="anker" href="#line2078">2078</a><a class="anker" href="#line2079">2079</a><a class="anker" href="#line2080">2080</a><a class="anker" href="#line2081">2081</a><a class="anker" href="#line2082">2082</a><a class="anker" href="#line2083">2083</a><a class="anker" href="#line2084">2084</a><a class="anker" href="#line2085">2085</a><a class="anker" href="#line2086">2086</a><a class="anker" href="#line2087">2087</a><a class="anker" href="#line2088">2088</a><a class="anker" href="#line2089">2089</a><a class="anker" href="#line2090">2090</a><a class="anker" href="#line2091">2091</a><a class="anker" href="#line2092">2092</a><a class="anker" href="#line2093">2093</a><a class="anker" href="#line2094">2094</a><a class="anker" href="#line2095">2095</a><a class="anker" href="#line2096">2096</a><a class="anker" href="#line2097">2097</a><a class="anker" href="#line2098">2098</a><a class="anker" href="#line2099">2099</a><a class="anker" href="#line2100">2100</a><a class="anker" href="#line2101">2101</a><a class="anker" href="#line2102">2102</a><a class="anker" href="#line2103">2103</a><a class="anker" href="#line2104">2104</a><a class="anker" href="#line2105">2105</a><a class="anker" href="#line2106">2106</a><a class="anker" href="#line2107">2107</a><a class="anker" href="#line2108">2108</a><a class="anker" href="#line2109">2109</a><a class="anker" href="#line2110">2110</a><a class="anker" href="#line2111">2111</a><a class="anker" href="#line2112">2112</a><a class="anker" href="#line2113">2113</a><a class="anker" href="#line2114">2114</a><a class="anker" href="#line2115">2115</a><a class="anker" href="#line2116">2116</a><a class="anker" href="#line2117">2117</a><a class="anker" href="#line2118">2118</a><a class="anker" href="#line2119">2119</a><a class="anker" href="#line2120">2120</a><a class="anker" href="#line2121">2121</a><a class="anker" href="#line2122">2122</a><a class="anker" href="#line2123">2123</a><a class="anker" href="#line2124">2124</a><a class="anker" href="#line2125">2125</a><a class="anker" href="#line2126">2126</a><a class="anker" href="#line2127">2127</a><a class="anker" href="#line2128">2128</a><a class="anker" href="#line2129">2129</a><a class="anker" href="#line2130">2130</a><a class="anker" href="#line2131">2131</a><a class="anker" href="#line2132">2132</a><a class="anker" href="#line2133">2133</a><a class="anker" href="#line2134">2134</a><a class="anker" href="#line2135">2135</a><a class="anker" href="#line2136">2136</a><a class="anker" href="#line2137">2137</a><a class="anker" href="#line2138">2138</a><a class="anker" href="#line2139">2139</a><a class="anker" href="#line2140">2140</a><a class="anker" href="#line2141">2141</a><a class="anker" href="#line2142">2142</a><a class="anker" href="#line2143">2143</a><a class="anker" href="#line2144">2144</a><a class="anker" href="#line2145">2145</a><a class="anker" href="#line2146">2146</a><a class="anker" href="#line2147">2147</a><a class="anker" href="#line2148">2148</a><a class="anker" href="#line2149">2149</a><a class="anker" href="#line2150">2150</a><a class="anker" href="#line2151">2151</a><a class="anker" href="#line2152">2152</a><a class="anker" href="#line2153">2153</a><a class="anker" href="#line2154">2154</a><a class="anker" href="#line2155">2155</a><a class="anker" href="#line2156">2156</a><a class="anker" href="#line2157">2157</a><a class="anker" href="#line2158">2158</a><a class="anker" href="#line2159">2159</a><a class="anker" href="#line2160">2160</a><a class="anker" href="#line2161">2161</a><a class="anker" href="#line2162">2162</a><a class="anker" href="#line2163">2163</a><a class="anker" href="#line2164">2164</a><a class="anker" href="#line2165">2165</a><a class="anker" href="#line2166">2166</a><a class="anker" href="#line2167">2167</a><a class="anker" href="#line2168">2168</a><a class="anker" href="#line2169">2169</a><a class="anker" href="#line2170">2170</a><a class="anker" href="#line2171">2171</a><a class="anker" href="#line2172">2172</a><a class="anker" href="#line2173">2173</a><a class="anker" href="#line2174">2174</a><a class="anker" href="#line2175">2175</a><a class="anker" href="#line2176">2176</a><a class="anker" href="#line2177">2177</a><a class="anker" href="#line2178">2178</a><a class="anker" href="#line2179">2179</a><a class="anker" href="#line2180">2180</a><a class="anker" href="#line2181">2181</a><a class="anker" href="#line2182">2182</a><a class="anker" href="#line2183">2183</a><a class="anker" href="#line2184">2184</a><a class="anker" href="#line2185">2185</a><a class="anker" href="#line2186">2186</a><a class="anker" href="#line2187">2187</a><a class="anker" href="#line2188">2188</a><a class="anker" href="#line2189">2189</a><a class="anker" href="#line2190">2190</a><a class="anker" href="#line2191">2191</a><a class="anker" href="#line2192">2192</a><a class="anker" href="#line2193">2193</a><a class="anker" href="#line2194">2194</a><a class="anker" href="#line2195">2195</a><a class="anker" href="#line2196">2196</a><a class="anker" href="#line2197">2197</a><a class="anker" href="#line2198">2198</a><a class="anker" href="#line2199">2199</a><a class="anker" href="#line2200">2200</a><a class="anker" href="#line2201">2201</a><a class="anker" href="#line2202">2202</a><a class="anker" href="#line2203">2203</a><a class="anker" href="#line2204">2204</a><a class="anker" href="#line2205">2205</a><a class="anker" href="#line2206">2206</a><a class="anker" href="#line2207">2207</a><a class="anker" href="#line2208">2208</a><a class="anker" href="#line2209">2209</a><a class="anker" href="#line2210">2210</a><a class="anker" href="#line2211">2211</a><a class="anker" href="#line2212">2212</a><a class="anker" href="#line2213">2213</a><a class="anker" href="#line2214">2214</a><a class="anker" href="#line2215">2215</a><a class="anker" href="#line2216">2216</a><a class="anker" href="#line2217">2217</a><a class="anker" href="#line2218">2218</a><a class="anker" href="#line2219">2219</a><a class="anker" href="#line2220">2220</a><a class="anker" href="#line2221">2221</a><a class="anker" href="#line2222">2222</a><a class="anker" href="#line2223">2223</a><a class="anker" href="#line2224">2224</a><a class="anker" href="#line2225">2225</a><a class="anker" href="#line2226">2226</a><a class="anker" href="#line2227">2227</a><a class="anker" href="#line2228">2228</a><a class="anker" href="#line2229">2229</a><a class="anker" href="#line2230">2230</a><a class="anker" href="#line2231">2231</a><a class="anker" href="#line2232">2232</a><a class="anker" href="#line2233">2233</a><a class="anker" href="#line2234">2234</a><a class="anker" href="#line2235">2235</a><a class="anker" href="#line2236">2236</a><a class="anker" href="#line2237">2237</a><a class="anker" href="#line2238">2238</a><a class="anker" href="#line2239">2239</a><a class="anker" href="#line2240">2240</a><a class="anker" href="#line2241">2241</a><a class="anker" href="#line2242">2242</a><a class="anker" href="#line2243">2243</a><a class="anker" href="#line2244">2244</a><a class="anker" href="#line2245">2245</a><a class="anker" href="#line2246">2246</a><a class="anker" href="#line2247">2247</a><a class="anker" href="#line2248">2248</a><a class="anker" href="#line2249">2249</a><a class="anker" href="#line2250">2250</a><a class="anker" href="#line2251">2251</a><a class="anker" href="#line2252">2252</a><a class="anker" href="#line2253">2253</a><a class="anker" href="#line2254">2254</a><a class="anker" href="#line2255">2255</a><a class="anker" href="#line2256">2256</a><a class="anker" href="#line2257">2257</a><a class="anker" href="#line2258">2258</a><a class="anker" href="#line2259">2259</a><a class="anker" href="#line2260">2260</a><a class="anker" href="#line2261">2261</a><a class="anker" href="#line2262">2262</a><a class="anker" href="#line2263">2263</a><a class="anker" href="#line2264">2264</a><a class="anker" href="#line2265">2265</a><a class="anker" href="#line2266">2266</a><a class="anker" href="#line2267">2267</a><a class="anker" href="#line2268">2268</a><a class="anker" href="#line2269">2269</a><a class="anker" href="#line2270">2270</a><a class="anker" href="#line2271">2271</a><a class="anker" href="#line2272">2272</a><a class="anker" href="#line2273">2273</a><a class="anker" href="#line2274">2274</a><a class="anker" href="#line2275">2275</a><a class="anker" href="#line2276">2276</a><a class="anker" href="#line2277">2277</a><a class="anker" href="#line2278">2278</a><a class="anker" href="#line2279">2279</a><a class="anker" href="#line2280">2280</a><a class="anker" href="#line2281">2281</a><a class="anker" href="#line2282">2282</a><a class="anker" href="#line2283">2283</a><a class="anker" href="#line2284">2284</a><a class="anker" href="#line2285">2285</a><a class="anker" href="#line2286">2286</a><a class="anker" href="#line2287">2287</a><a class="anker" href="#line2288">2288</a><a class="anker" href="#line2289">2289</a><a class="anker" href="#line2290">2290</a><a class="anker" href="#line2291">2291</a><a class="anker" href="#line2292">2292</a><a class="anker" href="#line2293">2293</a><a class="anker" href="#line2294">2294</a><a class="anker" href="#line2295">2295</a><a class="anker" href="#line2296">2296</a><a class="anker" href="#line2297">2297</a><a class="anker" href="#line2298">2298</a><a class="anker" href="#line2299">2299</a><a class="anker" href="#line2300">2300</a><a class="anker" href="#line2301">2301</a><a class="anker" href="#line2302">2302</a><a class="anker" href="#line2303">2303</a><a class="anker" href="#line2304">2304</a><a class="anker" href="#line2305">2305</a><a class="anker" href="#line2306">2306</a><a class="anker" href="#line2307">2307</a><a class="anker" href="#line2308">2308</a><a class="anker" href="#line2309">2309</a><a class="anker" href="#line2310">2310</a><a class="anker" href="#line2311">2311</a><a class="anker" href="#line2312">2312</a><a class="anker" href="#line2313">2313</a><a class="anker" href="#line2314">2314</a><a class="anker" href="#line2315">2315</a><a class="anker" href="#line2316">2316</a><a class="anker" href="#line2317">2317</a><a class="anker" href="#line2318">2318</a><a class="anker" href="#line2319">2319</a><a class="anker" href="#line2320">2320</a><a class="anker" href="#line2321">2321</a><a class="anker" href="#line2322">2322</a><a class="anker" href="#line2323">2323</a><a class="anker" href="#line2324">2324</a><a class="anker" href="#line2325">2325</a><a class="anker" href="#line2326">2326</a><a class="anker" href="#line2327">2327</a><a class="anker" href="#line2328">2328</a><a class="anker" href="#line2329">2329</a><a class="anker" href="#line2330">2330</a><a class="anker" href="#line2331">2331</a><a class="anker" href="#line2332">2332</a><a class="anker" href="#line2333">2333</a><a class="anker" href="#line2334">2334</a><a class="anker" href="#line2335">2335</a><a class="anker" href="#line2336">2336</a><a class="anker" href="#line2337">2337</a><a class="anker" href="#line2338">2338</a><a class="anker" href="#line2339">2339</a><a class="anker" href="#line2340">2340</a><a class="anker" href="#line2341">2341</a><a class="anker" href="#line2342">2342</a><a class="anker" href="#line2343">2343</a><a class="anker" href="#line2344">2344</a><a class="anker" href="#line2345">2345</a><a class="anker" href="#line2346">2346</a><a class="anker" href="#line2347">2347</a><a class="anker" href="#line2348">2348</a><a class="anker" href="#line2349">2349</a><a class="anker" href="#line2350">2350</a><a class="anker" href="#line2351">2351</a><a class="anker" href="#line2352">2352</a><a class="anker" href="#line2353">2353</a><a class="anker" href="#line2354">2354</a><a class="anker" href="#line2355">2355</a><a class="anker" href="#line2356">2356</a><a class="anker" href="#line2357">2357</a><a class="anker" href="#line2358">2358</a><a class="anker" href="#line2359">2359</a><a class="anker" href="#line2360">2360</a><a class="anker" href="#line2361">2361</a><a class="anker" href="#line2362">2362</a><a class="anker" href="#line2363">2363</a><a class="anker" href="#line2364">2364</a><a class="anker" href="#line2365">2365</a><a class="anker" href="#line2366">2366</a><a class="anker" href="#line2367">2367</a><a class="anker" href="#line2368">2368</a><a class="anker" href="#line2369">2369</a><a class="anker" href="#line2370">2370</a><a class="anker" href="#line2371">2371</a><a class="anker" href="#line2372">2372</a><a class="anker" href="#line2373">2373</a><a class="anker" href="#line2374">2374</a><a class="anker" href="#line2375">2375</a><a class="anker" href="#line2376">2376</a><a class="anker" href="#line2377">2377</a><a class="anker" href="#line2378">2378</a><a class="anker" href="#line2379">2379</a><a class="anker" href="#line2380">2380</a><a class="anker" href="#line2381">2381</a><a class="anker" href="#line2382">2382</a><a class="anker" href="#line2383">2383</a><a class="anker" href="#line2384">2384</a><a class="anker" href="#line2385">2385</a><a class="anker" href="#line2386">2386</a><a class="anker" href="#line2387">2387</a><a class="anker" href="#line2388">2388</a><a class="anker" href="#line2389">2389</a><a class="anker" href="#line2390">2390</a><a class="anker" href="#line2391">2391</a><a class="anker" href="#line2392">2392</a><a class="anker" href="#line2393">2393</a><a class="anker" href="#line2394">2394</a><a class="anker" href="#line2395">2395</a><a class="anker" href="#line2396">2396</a><a class="anker" href="#line2397">2397</a><a class="anker" href="#line2398">2398</a><a class="anker" href="#line2399">2399</a><a class="anker" href="#line2400">2400</a><a class="anker" href="#line2401">2401</a><a class="anker" href="#line2402">2402</a><a class="anker" href="#line2403">2403</a><a class="anker" href="#line2404">2404</a><a class="anker" href="#line2405">2405</a><a class="anker" href="#line2406">2406</a><a class="anker" href="#line2407">2407</a><a class="anker" href="#line2408">2408</a><a class="anker" href="#line2409">2409</a><a class="anker" href="#line2410">2410</a><a class="anker" href="#line2411">2411</a><a class="anker" href="#line2412">2412</a><a class="anker" href="#line2413">2413</a><a class="anker" href="#line2414">2414</a><a class="anker" href="#line2415">2415</a><a class="anker" href="#line2416">2416</a><a class="anker" href="#line2417">2417</a><a class="anker" href="#line2418">2418</a><a class="anker" href="#line2419">2419</a><a class="anker" href="#line2420">2420</a><a class="anker" href="#line2421">2421</a><a class="anker" href="#line2422">2422</a><a class="anker" href="#line2423">2423</a><a class="anker" href="#line2424">2424</a><a class="anker" href="#line2425">2425</a><a class="anker" href="#line2426">2426</a><a class="anker" href="#line2427">2427</a><a class="anker" href="#line2428">2428</a><a class="anker" href="#line2429">2429</a><a class="anker" href="#line2430">2430</a><a class="anker" href="#line2431">2431</a><a class="anker" href="#line2432">2432</a><a class="anker" href="#line2433">2433</a><a class="anker" href="#line2434">2434</a><a class="anker" href="#line2435">2435</a><a class="anker" href="#line2436">2436</a><a class="anker" href="#line2437">2437</a><a class="anker" href="#line2438">2438</a><a class="anker" href="#line2439">2439</a><a class="anker" href="#line2440">2440</a><a class="anker" href="#line2441">2441</a><a class="anker" href="#line2442">2442</a><a class="anker" href="#line2443">2443</a><a class="anker" href="#line2444">2444</a><a class="anker" href="#line2445">2445</a><a class="anker" href="#line2446">2446</a><a class="anker" href="#line2447">2447</a><a class="anker" href="#line2448">2448</a><a class="anker" href="#line2449">2449</a><a class="anker" href="#line2450">2450</a><a class="anker" href="#line2451">2451</a><a class="anker" href="#line2452">2452</a><a class="anker" href="#line2453">2453</a><a class="anker" href="#line2454">2454</a><a class="anker" href="#line2455">2455</a><a class="anker" href="#line2456">2456</a><a class="anker" href="#line2457">2457</a><a class="anker" href="#line2458">2458</a><a class="anker" href="#line2459">2459</a><a class="anker" href="#line2460">2460</a><a class="anker" href="#line2461">2461</a><a class="anker" href="#line2462">2462</a><a class="anker" href="#line2463">2463</a><a class="anker" href="#line2464">2464</a><a class="anker" href="#line2465">2465</a><a class="anker" href="#line2466">2466</a><a class="anker" href="#line2467">2467</a><a class="anker" href="#line2468">2468</a><a class="anker" href="#line2469">2469</a><a class="anker" href="#line2470">2470</a><a class="anker" href="#line2471">2471</a><a class="anker" href="#line2472">2472</a><a class="anker" href="#line2473">2473</a><a class="anker" href="#line2474">2474</a><a class="anker" href="#line2475">2475</a><a class="anker" href="#line2476">2476</a><a class="anker" href="#line2477">2477</a><a class="anker" href="#line2478">2478</a><a class="anker" href="#line2479">2479</a><a class="anker" href="#line2480">2480</a><a class="anker" href="#line2481">2481</a><a class="anker" href="#line2482">2482</a><a class="anker" href="#line2483">2483</a><a class="anker" href="#line2484">2484</a><a class="anker" href="#line2485">2485</a><a class="anker" href="#line2486">2486</a><a class="anker" href="#line2487">2487</a><a class="anker" href="#line2488">2488</a><a class="anker" href="#line2489">2489</a><a class="anker" href="#line2490">2490</a><a class="anker" href="#line2491">2491</a><a class="anker" href="#line2492">2492</a><a class="anker" href="#line2493">2493</a><a class="anker" href="#line2494">2494</a><a class="anker" href="#line2495">2495</a><a class="anker" href="#line2496">2496</a><a class="anker" href="#line2497">2497</a><a class="anker" href="#line2498">2498</a><a class="anker" href="#line2499">2499</a><a class="anker" href="#line2500">2500</a><a class="anker" href="#line2501">2501</a><a class="anker" href="#line2502">2502</a><a class="anker" href="#line2503">2503</a><a class="anker" href="#line2504">2504</a><a class="anker" href="#line2505">2505</a><a class="anker" href="#line2506">2506</a><a class="anker" href="#line2507">2507</a><a class="anker" href="#line2508">2508</a><a class="anker" href="#line2509">2509</a><a class="anker" href="#line2510">2510</a><a class="anker" href="#line2511">2511</a><a class="anker" href="#line2512">2512</a><a class="anker" href="#line2513">2513</a><a class="anker" href="#line2514">2514</a><a class="anker" href="#line2515">2515</a><a class="anker" href="#line2516">2516</a><a class="anker" href="#line2517">2517</a><a class="anker" href="#line2518">2518</a><a class="anker" href="#line2519">2519</a><a class="anker" href="#line2520">2520</a><a class="anker" href="#line2521">2521</a><a class="anker" href="#line2522">2522</a><a class="anker" href="#line2523">2523</a><a class="anker" href="#line2524">2524</a><a class="anker" href="#line2525">2525</a><a class="anker" href="#line2526">2526</a><a class="anker" href="#line2527">2527</a><a class="anker" href="#line2528">2528</a><a class="anker" href="#line2529">2529</a><a class="anker" href="#line2530">2530</a><a class="anker" href="#line2531">2531</a><a class="anker" href="#line2532">2532</a><a class="anker" href="#line2533">2533</a><a class="anker" href="#line2534">2534</a><a class="anker" href="#line2535">2535</a><a class="anker" href="#line2536">2536</a><a class="anker" href="#line2537">2537</a><a class="anker" href="#line2538">2538</a><a class="anker" href="#line2539">2539</a><a class="anker" href="#line2540">2540</a><a class="anker" href="#line2541">2541</a><a class="anker" href="#line2542">2542</a><a class="anker" href="#line2543">2543</a><a class="anker" href="#line2544">2544</a><a class="anker" href="#line2545">2545</a><a class="anker" href="#line2546">2546</a><a class="anker" href="#line2547">2547</a><a class="anker" href="#line2548">2548</a><a class="anker" href="#line2549">2549</a><a class="anker" href="#line2550">2550</a><a class="anker" href="#line2551">2551</a><a class="anker" href="#line2552">2552</a><a class="anker" href="#line2553">2553</a><a class="anker" href="#line2554">2554</a><a class="anker" href="#line2555">2555</a><a class="anker" href="#line2556">2556</a><a class="anker" href="#line2557">2557</a><a class="anker" href="#line2558">2558</a><a class="anker" href="#line2559">2559</a><a class="anker" href="#line2560">2560</a><a class="anker" href="#line2561">2561</a><a class="anker" href="#line2562">2562</a><a class="anker" href="#line2563">2563</a><a class="anker" href="#line2564">2564</a><a class="anker" href="#line2565">2565</a><a class="anker" href="#line2566">2566</a><a class="anker" href="#line2567">2567</a><a class="anker" href="#line2568">2568</a><a class="anker" href="#line2569">2569</a><a class="anker" href="#line2570">2570</a><a class="anker" href="#line2571">2571</a><a class="anker" href="#line2572">2572</a><a class="anker" href="#line2573">2573</a><a class="anker" href="#line2574">2574</a><a class="anker" href="#line2575">2575</a><a class="anker" href="#line2576">2576</a><a class="anker" href="#line2577">2577</a><a class="anker" href="#line2578">2578</a><a class="anker" href="#line2579">2579</a><a class="anker" href="#line2580">2580</a><a class="anker" href="#line2581">2581</a><a class="anker" href="#line2582">2582</a><a class="anker" href="#line2583">2583</a><a class="anker" href="#line2584">2584</a><a class="anker" href="#line2585">2585</a><a class="anker" href="#line2586">2586</a><a class="anker" href="#line2587">2587</a><a class="anker" href="#line2588">2588</a><a class="anker" href="#line2589">2589</a><a class="anker" href="#line2590">2590</a><a class="anker" href="#line2591">2591</a><a class="anker" href="#line2592">2592</a><a class="anker" href="#line2593">2593</a><a class="anker" href="#line2594">2594</a><a class="anker" href="#line2595">2595</a><a class="anker" href="#line2596">2596</a><a class="anker" href="#line2597">2597</a><a class="anker" href="#line2598">2598</a><a class="anker" href="#line2599">2599</a><a class="anker" href="#line2600">2600</a><a class="anker" href="#line2601">2601</a><a class="anker" href="#line2602">2602</a><a class="anker" href="#line2603">2603</a><a class="anker" href="#line2604">2604</a><a class="anker" href="#line2605">2605</a><a class="anker" href="#line2606">2606</a><a class="anker" href="#line2607">2607</a><a class="anker" href="#line2608">2608</a><a class="anker" href="#line2609">2609</a><a class="anker" href="#line2610">2610</a><a class="anker" href="#line2611">2611</a><a class="anker" href="#line2612">2612</a><a class="anker" href="#line2613">2613</a><a class="anker" href="#line2614">2614</a><a class="anker" href="#line2615">2615</a><a class="anker" href="#line2616">2616</a><a class="anker" href="#line2617">2617</a><a class="anker" href="#line2618">2618</a><a class="anker" href="#line2619">2619</a><a class="anker" href="#line2620">2620</a><a class="anker" href="#line2621">2621</a><a class="anker" href="#line2622">2622</a><a class="anker" href="#line2623">2623</a><a class="anker" href="#line2624">2624</a><a class="anker" href="#line2625">2625</a><a class="anker" href="#line2626">2626</a><a class="anker" href="#line2627">2627</a><a class="anker" href="#line2628">2628</a><a class="anker" href="#line2629">2629</a><a class="anker" href="#line2630">2630</a><a class="anker" href="#line2631">2631</a><a class="anker" href="#line2632">2632</a><a class="anker" href="#line2633">2633</a><a class="anker" href="#line2634">2634</a><a class="anker" href="#line2635">2635</a><a class="anker" href="#line2636">2636</a><a class="anker" href="#line2637">2637</a><a class="anker" href="#line2638">2638</a><a class="anker" href="#line2639">2639</a><a class="anker" href="#line2640">2640</a><a class="anker" href="#line2641">2641</a><a class="anker" href="#line2642">2642</a><a class="anker" href="#line2643">2643</a><a class="anker" href="#line2644">2644</a><a class="anker" href="#line2645">2645</a><a class="anker" href="#line2646">2646</a><a class="anker" href="#line2647">2647</a><a class="anker" href="#line2648">2648</a><a class="anker" href="#line2649">2649</a><a class="anker" href="#line2650">2650</a><a class="anker" href="#line2651">2651</a><a class="anker" href="#line2652">2652</a><a class="anker" href="#line2653">2653</a><a class="anker" href="#line2654">2654</a><a class="anker" href="#line2655">2655</a><a class="anker" href="#line2656">2656</a><a class="anker" href="#line2657">2657</a><a class="anker" href="#line2658">2658</a><a class="anker" href="#line2659">2659</a><a class="anker" href="#line2660">2660</a><a class="anker" href="#line2661">2661</a><a class="anker" href="#line2662">2662</a><a class="anker" href="#line2663">2663</a><a class="anker" href="#line2664">2664</a><a class="anker" href="#line2665">2665</a><a class="anker" href="#line2666">2666</a><a class="anker" href="#line2667">2667</a><a class="anker" href="#line2668">2668</a><a class="anker" href="#line2669">2669</a><a class="anker" href="#line2670">2670</a><a class="anker" href="#line2671">2671</a><a class="anker" href="#line2672">2672</a><a class="anker" href="#line2673">2673</a><a class="anker" href="#line2674">2674</a><a class="anker" href="#line2675">2675</a><a class="anker" href="#line2676">2676</a><a class="anker" href="#line2677">2677</a><a class="anker" href="#line2678">2678</a><a class="anker" href="#line2679">2679</a><a class="anker" href="#line2680">2680</a><a class="anker" href="#line2681">2681</a><a class="anker" href="#line2682">2682</a><a class="anker" href="#line2683">2683</a><a class="anker" href="#line2684">2684</a><a class="anker" href="#line2685">2685</a><a class="anker" href="#line2686">2686</a><a class="anker" href="#line2687">2687</a><a class="anker" href="#line2688">2688</a><a class="anker" href="#line2689">2689</a><a class="anker" href="#line2690">2690</a><a class="anker" href="#line2691">2691</a><a class="anker" href="#line2692">2692</a><a class="anker" href="#line2693">2693</a><a class="anker" href="#line2694">2694</a><a class="anker" href="#line2695">2695</a><a class="anker" href="#line2696">2696</a><a class="anker" href="#line2697">2697</a><a class="anker" href="#line2698">2698</a><a class="anker" href="#line2699">2699</a><a class="anker" href="#line2700">2700</a><a class="anker" href="#line2701">2701</a><a class="anker" href="#line2702">2702</a><a class="anker" href="#line2703">2703</a><a class="anker" href="#line2704">2704</a><a class="anker" href="#line2705">2705</a><a class="anker" href="#line2706">2706</a><a class="anker" href="#line2707">2707</a><a class="anker" href="#line2708">2708</a><a class="anker" href="#line2709">2709</a><a class="anker" href="#line2710">2710</a><a class="anker" href="#line2711">2711</a><a class="anker" href="#line2712">2712</a><a class="anker" href="#line2713">2713</a><a class="anker" href="#line2714">2714</a><a class="anker" href="#line2715">2715</a><a class="anker" href="#line2716">2716</a><a class="anker" href="#line2717">2717</a><a class="anker" href="#line2718">2718</a><a class="anker" href="#line2719">2719</a><a class="anker" href="#line2720">2720</a><a class="anker" href="#line2721">2721</a><a class="anker" href="#line2722">2722</a><a class="anker" href="#line2723">2723</a><a class="anker" href="#line2724">2724</a><a class="anker" href="#line2725">2725</a><a class="anker" href="#line2726">2726</a><a class="anker" href="#line2727">2727</a><a class="anker" href="#line2728">2728</a><a class="anker" href="#line2729">2729</a><a class="anker" href="#line2730">2730</a><a class="anker" href="#line2731">2731</a><a class="anker" href="#line2732">2732</a><a class="anker" href="#line2733">2733</a><a class="anker" href="#line2734">2734</a><a class="anker" href="#line2735">2735</a><a class="anker" href="#line2736">2736</a><a class="anker" href="#line2737">2737</a><a class="anker" href="#line2738">2738</a><a class="anker" href="#line2739">2739</a><a class="anker" href="#line2740">2740</a><a class="anker" href="#line2741">2741</a><a class="anker" href="#line2742">2742</a><a class="anker" href="#line2743">2743</a><a class="anker" href="#line2744">2744</a><a class="anker" href="#line2745">2745</a><a class="anker" href="#line2746">2746</a><a class="anker" href="#line2747">2747</a><a class="anker" href="#line2748">2748</a><a class="anker" href="#line2749">2749</a><a class="anker" href="#line2750">2750</a><a class="anker" href="#line2751">2751</a><a class="anker" href="#line2752">2752</a><a class="anker" href="#line2753">2753</a><a class="anker" href="#line2754">2754</a><a class="anker" href="#line2755">2755</a><a class="anker" href="#line2756">2756</a><a class="anker" href="#line2757">2757</a><a class="anker" href="#line2758">2758</a><a class="anker" href="#line2759">2759</a><a class="anker" href="#line2760">2760</a><a class="anker" href="#line2761">2761</a><a class="anker" href="#line2762">2762</a><a class="anker" href="#line2763">2763</a><a class="anker" href="#line2764">2764</a><a class="anker" href="#line2765">2765</a><a class="anker" href="#line2766">2766</a><a class="anker" href="#line2767">2767</a><a class="anker" href="#line2768">2768</a><a class="anker" href="#line2769">2769</a><a class="anker" href="#line2770">2770</a><a class="anker" href="#line2771">2771</a><a class="anker" href="#line2772">2772</a><a class="anker" href="#line2773">2773</a><a class="anker" href="#line2774">2774</a><a class="anker" href="#line2775">2775</a><a class="anker" href="#line2776">2776</a><a class="anker" href="#line2777">2777</a><a class="anker" href="#line2778">2778</a><a class="anker" href="#line2779">2779</a><a class="anker" href="#line2780">2780</a><a class="anker" href="#line2781">2781</a><a class="anker" href="#line2782">2782</a><a class="anker" href="#line2783">2783</a><a class="anker" href="#line2784">2784</a><a class="anker" href="#line2785">2785</a><a class="anker" href="#line2786">2786</a><a class="anker" href="#line2787">2787</a><a class="anker" href="#line2788">2788</a><a class="anker" href="#line2789">2789</a><a class="anker" href="#line2790">2790</a><a class="anker" href="#line2791">2791</a><a class="anker" href="#line2792">2792</a><a class="anker" href="#line2793">2793</a><a class="anker" href="#line2794">2794</a><a class="anker" href="#line2795">2795</a><a class="anker" href="#line2796">2796</a><a class="anker" href="#line2797">2797</a><a class="anker" href="#line2798">2798</a><a class="anker" href="#line2799">2799</a><a class="anker" href="#line2800">2800</a><a class="anker" href="#line2801">2801</a><a class="anker" href="#line2802">2802</a><a class="anker" href="#line2803">2803</a><a class="anker" href="#line2804">2804</a><a class="anker" href="#line2805">2805</a><a class="anker" href="#line2806">2806</a><a class="anker" href="#line2807">2807</a><a class="anker" href="#line2808">2808</a><a class="anker" href="#line2809">2809</a><a class="anker" href="#line2810">2810</a><a class="anker" href="#line2811">2811</a><a class="anker" href="#line2812">2812</a><a class="anker" href="#line2813">2813</a><a class="anker" href="#line2814">2814</a><a class="anker" href="#line2815">2815</a><a class="anker" href="#line2816">2816</a><a class="anker" href="#line2817">2817</a><a class="anker" href="#line2818">2818</a><a class="anker" href="#line2819">2819</a><a class="anker" href="#line2820">2820</a><a class="anker" href="#line2821">2821</a><a class="anker" href="#line2822">2822</a><a class="anker" href="#line2823">2823</a><a class="anker" href="#line2824">2824</a><a class="anker" href="#line2825">2825</a><a class="anker" href="#line2826">2826</a><a class="anker" href="#line2827">2827</a><a class="anker" href="#line2828">2828</a><a class="anker" href="#line2829">2829</a><a class="anker" href="#line2830">2830</a><a class="anker" href="#line2831">2831</a><a class="anker" href="#line2832">2832</a><a class="anker" href="#line2833">2833</a><a class="anker" href="#line2834">2834</a><a class="anker" href="#line2835">2835</a><a class="anker" href="#line2836">2836</a><a class="anker" href="#line2837">2837</a><a class="anker" href="#line2838">2838</a><a class="anker" href="#line2839">2839</a><a class="anker" href="#line2840">2840</a><a class="anker" href="#line2841">2841</a><a class="anker" href="#line2842">2842</a><a class="anker" href="#line2843">2843</a><a class="anker" href="#line2844">2844</a><a class="anker" href="#line2845">2845</a><a class="anker" href="#line2846">2846</a><a class="anker" href="#line2847">2847</a><a class="anker" href="#line2848">2848</a><a class="anker" href="#line2849">2849</a><a class="anker" href="#line2850">2850</a><a class="anker" href="#line2851">2851</a><a class="anker" href="#line2852">2852</a><a class="anker" href="#line2853">2853</a><a class="anker" href="#line2854">2854</a><a class="anker" href="#line2855">2855</a><a class="anker" href="#line2856">2856</a><a class="anker" href="#line2857">2857</a><a class="anker" href="#line2858">2858</a><a class="anker" href="#line2859">2859</a><a class="anker" href="#line2860">2860</a><a class="anker" href="#line2861">2861</a><a class="anker" href="#line2862">2862</a><a class="anker" href="#line2863">2863</a><a class="anker" href="#line2864">2864</a><a class="anker" href="#line2865">2865</a><a class="anker" href="#line2866">2866</a><a class="anker" href="#line2867">2867</a><a class="anker" href="#line2868">2868</a><a class="anker" href="#line2869">2869</a><a class="anker" href="#line2870">2870</a><a class="anker" href="#line2871">2871</a><a class="anker" href="#line2872">2872</a><a class="anker" href="#line2873">2873</a><a class="anker" href="#line2874">2874</a><a class="anker" href="#line2875">2875</a><a class="anker" href="#line2876">2876</a><a class="anker" href="#line2877">2877</a><a class="anker" href="#line2878">2878</a><a class="anker" href="#line2879">2879</a><a class="anker" href="#line2880">2880</a><a class="anker" href="#line2881">2881</a><a class="anker" href="#line2882">2882</a><a class="anker" href="#line2883">2883</a><a class="anker" href="#line2884">2884</a><a class="anker" href="#line2885">2885</a><a class="anker" href="#line2886">2886</a><a class="anker" href="#line2887">2887</a><a class="anker" href="#line2888">2888</a><a class="anker" href="#line2889">2889</a><a class="anker" href="#line2890">2890</a><a class="anker" href="#line2891">2891</a><a class="anker" href="#line2892">2892</a><a class="anker" href="#line2893">2893</a><a class="anker" href="#line2894">2894</a><a class="anker" href="#line2895">2895</a><a class="anker" href="#line2896">2896</a><a class="anker" href="#line2897">2897</a><a class="anker" href="#line2898">2898</a><a class="anker" href="#line2899">2899</a><a class="anker" href="#line2900">2900</a><a class="anker" href="#line2901">2901</a><a class="anker" href="#line2902">2902</a><a class="anker" href="#line2903">2903</a><a class="anker" href="#line2904">2904</a><a class="anker" href="#line2905">2905</a><a class="anker" href="#line2906">2906</a><a class="anker" href="#line2907">2907</a><a class="anker" href="#line2908">2908</a><a class="anker" href="#line2909">2909</a><a class="anker" href="#line2910">2910</a><a class="anker" href="#line2911">2911</a><a class="anker" href="#line2912">2912</a><a class="anker" href="#line2913">2913</a><a class="anker" href="#line2914">2914</a><a class="anker" href="#line2915">2915</a><a class="anker" href="#line2916">2916</a><a class="anker" href="#line2917">2917</a><a class="anker" href="#line2918">2918</a><a class="anker" href="#line2919">2919</a><a class="anker" href="#line2920">2920</a><a class="anker" href="#line2921">2921</a><a class="anker" href="#line2922">2922</a><a class="anker" href="#line2923">2923</a><a class="anker" href="#line2924">2924</a><a class="anker" href="#line2925">2925</a><a class="anker" href="#line2926">2926</a><a class="anker" href="#line2927">2927</a><a class="anker" href="#line2928">2928</a><a class="anker" href="#line2929">2929</a><a class="anker" href="#line2930">2930</a><a class="anker" href="#line2931">2931</a><a class="anker" href="#line2932">2932</a><a class="anker" href="#line2933">2933</a><a class="anker" href="#line2934">2934</a><a class="anker" href="#line2935">2935</a><a class="anker" href="#line2936">2936</a><a class="anker" href="#line2937">2937</a><a class="anker" href="#line2938">2938</a><a class="anker" href="#line2939">2939</a><a class="anker" href="#line2940">2940</a><a class="anker" href="#line2941">2941</a><a class="anker" href="#line2942">2942</a><a class="anker" href="#line2943">2943</a><a class="anker" href="#line2944">2944</a><a class="anker" href="#line2945">2945</a><a class="anker" href="#line2946">2946</a><a class="anker" href="#line2947">2947</a><a class="anker" href="#line2948">2948</a><a class="anker" href="#line2949">2949</a><a class="anker" href="#line2950">2950</a><a class="anker" href="#line2951">2951</a><a class="anker" href="#line2952">2952</a><a class="anker" href="#line2953">2953</a><a class="anker" href="#line2954">2954</a><a class="anker" href="#line2955">2955</a><a class="anker" href="#line2956">2956</a><a class="anker" href="#line2957">2957</a><a class="anker" href="#line2958">2958</a><a class="anker" href="#line2959">2959</a><a class="anker" href="#line2960">2960</a><a class="anker" href="#line2961">2961</a><a class="anker" href="#line2962">2962</a><a class="anker" href="#line2963">2963</a><a class="anker" href="#line2964">2964</a><a class="anker" href="#line2965">2965</a><a class="anker" href="#line2966">2966</a><a class="anker" href="#line2967">2967</a><a class="anker" href="#line2968">2968</a><a class="anker" href="#line2969">2969</a><a class="anker" href="#line2970">2970</a><a class="anker" href="#line2971">2971</a><a class="anker" href="#line2972">2972</a><a class="anker" href="#line2973">2973</a><a class="anker" href="#line2974">2974</a><a class="anker" href="#line2975">2975</a><a class="anker" href="#line2976">2976</a><a class="anker" href="#line2977">2977</a><a class="anker" href="#line2978">2978</a><a class="anker" href="#line2979">2979</a><a class="anker" href="#line2980">2980</a><a class="anker" href="#line2981">2981</a><a class="anker" href="#line2982">2982</a><a class="anker" href="#line2983">2983</a><a class="anker" href="#line2984">2984</a><a class="anker" href="#line2985">2985</a><a class="anker" href="#line2986">2986</a><a class="anker" href="#line2987">2987</a><a class="anker" href="#line2988">2988</a><a class="anker" href="#line2989">2989</a><a class="anker" href="#line2990">2990</a><a class="anker" href="#line2991">2991</a><a class="anker" href="#line2992">2992</a><a class="anker" href="#line2993">2993</a><a class="anker" href="#line2994">2994</a><a class="anker" href="#line2995">2995</a><a class="anker" href="#line2996">2996</a><a class="anker" href="#line2997">2997</a><a class="anker" href="#line2998">2998</a><a class="anker" href="#line2999">2999</a><a class="anker" href="#line3000">3000</a><a class="anker" href="#line3001">3001</a><a class="anker" href="#line3002">3002</a><a class="anker" href="#line3003">3003</a><a class="anker" href="#line3004">3004</a><a class="anker" href="#line3005">3005</a><a class="anker" href="#line3006">3006</a><a class="anker" href="#line3007">3007</a><a class="anker" href="#line3008">3008</a><a class="anker" href="#line3009">3009</a><a class="anker" href="#line3010">3010</a><a class="anker" href="#line3011">3011</a><a class="anker" href="#line3012">3012</a><a class="anker" href="#line3013">3013</a><a class="anker" href="#line3014">3014</a><a class="anker" href="#line3015">3015</a><a class="anker" href="#line3016">3016</a><a class="anker" href="#line3017">3017</a><a class="anker" href="#line3018">3018</a><a class="anker" href="#line3019">3019</a><a class="anker" href="#line3020">3020</a><a class="anker" href="#line3021">3021</a><a class="anker" href="#line3022">3022</a><a class="anker" href="#line3023">3023</a><a class="anker" href="#line3024">3024</a><a class="anker" href="#line3025">3025</a><a class="anker" href="#line3026">3026</a><a class="anker" href="#line3027">3027</a><a class="anker" href="#line3028">3028</a><a class="anker" href="#line3029">3029</a><a class="anker" href="#line3030">3030</a><a class="anker" href="#line3031">3031</a><a class="anker" href="#line3032">3032</a><a class="anker" href="#line3033">3033</a><a class="anker" href="#line3034">3034</a><a class="anker" href="#line3035">3035</a><a class="anker" href="#line3036">3036</a><a class="anker" href="#line3037">3037</a><a class="anker" href="#line3038">3038</a><a class="anker" href="#line3039">3039</a><a class="anker" href="#line3040">3040</a><a class="anker" href="#line3041">3041</a><a class="anker" href="#line3042">3042</a><a class="anker" href="#line3043">3043</a><a class="anker" href="#line3044">3044</a><a class="anker" href="#line3045">3045</a><a class="anker" href="#line3046">3046</a><a class="anker" href="#line3047">3047</a><a class="anker" href="#line3048">3048</a><a class="anker" href="#line3049">3049</a><a class="anker" href="#line3050">3050</a><a class="anker" href="#line3051">3051</a><a class="anker" href="#line3052">3052</a><a class="anker" href="#line3053">3053</a><a class="anker" href="#line3054">3054</a><a class="anker" href="#line3055">3055</a><a class="anker" href="#line3056">3056</a><a class="anker" href="#line3057">3057</a><a class="anker" href="#line3058">3058</a><a class="anker" href="#line3059">3059</a><a class="anker" href="#line3060">3060</a><a class="anker" href="#line3061">3061</a><a class="anker" href="#line3062">3062</a><a class="anker" href="#line3063">3063</a><a class="anker" href="#line3064">3064</a><a class="anker" href="#line3065">3065</a><a class="anker" href="#line3066">3066</a><a class="anker" href="#line3067">3067</a><a class="anker" href="#line3068">3068</a><a class="anker" href="#line3069">3069</a><a class="anker" href="#line3070">3070</a><a class="anker" href="#line3071">3071</a><a class="anker" href="#line3072">3072</a><a class="anker" href="#line3073">3073</a><a class="anker" href="#line3074">3074</a><a class="anker" href="#line3075">3075</a><a class="anker" href="#line3076">3076</a><a class="anker" href="#line3077">3077</a><a class="anker" href="#line3078">3078</a><a class="anker" href="#line3079">3079</a><a class="anker" href="#line3080">3080</a><a class="anker" href="#line3081">3081</a><a class="anker" href="#line3082">3082</a><a class="anker" href="#line3083">3083</a><a class="anker" href="#line3084">3084</a><a class="anker" href="#line3085">3085</a><a class="anker" href="#line3086">3086</a><a class="anker" href="#line3087">3087</a><a class="anker" href="#line3088">3088</a><a class="anker" href="#line3089">3089</a><a class="anker" href="#line3090">3090</a><a class="anker" href="#line3091">3091</a><a class="anker" href="#line3092">3092</a><a class="anker" href="#line3093">3093</a><a class="anker" href="#line3094">3094</a><a class="anker" href="#line3095">3095</a><a class="anker" href="#line3096">3096</a><a class="anker" href="#line3097">3097</a><a class="anker" href="#line3098">3098</a><a class="anker" href="#line3099">3099</a><a class="anker" href="#line3100">3100</a><a class="anker" href="#line3101">3101</a><a class="anker" href="#line3102">3102</a><a class="anker" href="#line3103">3103</a><a class="anker" href="#line3104">3104</a><a class="anker" href="#line3105">3105</a><a class="anker" href="#line3106">3106</a><a class="anker" href="#line3107">3107</a><a class="anker" href="#line3108">3108</a><a class="anker" href="#line3109">3109</a><a class="anker" href="#line3110">3110</a><a class="anker" href="#line3111">3111</a><a class="anker" href="#line3112">3112</a><a class="anker" href="#line3113">3113</a><a class="anker" href="#line3114">3114</a><a class="anker" href="#line3115">3115</a><a class="anker" href="#line3116">3116</a><a class="anker" href="#line3117">3117</a><a class="anker" href="#line3118">3118</a><a class="anker" href="#line3119">3119</a><a class="anker" href="#line3120">3120</a><a class="anker" href="#line3121">3121</a><a class="anker" href="#line3122">3122</a><a class="anker" href="#line3123">3123</a><a class="anker" href="#line3124">3124</a><a class="anker" href="#line3125">3125</a><a class="anker" href="#line3126">3126</a><a class="anker" href="#line3127">3127</a><a class="anker" href="#line3128">3128</a><a class="anker" href="#line3129">3129</a><a class="anker" href="#line3130">3130</a><a class="anker" href="#line3131">3131</a><a class="anker" href="#line3132">3132</a><a class="anker" href="#line3133">3133</a><a class="anker" href="#line3134">3134</a><a class="anker" href="#line3135">3135</a><a class="anker" href="#line3136">3136</a><a class="anker" href="#line3137">3137</a><a class="anker" href="#line3138">3138</a><a class="anker" href="#line3139">3139</a><a class="anker" href="#line3140">3140</a><a class="anker" href="#line3141">3141</a><a class="anker" href="#line3142">3142</a><a class="anker" href="#line3143">3143</a><a class="anker" href="#line3144">3144</a><a class="anker" href="#line3145">3145</a><a class="anker" href="#line3146">3146</a><a class="anker" href="#line3147">3147</a><a class="anker" href="#line3148">3148</a><a class="anker" href="#line3149">3149</a><a class="anker" href="#line3150">3150</a><a class="anker" href="#line3151">3151</a><a class="anker" href="#line3152">3152</a><a class="anker" href="#line3153">3153</a><a class="anker" href="#line3154">3154</a><a class="anker" href="#line3155">3155</a><a class="anker" href="#line3156">3156</a><a class="anker" href="#line3157">3157</a><a class="anker" href="#line3158">3158</a><a class="anker" href="#line3159">3159</a><a class="anker" href="#line3160">3160</a><a class="anker" href="#line3161">3161</a><a class="anker" href="#line3162">3162</a><a class="anker" href="#line3163">3163</a><a class="anker" href="#line3164">3164</a><a class="anker" href="#line3165">3165</a><a class="anker" href="#line3166">3166</a><a class="anker" href="#line3167">3167</a><a class="anker" href="#line3168">3168</a><a class="anker" href="#line3169">3169</a><a class="anker" href="#line3170">3170</a><a class="anker" href="#line3171">3171</a><a class="anker" href="#line3172">3172</a><a class="anker" href="#line3173">3173</a><a class="anker" href="#line3174">3174</a><a class="anker" href="#line3175">3175</a><a class="anker" href="#line3176">3176</a><a class="anker" href="#line3177">3177</a><a class="anker" href="#line3178">3178</a><a class="anker" href="#line3179">3179</a><a class="anker" href="#line3180">3180</a><a class="anker" href="#line3181">3181</a><a class="anker" href="#line3182">3182</a><a class="anker" href="#line3183">3183</a><a class="anker" href="#line3184">3184</a><a class="anker" href="#line3185">3185</a><a class="anker" href="#line3186">3186</a><a class="anker" href="#line3187">3187</a><a class="anker" href="#line3188">3188</a><a class="anker" href="#line3189">3189</a><a class="anker" href="#line3190">3190</a><a class="anker" href="#line3191">3191</a><a class="anker" href="#line3192">3192</a><a class="anker" href="#line3193">3193</a><a class="anker" href="#line3194">3194</a><a class="anker" href="#line3195">3195</a><a class="anker" href="#line3196">3196</a><a class="anker" href="#line3197">3197</a><a class="anker" href="#line3198">3198</a><a class="anker" href="#line3199">3199</a><a class="anker" href="#line3200">3200</a><a class="anker" href="#line3201">3201</a><a class="anker" href="#line3202">3202</a><a class="anker" href="#line3203">3203</a><a class="anker" href="#line3204">3204</a><a class="anker" href="#line3205">3205</a><a class="anker" href="#line3206">3206</a><a class="anker" href="#line3207">3207</a><a class="anker" href="#line3208">3208</a><a class="anker" href="#line3209">3209</a><a class="anker" href="#line3210">3210</a><a class="anker" href="#line3211">3211</a><a class="anker" href="#line3212">3212</a><a class="anker" href="#line3213">3213</a><a class="anker" href="#line3214">3214</a><a class="anker" href="#line3215">3215</a><a class="anker" href="#line3216">3216</a><a class="anker" href="#line3217">3217</a><a class="anker" href="#line3218">3218</a><a class="anker" href="#line3219">3219</a><a class="anker" href="#line3220">3220</a><a class="anker" href="#line3221">3221</a><a class="anker" href="#line3222">3222</a><a class="anker" href="#line3223">3223</a><a class="anker" href="#line3224">3224</a><a class="anker" href="#line3225">3225</a><a class="anker" href="#line3226">3226</a><a class="anker" href="#line3227">3227</a><a class="anker" href="#line3228">3228</a><a class="anker" href="#line3229">3229</a><a class="anker" href="#line3230">3230</a><a class="anker" href="#line3231">3231</a><a class="anker" href="#line3232">3232</a><a class="anker" href="#line3233">3233</a><a class="anker" href="#line3234">3234</a><a class="anker" href="#line3235">3235</a><a class="anker" href="#line3236">3236</a><a class="anker" href="#line3237">3237</a><a class="anker" href="#line3238">3238</a><a class="anker" href="#line3239">3239</a><a class="anker" href="#line3240">3240</a><a class="anker" href="#line3241">3241</a><a class="anker" href="#line3242">3242</a><a class="anker" href="#line3243">3243</a><a class="anker" href="#line3244">3244</a><a class="anker" href="#line3245">3245</a><a class="anker" href="#line3246">3246</a><a class="anker" href="#line3247">3247</a><a class="anker" href="#line3248">3248</a><a class="anker" href="#line3249">3249</a><a class="anker" href="#line3250">3250</a><a class="anker" href="#line3251">3251</a><a class="anker" href="#line3252">3252</a><a class="anker" href="#line3253">3253</a><a class="anker" href="#line3254">3254</a><a class="anker" href="#line3255">3255</a><a class="anker" href="#line3256">3256</a><a class="anker" href="#line3257">3257</a><a class="anker" href="#line3258">3258</a><a class="anker" href="#line3259">3259</a><a class="anker" href="#line3260">3260</a><a class="anker" href="#line3261">3261</a><a class="anker" href="#line3262">3262</a><a class="anker" href="#line3263">3263</a><a class="anker" href="#line3264">3264</a><a class="anker" href="#line3265">3265</a><a class="anker" href="#line3266">3266</a><a class="anker" href="#line3267">3267</a><a class="anker" href="#line3268">3268</a><a class="anker" href="#line3269">3269</a><a class="anker" href="#line3270">3270</a><a class="anker" href="#line3271">3271</a><a class="anker" href="#line3272">3272</a><a class="anker" href="#line3273">3273</a><a class="anker" href="#line3274">3274</a><a class="anker" href="#line3275">3275</a><a class="anker" href="#line3276">3276</a><a class="anker" href="#line3277">3277</a><a class="anker" href="#line3278">3278</a><a class="anker" href="#line3279">3279</a><a class="anker" href="#line3280">3280</a><a class="anker" href="#line3281">3281</a><a class="anker" href="#line3282">3282</a><a class="anker" href="#line3283">3283</a><a class="anker" href="#line3284">3284</a><a class="anker" href="#line3285">3285</a><a class="anker" href="#line3286">3286</a><a class="anker" href="#line3287">3287</a><a class="anker" href="#line3288">3288</a><a class="anker" href="#line3289">3289</a><a class="anker" href="#line3290">3290</a><a class="anker" href="#line3291">3291</a><a class="anker" href="#line3292">3292</a><a class="anker" href="#line3293">3293</a><a class="anker" href="#line3294">3294</a><a class="anker" href="#line3295">3295</a><a class="anker" href="#line3296">3296</a><a class="anker" href="#line3297">3297</a><a class="anker" href="#line3298">3298</a><a class="anker" href="#line3299">3299</a><a class="anker" href="#line3300">3300</a><a class="anker" href="#line3301">3301</a><a class="anker" href="#line3302">3302</a><a class="anker" href="#line3303">3303</a><a class="anker" href="#line3304">3304</a><a class="anker" href="#line3305">3305</a><a class="anker" href="#line3306">3306</a><a class="anker" href="#line3307">3307</a><a class="anker" href="#line3308">3308</a><a class="anker" href="#line3309">3309</a><a class="anker" href="#line3310">3310</a><a class="anker" href="#line3311">3311</a><a class="anker" href="#line3312">3312</a><a class="anker" href="#line3313">3313</a><a class="anker" href="#line3314">3314</a><a class="anker" href="#line3315">3315</a><a class="anker" href="#line3316">3316</a><a class="anker" href="#line3317">3317</a><a class="anker" href="#line3318">3318</a><a class="anker" href="#line3319">3319</a><a class="anker" href="#line3320">3320</a><a class="anker" href="#line3321">3321</a><a class="anker" href="#line3322">3322</a><a class="anker" href="#line3323">3323</a><a class="anker" href="#line3324">3324</a><a class="anker" href="#line3325">3325</a><a class="anker" href="#line3326">3326</a><a class="anker" href="#line3327">3327</a><a class="anker" href="#line3328">3328</a><a class="anker" href="#line3329">3329</a><a class="anker" href="#line3330">3330</a><a class="anker" href="#line3331">3331</a><a class="anker" href="#line3332">3332</a><a class="anker" href="#line3333">3333</a><a class="anker" href="#line3334">3334</a><a class="anker" href="#line3335">3335</a><a class="anker" href="#line3336">3336</a><a class="anker" href="#line3337">3337</a><a class="anker" href="#line3338">3338</a><a class="anker" href="#line3339">3339</a><a class="anker" href="#line3340">3340</a><a class="anker" href="#line3341">3341</a><a class="anker" href="#line3342">3342</a><a class="anker" href="#line3343">3343</a><a class="anker" href="#line3344">3344</a><a class="anker" href="#line3345">3345</a><a class="anker" href="#line3346">3346</a><a class="anker" href="#line3347">3347</a><a class="anker" href="#line3348">3348</a><a class="anker" href="#line3349">3349</a><a class="anker" href="#line3350">3350</a><a class="anker" href="#line3351">3351</a><a class="anker" href="#line3352">3352</a><a class="anker" href="#line3353">3353</a><a class="anker" href="#line3354">3354</a><a class="anker" href="#line3355">3355</a><a class="anker" href="#line3356">3356</a><a class="anker" href="#line3357">3357</a><a class="anker" href="#line3358">3358</a><a class="anker" href="#line3359">3359</a><a class="anker" href="#line3360">3360</a><a class="anker" href="#line3361">3361</a><a class="anker" href="#line3362">3362</a><a class="anker" href="#line3363">3363</a><a class="anker" href="#line3364">3364</a><a class="anker" href="#line3365">3365</a><a class="anker" href="#line3366">3366</a><a class="anker" href="#line3367">3367</a><a class="anker" href="#line3368">3368</a><a class="anker" href="#line3369">3369</a><a class="anker" href="#line3370">3370</a><a class="anker" href="#line3371">3371</a><a class="anker" href="#line3372">3372</a><a class="anker" href="#line3373">3373</a><a class="anker" href="#line3374">3374</a><a class="anker" href="#line3375">3375</a><a class="anker" href="#line3376">3376</a><a class="anker" href="#line3377">3377</a><a class="anker" href="#line3378">3378</a><a class="anker" href="#line3379">3379</a><a class="anker" href="#line3380">3380</a><a class="anker" href="#line3381">3381</a><a class="anker" href="#line3382">3382</a><a class="anker" href="#line3383">3383</a><a class="anker" href="#line3384">3384</a><a class="anker" href="#line3385">3385</a><a class="anker" href="#line3386">3386</a><a class="anker" href="#line3387">3387</a><a class="anker" href="#line3388">3388</a><a class="anker" href="#line3389">3389</a><a class="anker" href="#line3390">3390</a><a class="anker" href="#line3391">3391</a><a class="anker" href="#line3392">3392</a><a class="anker" href="#line3393">3393</a><a class="anker" href="#line3394">3394</a><a class="anker" href="#line3395">3395</a><a class="anker" href="#line3396">3396</a><a class="anker" href="#line3397">3397</a><a class="anker" href="#line3398">3398</a><a class="anker" href="#line3399">3399</a><a class="anker" href="#line3400">3400</a><a class="anker" href="#line3401">3401</a><a class="anker" href="#line3402">3402</a><a class="anker" href="#line3403">3403</a><a class="anker" href="#line3404">3404</a><a class="anker" href="#line3405">3405</a><a class="anker" href="#line3406">3406</a><a class="anker" href="#line3407">3407</a><a class="anker" href="#line3408">3408</a><a class="anker" href="#line3409">3409</a><a class="anker" href="#line3410">3410</a><a class="anker" href="#line3411">3411</a><a class="anker" href="#line3412">3412</a><a class="anker" href="#line3413">3413</a><a class="anker" href="#line3414">3414</a><a class="anker" href="#line3415">3415</a><a class="anker" href="#line3416">3416</a><a class="anker" href="#line3417">3417</a><a class="anker" href="#line3418">3418</a><a class="anker" href="#line3419">3419</a><a class="anker" href="#line3420">3420</a><a class="anker" href="#line3421">3421</a><a class="anker" href="#line3422">3422</a><a class="anker" href="#line3423">3423</a><a class="anker" href="#line3424">3424</a><a class="anker" href="#line3425">3425</a><a class="anker" href="#line3426">3426</a><a class="anker" href="#line3427">3427</a><a class="anker" href="#line3428">3428</a><a class="anker" href="#line3429">3429</a><a class="anker" href="#line3430">3430</a><a class="anker" href="#line3431">3431</a><a class="anker" href="#line3432">3432</a><a class="anker" href="#line3433">3433</a><a class="anker" href="#line3434">3434</a><a class="anker" href="#line3435">3435</a><a class="anker" href="#line3436">3436</a><a class="anker" href="#line3437">3437</a><a class="anker" href="#line3438">3438</a><a class="anker" href="#line3439">3439</a><a class="anker" href="#line3440">3440</a><a class="anker" href="#line3441">3441</a><a class="anker" href="#line3442">3442</a><a class="anker" href="#line3443">3443</a><a class="anker" href="#line3444">3444</a><a class="anker" href="#line3445">3445</a><a class="anker" href="#line3446">3446</a><a class="anker" href="#line3447">3447</a><a class="anker" href="#line3448">3448</a><a class="anker" href="#line3449">3449</a><a class="anker" href="#line3450">3450</a><a class="anker" href="#line3451">3451</a><a class="anker" href="#line3452">3452</a><a class="anker" href="#line3453">3453</a><a class="anker" href="#line3454">3454</a><a class="anker" href="#line3455">3455</a><a class="anker" href="#line3456">3456</a><a class="anker" href="#line3457">3457</a><a class="anker" href="#line3458">3458</a><a class="anker" href="#line3459">3459</a><a class="anker" href="#line3460">3460</a><a class="anker" href="#line3461">3461</a><a class="anker" href="#line3462">3462</a><a class="anker" href="#line3463">3463</a><a class="anker" href="#line3464">3464</a><a class="anker" href="#line3465">3465</a><a class="anker" href="#line3466">3466</a><a class="anker" href="#line3467">3467</a><a class="anker" href="#line3468">3468</a><a class="anker" href="#line3469">3469</a><a class="anker" href="#line3470">3470</a><a class="anker" href="#line3471">3471</a><a class="anker" href="#line3472">3472</a><a class="anker" href="#line3473">3473</a><a class="anker" href="#line3474">3474</a><a class="anker" href="#line3475">3475</a><a class="anker" href="#line3476">3476</a><a class="anker" href="#line3477">3477</a><a class="anker" href="#line3478">3478</a><a class="anker" href="#line3479">3479</a><a class="anker" href="#line3480">3480</a><a class="anker" href="#line3481">3481</a><a class="anker" href="#line3482">3482</a><a class="anker" href="#line3483">3483</a><a class="anker" href="#line3484">3484</a><a class="anker" href="#line3485">3485</a><a class="anker" href="#line3486">3486</a><a class="anker" href="#line3487">3487</a><a class="anker" href="#line3488">3488</a><a class="anker" href="#line3489">3489</a><a class="anker" href="#line3490">3490</a><a class="anker" href="#line3491">3491</a><a class="anker" href="#line3492">3492</a><a class="anker" href="#line3493">3493</a><a class="anker" href="#line3494">3494</a><a class="anker" href="#line3495">3495</a><a class="anker" href="#line3496">3496</a><a class="anker" href="#line3497">3497</a><a class="anker" href="#line3498">3498</a><a class="anker" href="#line3499">3499</a><a class="anker" href="#line3500">3500</a><a class="anker" href="#line3501">3501</a><a class="anker" href="#line3502">3502</a><a class="anker" href="#line3503">3503</a><a class="anker" href="#line3504">3504</a><a class="anker" href="#line3505">3505</a><a class="anker" href="#line3506">3506</a><a class="anker" href="#line3507">3507</a><a class="anker" href="#line3508">3508</a><a class="anker" href="#line3509">3509</a><a class="anker" href="#line3510">3510</a><a class="anker" href="#line3511">3511</a><a class="anker" href="#line3512">3512</a><a class="anker" href="#line3513">3513</a><a class="anker" href="#line3514">3514</a><a class="anker" href="#line3515">3515</a><a class="anker" href="#line3516">3516</a><a class="anker" href="#line3517">3517</a><a class="anker" href="#line3518">3518</a><a class="anker" href="#line3519">3519</a><a class="anker" href="#line3520">3520</a><a class="anker" href="#line3521">3521</a><a class="anker" href="#line3522">3522</a><a class="anker" href="#line3523">3523</a><a class="anker" href="#line3524">3524</a><a class="anker" href="#line3525">3525</a><a class="anker" href="#line3526">3526</a><a class="anker" href="#line3527">3527</a><a class="anker" href="#line3528">3528</a><a class="anker" href="#line3529">3529</a><a class="anker" href="#line3530">3530</a><a class="anker" href="#line3531">3531</a><a class="anker" href="#line3532">3532</a><a class="anker" href="#line3533">3533</a><a class="anker" href="#line3534">3534</a><a class="anker" href="#line3535">3535</a><a class="anker" href="#line3536">3536</a><a class="anker" href="#line3537">3537</a><a class="anker" href="#line3538">3538</a><a class="anker" href="#line3539">3539</a><a class="anker" href="#line3540">3540</a><a class="anker" href="#line3541">3541</a><a class="anker" href="#line3542">3542</a><a class="anker" href="#line3543">3543</a><a class="anker" href="#line3544">3544</a><a class="anker" href="#line3545">3545</a><a class="anker" href="#line3546">3546</a><a class="anker" href="#line3547">3547</a><a class="anker" href="#line3548">3548</a><a class="anker" href="#line3549">3549</a><a class="anker" href="#line3550">3550</a><a class="anker" href="#line3551">3551</a><a class="anker" href="#line3552">3552</a><a class="anker" href="#line3553">3553</a><a class="anker" href="#line3554">3554</a><a class="anker" href="#line3555">3555</a><a class="anker" href="#line3556">3556</a><a class="anker" href="#line3557">3557</a><a class="anker" href="#line3558">3558</a><a class="anker" href="#line3559">3559</a><a class="anker" href="#line3560">3560</a><a class="anker" href="#line3561">3561</a><a class="anker" href="#line3562">3562</a><a class="anker" href="#line3563">3563</a><a class="anker" href="#line3564">3564</a><a class="anker" href="#line3565">3565</a><a class="anker" href="#line3566">3566</a><a class="anker" href="#line3567">3567</a><a class="anker" href="#line3568">3568</a><a class="anker" href="#line3569">3569</a><a class="anker" href="#line3570">3570</a><a class="anker" href="#line3571">3571</a><a class="anker" href="#line3572">3572</a><a class="anker" href="#line3573">3573</a><a class="anker" href="#line3574">3574</a><a class="anker" href="#line3575">3575</a><a class="anker" href="#line3576">3576</a><a class="anker" href="#line3577">3577</a><a class="anker" href="#line3578">3578</a><a class="anker" href="#line3579">3579</a><a class="anker" href="#line3580">3580</a><a class="anker" href="#line3581">3581</a><a class="anker" href="#line3582">3582</a><a class="anker" href="#line3583">3583</a><a class="anker" href="#line3584">3584</a><a class="anker" href="#line3585">3585</a><a class="anker" href="#line3586">3586</a><a class="anker" href="#line3587">3587</a><a class="anker" href="#line3588">3588</a><a class="anker" href="#line3589">3589</a><a class="anker" href="#line3590">3590</a><a class="anker" href="#line3591">3591</a><a class="anker" href="#line3592">3592</a><a class="anker" href="#line3593">3593</a><a class="anker" href="#line3594">3594</a><a class="anker" href="#line3595">3595</a><a class="anker" href="#line3596">3596</a><a class="anker" href="#line3597">3597</a><a class="anker" href="#line3598">3598</a><a class="anker" href="#line3599">3599</a><a class="anker" href="#line3600">3600</a><a class="anker" href="#line3601">3601</a><a class="anker" href="#line3602">3602</a><a class="anker" href="#line3603">3603</a><a class="anker" href="#line3604">3604</a><a class="anker" href="#line3605">3605</a><a class="anker" href="#line3606">3606</a><a class="anker" href="#line3607">3607</a><a class="anker" href="#line3608">3608</a><a class="anker" href="#line3609">3609</a><a class="anker" href="#line3610">3610</a><a class="anker" href="#line3611">3611</a><a class="anker" href="#line3612">3612</a><a class="anker" href="#line3613">3613</a><a class="anker" href="#line3614">3614</a><a class="anker" href="#line3615">3615</a><a class="anker" href="#line3616">3616</a><a class="anker" href="#line3617">3617</a><a class="anker" href="#line3618">3618</a><a class="anker" href="#line3619">3619</a><a class="anker" href="#line3620">3620</a><a class="anker" href="#line3621">3621</a><a class="anker" href="#line3622">3622</a><a class="anker" href="#line3623">3623</a><a class="anker" href="#line3624">3624</a><a class="anker" href="#line3625">3625</a><a class="anker" href="#line3626">3626</a><a class="anker" href="#line3627">3627</a><a class="anker" href="#line3628">3628</a><a class="anker" href="#line3629">3629</a><a class="anker" href="#line3630">3630</a><a class="anker" href="#line3631">3631</a><a class="anker" href="#line3632">3632</a><a class="anker" href="#line3633">3633</a><a class="anker" href="#line3634">3634</a><a class="anker" href="#line3635">3635</a><a class="anker" href="#line3636">3636</a><a class="anker" href="#line3637">3637</a><a class="anker" href="#line3638">3638</a><a class="anker" href="#line3639">3639</a><a class="anker" href="#line3640">3640</a><a class="anker" href="#line3641">3641</a><a class="anker" href="#line3642">3642</a><a class="anker" href="#line3643">3643</a><a class="anker" href="#line3644">3644</a><a class="anker" href="#line3645">3645</a><a class="anker" href="#line3646">3646</a><a class="anker" href="#line3647">3647</a><a class="anker" href="#line3648">3648</a><a class="anker" href="#line3649">3649</a><a class="anker" href="#line3650">3650</a><a class="anker" href="#line3651">3651</a><a class="anker" href="#line3652">3652</a><a class="anker" href="#line3653">3653</a><a class="anker" href="#line3654">3654</a><a class="anker" href="#line3655">3655</a><a class="anker" href="#line3656">3656</a><a class="anker" href="#line3657">3657</a><a class="anker" href="#line3658">3658</a><a class="anker" href="#line3659">3659</a><a class="anker" href="#line3660">3660</a><a class="anker" href="#line3661">3661</a><a class="anker" href="#line3662">3662</a><a class="anker" href="#line3663">3663</a><a class="anker" href="#line3664">3664</a><a class="anker" href="#line3665">3665</a><a class="anker" href="#line3666">3666</a><a class="anker" href="#line3667">3667</a><a class="anker" href="#line3668">3668</a><a class="anker" href="#line3669">3669</a><a class="anker" href="#line3670">3670</a><a class="anker" href="#line3671">3671</a><a class="anker" href="#line3672">3672</a><a class="anker" href="#line3673">3673</a><a class="anker" href="#line3674">3674</a><a class="anker" href="#line3675">3675</a><a class="anker" href="#line3676">3676</a><a class="anker" href="#line3677">3677</a><a class="anker" href="#line3678">3678</a><a class="anker" href="#line3679">3679</a><a class="anker" href="#line3680">3680</a><a class="anker" href="#line3681">3681</a><a class="anker" href="#line3682">3682</a><a class="anker" href="#line3683">3683</a><a class="anker" href="#line3684">3684</a><a class="anker" href="#line3685">3685</a><a class="anker" href="#line3686">3686</a><a class="anker" href="#line3687">3687</a><a class="anker" href="#line3688">3688</a><a class="anker" href="#line3689">3689</a><a class="anker" href="#line3690">3690</a><a class="anker" href="#line3691">3691</a><a class="anker" href="#line3692">3692</a><a class="anker" href="#line3693">3693</a><a class="anker" href="#line3694">3694</a><a class="anker" href="#line3695">3695</a><a class="anker" href="#line3696">3696</a><a class="anker" href="#line3697">3697</a><a class="anker" href="#line3698">3698</a><a class="anker" href="#line3699">3699</a><a class="anker" href="#line3700">3700</a><a class="anker" href="#line3701">3701</a><a class="anker" href="#line3702">3702</a><a class="anker" href="#line3703">3703</a><a class="anker" href="#line3704">3704</a><a class="anker" href="#line3705">3705</a><a class="anker" href="#line3706">3706</a><a class="anker" href="#line3707">3707</a><a class="anker" href="#line3708">3708</a><a class="anker" href="#line3709">3709</a><a class="anker" href="#line3710">3710</a><a class="anker" href="#line3711">3711</a><a class="anker" href="#line3712">3712</a><a class="anker" href="#line3713">3713</a><a class="anker" href="#line3714">3714</a><a class="anker" href="#line3715">3715</a><a class="anker" href="#line3716">3716</a><a class="anker" href="#line3717">3717</a><a class="anker" href="#line3718">3718</a><a class="anker" href="#line3719">3719</a><a class="anker" href="#line3720">3720</a><a class="anker" href="#line3721">3721</a><a class="anker" href="#line3722">3722</a><a class="anker" href="#line3723">3723</a><a class="anker" href="#line3724">3724</a><a class="anker" href="#line3725">3725</a><a class="anker" href="#line3726">3726</a><a class="anker" href="#line3727">3727</a><a class="anker" href="#line3728">3728</a><a class="anker" href="#line3729">3729</a><a class="anker" href="#line3730">3730</a><a class="anker" href="#line3731">3731</a><a class="anker" href="#line3732">3732</a><a class="anker" href="#line3733">3733</a><a class="anker" href="#line3734">3734</a><a class="anker" href="#line3735">3735</a><a class="anker" href="#line3736">3736</a><a class="anker" href="#line3737">3737</a><a class="anker" href="#line3738">3738</a><a class="anker" href="#line3739">3739</a><a class="anker" href="#line3740">3740</a><a class="anker" href="#line3741">3741</a><a class="anker" href="#line3742">3742</a><a class="anker" href="#line3743">3743</a><a class="anker" href="#line3744">3744</a><a class="anker" href="#line3745">3745</a><a class="anker" href="#line3746">3746</a><a class="anker" href="#line3747">3747</a><a class="anker" href="#line3748">3748</a><a class="anker" href="#line3749">3749</a><a class="anker" href="#line3750">3750</a><a class="anker" href="#line3751">3751</a><a class="anker" href="#line3752">3752</a><a class="anker" href="#line3753">3753</a><a class="anker" href="#line3754">3754</a><a class="anker" href="#line3755">3755</a><a class="anker" href="#line3756">3756</a><a class="anker" href="#line3757">3757</a><a class="anker" href="#line3758">3758</a><a class="anker" href="#line3759">3759</a><a class="anker" href="#line3760">3760</a><a class="anker" href="#line3761">3761</a><a class="anker" href="#line3762">3762</a><a class="anker" href="#line3763">3763</a><a class="anker" href="#line3764">3764</a><a class="anker" href="#line3765">3765</a><a class="anker" href="#line3766">3766</a><a class="anker" href="#line3767">3767</a><a class="anker" href="#line3768">3768</a><a class="anker" href="#line3769">3769</a><a class="anker" href="#line3770">3770</a><a class="anker" href="#line3771">3771</a><a class="anker" href="#line3772">3772</a><a class="anker" href="#line3773">3773</a><a class="anker" href="#line3774">3774</a><a class="anker" href="#line3775">3775</a><a class="anker" href="#line3776">3776</a><a class="anker" href="#line3777">3777</a><a class="anker" href="#line3778">3778</a><a class="anker" href="#line3779">3779</a><a class="anker" href="#line3780">3780</a><a class="anker" href="#line3781">3781</a><a class="anker" href="#line3782">3782</a><a class="anker" href="#line3783">3783</a><a class="anker" href="#line3784">3784</a><a class="anker" href="#line3785">3785</a><a class="anker" href="#line3786">3786</a><a class="anker" href="#line3787">3787</a><a class="anker" href="#line3788">3788</a><a class="anker" href="#line3789">3789</a><a class="anker" href="#line3790">3790</a><a class="anker" href="#line3791">3791</a><a class="anker" href="#line3792">3792</a><a class="anker" href="#line3793">3793</a><a class="anker" href="#line3794">3794</a><a class="anker" href="#line3795">3795</a><a class="anker" href="#line3796">3796</a><a class="anker" href="#line3797">3797</a><a class="anker" href="#line3798">3798</a><a class="anker" href="#line3799">3799</a><a class="anker" href="#line3800">3800</a><a class="anker" href="#line3801">3801</a><a class="anker" href="#line3802">3802</a><a class="anker" href="#line3803">3803</a><a class="anker" href="#line3804">3804</a><a class="anker" href="#line3805">3805</a><a class="anker" href="#line3806">3806</a><a class="anker" href="#line3807">3807</a><a class="anker" href="#line3808">3808</a><a class="anker" href="#line3809">3809</a><a class="anker" href="#line3810">3810</a><a class="anker" href="#line3811">3811</a><a class="anker" href="#line3812">3812</a><a class="anker" href="#line3813">3813</a><a class="anker" href="#line3814">3814</a><a class="anker" href="#line3815">3815</a><a class="anker" href="#line3816">3816</a><a class="anker" href="#line3817">3817</a><a class="anker" href="#line3818">3818</a><a class="anker" href="#line3819">3819</a><a class="anker" href="#line3820">3820</a><a class="anker" href="#line3821">3821</a><a class="anker" href="#line3822">3822</a><a class="anker" href="#line3823">3823</a><a class="anker" href="#line3824">3824</a><a class="anker" href="#line3825">3825</a><a class="anker" href="#line3826">3826</a><a class="anker" href="#line3827">3827</a><a class="anker" href="#line3828">3828</a><a class="anker" href="#line3829">3829</a><a class="anker" href="#line3830">3830</a><a class="anker" href="#line3831">3831</a><a class="anker" href="#line3832">3832</a><a class="anker" href="#line3833">3833</a><a class="anker" href="#line3834">3834</a><a class="anker" href="#line3835">3835</a><a class="anker" href="#line3836">3836</a><a class="anker" href="#line3837">3837</a><a class="anker" href="#line3838">3838</a><a class="anker" href="#line3839">3839</a><a class="anker" href="#line3840">3840</a><a class="anker" href="#line3841">3841</a><a class="anker" href="#line3842">3842</a><a class="anker" href="#line3843">3843</a><a class="anker" href="#line3844">3844</a><a class="anker" href="#line3845">3845</a><a class="anker" href="#line3846">3846</a><a class="anker" href="#line3847">3847</a><a class="anker" href="#line3848">3848</a><a class="anker" href="#line3849">3849</a><a class="anker" href="#line3850">3850</a><a class="anker" href="#line3851">3851</a><a class="anker" href="#line3852">3852</a><a class="anker" href="#line3853">3853</a><a class="anker" href="#line3854">3854</a><a class="anker" href="#line3855">3855</a><a class="anker" href="#line3856">3856</a><a class="anker" href="#line3857">3857</a><a class="anker" href="#line3858">3858</a><a class="anker" href="#line3859">3859</a><a class="anker" href="#line3860">3860</a><a class="anker" href="#line3861">3861</a><a class="anker" href="#line3862">3862</a><a class="anker" href="#line3863">3863</a><a class="anker" href="#line3864">3864</a><a class="anker" href="#line3865">3865</a><a class="anker" href="#line3866">3866</a><a class="anker" href="#line3867">3867</a><a class="anker" href="#line3868">3868</a><a class="anker" href="#line3869">3869</a><a class="anker" href="#line3870">3870</a><a class="anker" href="#line3871">3871</a><a class="anker" href="#line3872">3872</a><a class="anker" href="#line3873">3873</a><a class="anker" href="#line3874">3874</a><a class="anker" href="#line3875">3875</a><a class="anker" href="#line3876">3876</a><a class="anker" href="#line3877">3877</a><a class="anker" href="#line3878">3878</a><a class="anker" href="#line3879">3879</a><a class="anker" href="#line3880">3880</a><a class="anker" href="#line3881">3881</a><a class="anker" href="#line3882">3882</a><a class="anker" href="#line3883">3883</a><a class="anker" href="#line3884">3884</a><a class="anker" href="#line3885">3885</a><a class="anker" href="#line3886">3886</a><a class="anker" href="#line3887">3887</a><a class="anker" href="#line3888">3888</a><a class="anker" href="#line3889">3889</a><a class="anker" href="#line3890">3890</a><a class="anker" href="#line3891">3891</a><a class="anker" href="#line3892">3892</a><a class="anker" href="#line3893">3893</a><a class="anker" href="#line3894">3894</a><a class="anker" href="#line3895">3895</a><a class="anker" href="#line3896">3896</a><a class="anker" href="#line3897">3897</a><a class="anker" href="#line3898">3898</a><a class="anker" href="#line3899">3899</a><a class="anker" href="#line3900">3900</a><a class="anker" href="#line3901">3901</a><a class="anker" href="#line3902">3902</a><a class="anker" href="#line3903">3903</a><a class="anker" href="#line3904">3904</a><a class="anker" href="#line3905">3905</a><a class="anker" href="#line3906">3906</a><a class="anker" href="#line3907">3907</a><a class="anker" href="#line3908">3908</a><a class="anker" href="#line3909">3909</a><a class="anker" href="#line3910">3910</a><a class="anker" href="#line3911">3911</a><a class="anker" href="#line3912">3912</a><a class="anker" href="#line3913">3913</a><a class="anker" href="#line3914">3914</a><a class="anker" href="#line3915">3915</a><a class="anker" href="#line3916">3916</a><a class="anker" href="#line3917">3917</a><a class="anker" href="#line3918">3918</a><a class="anker" href="#line3919">3919</a><a class="anker" href="#line3920">3920</a><a class="anker" href="#line3921">3921</a><a class="anker" href="#line3922">3922</a><a class="anker" href="#line3923">3923</a><a class="anker" href="#line3924">3924</a><a class="anker" href="#line3925">3925</a><a class="anker" href="#line3926">3926</a><a class="anker" href="#line3927">3927</a><a class="anker" href="#line3928">3928</a><a class="anker" href="#line3929">3929</a><a class="anker" href="#line3930">3930</a><a class="anker" href="#line3931">3931</a><a class="anker" href="#line3932">3932</a><a class="anker" href="#line3933">3933</a><a class="anker" href="#line3934">3934</a><a class="anker" href="#line3935">3935</a><a class="anker" href="#line3936">3936</a><a class="anker" href="#line3937">3937</a><a class="anker" href="#line3938">3938</a><a class="anker" href="#line3939">3939</a><a class="anker" href="#line3940">3940</a><a class="anker" href="#line3941">3941</a><a class="anker" href="#line3942">3942</a><a class="anker" href="#line3943">3943</a><a class="anker" href="#line3944">3944</a><a class="anker" href="#line3945">3945</a><a class="anker" href="#line3946">3946</a><a class="anker" href="#line3947">3947</a><a class="anker" href="#line3948">3948</a><a class="anker" href="#line3949">3949</a><a class="anker" href="#line3950">3950</a><a class="anker" href="#line3951">3951</a><a class="anker" href="#line3952">3952</a><a class="anker" href="#line3953">3953</a><a class="anker" href="#line3954">3954</a><a class="anker" href="#line3955">3955</a><a class="anker" href="#line3956">3956</a><a class="anker" href="#line3957">3957</a><a class="anker" href="#line3958">3958</a><a class="anker" href="#line3959">3959</a><a class="anker" href="#line3960">3960</a><a class="anker" href="#line3961">3961</a><a class="anker" href="#line3962">3962</a><a class="anker" href="#line3963">3963</a><a class="anker" href="#line3964">3964</a><a class="anker" href="#line3965">3965</a><a class="anker" href="#line3966">3966</a><a class="anker" href="#line3967">3967</a><a class="anker" href="#line3968">3968</a><a class="anker" href="#line3969">3969</a><a class="anker" href="#line3970">3970</a><a class="anker" href="#line3971">3971</a><a class="anker" href="#line3972">3972</a><a class="anker" href="#line3973">3973</a><a class="anker" href="#line3974">3974</a><a class="anker" href="#line3975">3975</a><a class="anker" href="#line3976">3976</a><a class="anker" href="#line3977">3977</a><a class="anker" href="#line3978">3978</a><a class="anker" href="#line3979">3979</a><a class="anker" href="#line3980">3980</a><a class="anker" href="#line3981">3981</a><a class="anker" href="#line3982">3982</a><a class="anker" href="#line3983">3983</a><a class="anker" href="#line3984">3984</a><a class="anker" href="#line3985">3985</a><a class="anker" href="#line3986">3986</a><a class="anker" href="#line3987">3987</a><a class="anker" href="#line3988">3988</a><a class="anker" href="#line3989">3989</a><a class="anker" href="#line3990">3990</a><a class="anker" href="#line3991">3991</a><a class="anker" href="#line3992">3992</a><a class="anker" href="#line3993">3993</a><a class="anker" href="#line3994">3994</a><a class="anker" href="#line3995">3995</a><a class="anker" href="#line3996">3996</a><a class="anker" href="#line3997">3997</a><a class="anker" href="#line3998">3998</a><a class="anker" href="#line3999">3999</a><a class="anker" href="#line4000">4000</a><a class="anker" href="#line4001">4001</a><a class="anker" href="#line4002">4002</a><a class="anker" href="#line4003">4003</a><a class="anker" href="#line4004">4004</a><a class="anker" href="#line4005">4005</a><a class="anker" href="#line4006">4006</a><a class="anker" href="#line4007">4007</a><a class="anker" href="#line4008">4008</a><a class="anker" href="#line4009">4009</a><a class="anker" href="#line4010">4010</a><a class="anker" href="#line4011">4011</a><a class="anker" href="#line4012">4012</a><a class="anker" href="#line4013">4013</a><a class="anker" href="#line4014">4014</a><a class="anker" href="#line4015">4015</a><a class="anker" href="#line4016">4016</a><a class="anker" href="#line4017">4017</a><a class="anker" href="#line4018">4018</a><a class="anker" href="#line4019">4019</a><a class="anker" href="#line4020">4020</a><a class="anker" href="#line4021">4021</a><a class="anker" href="#line4022">4022</a><a class="anker" href="#line4023">4023</a><a class="anker" href="#line4024">4024</a><a class="anker" href="#line4025">4025</a><a class="anker" href="#line4026">4026</a><a class="anker" href="#line4027">4027</a><a class="anker" href="#line4028">4028</a><a class="anker" href="#line4029">4029</a><a class="anker" href="#line4030">4030</a><a class="anker" href="#line4031">4031</a><a class="anker" href="#line4032">4032</a><a class="anker" href="#line4033">4033</a><a class="anker" href="#line4034">4034</a><a class="anker" href="#line4035">4035</a><a class="anker" href="#line4036">4036</a><a class="anker" href="#line4037">4037</a><a class="anker" href="#line4038">4038</a><a class="anker" href="#line4039">4039</a><a class="anker" href="#line4040">4040</a><a class="anker" href="#line4041">4041</a><a class="anker" href="#line4042">4042</a><a class="anker" href="#line4043">4043</a><a class="anker" href="#line4044">4044</a><a class="anker" href="#line4045">4045</a><a class="anker" href="#line4046">4046</a><a class="anker" href="#line4047">4047</a><a class="anker" href="#line4048">4048</a><a class="anker" href="#line4049">4049</a><a class="anker" href="#line4050">4050</a><a class="anker" href="#line4051">4051</a><a class="anker" href="#line4052">4052</a><a class="anker" href="#line4053">4053</a><a class="anker" href="#line4054">4054</a><a class="anker" href="#line4055">4055</a><a class="anker" href="#line4056">4056</a><a class="anker" href="#line4057">4057</a><a class="anker" href="#line4058">4058</a><a class="anker" href="#line4059">4059</a><a class="anker" href="#line4060">4060</a><a class="anker" href="#line4061">4061</a><a class="anker" href="#line4062">4062</a><a class="anker" href="#line4063">4063</a><a class="anker" href="#line4064">4064</a><a class="anker" href="#line4065">4065</a><a class="anker" href="#line4066">4066</a><a class="anker" href="#line4067">4067</a><a class="anker" href="#line4068">4068</a><a class="anker" href="#line4069">4069</a><a class="anker" href="#line4070">4070</a><a class="anker" href="#line4071">4071</a><a class="anker" href="#line4072">4072</a><a class="anker" href="#line4073">4073</a><a class="anker" href="#line4074">4074</a><a class="anker" href="#line4075">4075</a><a class="anker" href="#line4076">4076</a><a class="anker" href="#line4077">4077</a><a class="anker" href="#line4078">4078</a><a class="anker" href="#line4079">4079</a><a class="anker" href="#line4080">4080</a><a class="anker" href="#line4081">4081</a><a class="anker" href="#line4082">4082</a><a class="anker" href="#line4083">4083</a><a class="anker" href="#line4084">4084</a><a class="anker" href="#line4085">4085</a><a class="anker" href="#line4086">4086</a><a class="anker" href="#line4087">4087</a><a class="anker" href="#line4088">4088</a><a class="anker" href="#line4089">4089</a><a class="anker" href="#line4090">4090</a><a class="anker" href="#line4091">4091</a><a class="anker" href="#line4092">4092</a><a class="anker" href="#line4093">4093</a><a class="anker" href="#line4094">4094</a><a class="anker" href="#line4095">4095</a><a class="anker" href="#line4096">4096</a><a class="anker" href="#line4097">4097</a><a class="anker" href="#line4098">4098</a><a class="anker" href="#line4099">4099</a><a class="anker" href="#line4100">4100</a><a class="anker" href="#line4101">4101</a><a class="anker" href="#line4102">4102</a><a class="anker" href="#line4103">4103</a><a class="anker" href="#line4104">4104</a><a class="anker" href="#line4105">4105</a><a class="anker" href="#line4106">4106</a><a class="anker" href="#line4107">4107</a><a class="anker" href="#line4108">4108</a><a class="anker" href="#line4109">4109</a><a class="anker" href="#line4110">4110</a><a class="anker" href="#line4111">4111</a><a class="anker" href="#line4112">4112</a><a class="anker" href="#line4113">4113</a><a class="anker" href="#line4114">4114</a><a class="anker" href="#line4115">4115</a><a class="anker" href="#line4116">4116</a><a class="anker" href="#line4117">4117</a><a class="anker" href="#line4118">4118</a><a class="anker" href="#line4119">4119</a><a class="anker" href="#line4120">4120</a><a class="anker" href="#line4121">4121</a><a class="anker" href="#line4122">4122</a><a class="anker" href="#line4123">4123</a><a class="anker" href="#line4124">4124</a><a class="anker" href="#line4125">4125</a><a class="anker" href="#line4126">4126</a><a class="anker" href="#line4127">4127</a><a class="anker" href="#line4128">4128</a><a class="anker" href="#line4129">4129</a><a class="anker" href="#line4130">4130</a><a class="anker" href="#line4131">4131</a><a class="anker" href="#line4132">4132</a><a class="anker" href="#line4133">4133</a><a class="anker" href="#line4134">4134</a><a class="anker" href="#line4135">4135</a><a class="anker" href="#line4136">4136</a><a class="anker" href="#line4137">4137</a><a class="anker" href="#line4138">4138</a><a class="anker" href="#line4139">4139</a><a class="anker" href="#line4140">4140</a><a class="anker" href="#line4141">4141</a><a class="anker" href="#line4142">4142</a><a class="anker" href="#line4143">4143</a><a class="anker" href="#line4144">4144</a><a class="anker" href="#line4145">4145</a><a class="anker" href="#line4146">4146</a><a class="anker" href="#line4147">4147</a><a class="anker" href="#line4148">4148</a><a class="anker" href="#line4149">4149</a><a class="anker" href="#line4150">4150</a><a class="anker" href="#line4151">4151</a><a class="anker" href="#line4152">4152</a><a class="anker" href="#line4153">4153</a><a class="anker" href="#line4154">4154</a><a class="anker" href="#line4155">4155</a><a class="anker" href="#line4156">4156</a><a class="anker" href="#line4157">4157</a><a class="anker" href="#line4158">4158</a><a class="anker" href="#line4159">4159</a><a class="anker" href="#line4160">4160</a><a class="anker" href="#line4161">4161</a><a class="anker" href="#line4162">4162</a><a class="anker" href="#line4163">4163</a><a class="anker" href="#line4164">4164</a><a class="anker" href="#line4165">4165</a><a class="anker" href="#line4166">4166</a><a class="anker" href="#line4167">4167</a><a class="anker" href="#line4168">4168</a><a class="anker" href="#line4169">4169</a><a class="anker" href="#line4170">4170</a><a class="anker" href="#line4171">4171</a><a class="anker" href="#line4172">4172</a><a class="anker" href="#line4173">4173</a><a class="anker" href="#line4174">4174</a><a class="anker" href="#line4175">4175</a><a class="anker" href="#line4176">4176</a><a class="anker" href="#line4177">4177</a><a class="anker" href="#line4178">4178</a><a class="anker" href="#line4179">4179</a><a class="anker" href="#line4180">4180</a><a class="anker" href="#line4181">4181</a><a class="anker" href="#line4182">4182</a><a class="anker" href="#line4183">4183</a><a class="anker" href="#line4184">4184</a><a class="anker" href="#line4185">4185</a><a class="anker" href="#line4186">4186</a><a class="anker" href="#line4187">4187</a><a class="anker" href="#line4188">4188</a><a class="anker" href="#line4189">4189</a><a class="anker" href="#line4190">4190</a><a class="anker" href="#line4191">4191</a><a class="anker" href="#line4192">4192</a><a class="anker" href="#line4193">4193</a><a class="anker" href="#line4194">4194</a><a class="anker" href="#line4195">4195</a><a class="anker" href="#line4196">4196</a><a class="anker" href="#line4197">4197</a><a class="anker" href="#line4198">4198</a><a class="anker" href="#line4199">4199</a><a class="anker" href="#line4200">4200</a><a class="anker" href="#line4201">4201</a><a class="anker" href="#line4202">4202</a><a class="anker" href="#line4203">4203</a><a class="anker" href="#line4204">4204</a><a class="anker" href="#line4205">4205</a><a class="anker" href="#line4206">4206</a><a class="anker" href="#line4207">4207</a><a class="anker" href="#line4208">4208</a><a class="anker" href="#line4209">4209</a><a class="anker" href="#line4210">4210</a><a class="anker" href="#line4211">4211</a><a class="anker" href="#line4212">4212</a><a class="anker" href="#line4213">4213</a><a class="anker" href="#line4214">4214</a><a class="anker" href="#line4215">4215</a><a class="anker" href="#line4216">4216</a><a class="anker" href="#line4217">4217</a><a class="anker" href="#line4218">4218</a><a class="anker" href="#line4219">4219</a><a class="anker" href="#line4220">4220</a><a class="anker" href="#line4221">4221</a><a class="anker" href="#line4222">4222</a><a class="anker" href="#line4223">4223</a><a class="anker" href="#line4224">4224</a><a class="anker" href="#line4225">4225</a><a class="anker" href="#line4226">4226</a><a class="anker" href="#line4227">4227</a><a class="anker" href="#line4228">4228</a><a class="anker" href="#line4229">4229</a><a class="anker" href="#line4230">4230</a><a class="anker" href="#line4231">4231</a><a class="anker" href="#line4232">4232</a><a class="anker" href="#line4233">4233</a><a class="anker" href="#line4234">4234</a><a class="anker" href="#line4235">4235</a><a class="anker" href="#line4236">4236</a><a class="anker" href="#line4237">4237</a><a class="anker" href="#line4238">4238</a><a class="anker" href="#line4239">4239</a><a class="anker" href="#line4240">4240</a><a class="anker" href="#line4241">4241</a><a class="anker" href="#line4242">4242</a><a class="anker" href="#line4243">4243</a><a class="anker" href="#line4244">4244</a><a class="anker" href="#line4245">4245</a><a class="anker" href="#line4246">4246</a><a class="anker" href="#line4247">4247</a><a class="anker" href="#line4248">4248</a><a class="anker" href="#line4249">4249</a><a class="anker" href="#line4250">4250</a><a class="anker" href="#line4251">4251</a><a class="anker" href="#line4252">4252</a><a class="anker" href="#line4253">4253</a><a class="anker" href="#line4254">4254</a><a class="anker" href="#line4255">4255</a><a class="anker" href="#line4256">4256</a><a class="anker" href="#line4257">4257</a><a class="anker" href="#line4258">4258</a><a class="anker" href="#line4259">4259</a><a class="anker" href="#line4260">4260</a><a class="anker" href="#line4261">4261</a><a class="anker" href="#line4262">4262</a><a class="anker" href="#line4263">4263</a><a class="anker" href="#line4264">4264</a><a class="anker" href="#line4265">4265</a><a class="anker" href="#line4266">4266</a><a class="anker" href="#line4267">4267</a><a class="anker" href="#line4268">4268</a><a class="anker" href="#line4269">4269</a><a class="anker" href="#line4270">4270</a><a class="anker" href="#line4271">4271</a><a class="anker" href="#line4272">4272</a><a class="anker" href="#line4273">4273</a><a class="anker" href="#line4274">4274</a><a class="anker" href="#line4275">4275</a><a class="anker" href="#line4276">4276</a><a class="anker" href="#line4277">4277</a><a class="anker" href="#line4278">4278</a><a class="anker" href="#line4279">4279</a><a class="anker" href="#line4280">4280</a><a class="anker" href="#line4281">4281</a><a class="anker" href="#line4282">4282</a><a class="anker" href="#line4283">4283</a><a class="anker" href="#line4284">4284</a><a class="anker" href="#line4285">4285</a><a class="anker" href="#line4286">4286</a><a class="anker" href="#line4287">4287</a><a class="anker" href="#line4288">4288</a><a class="anker" href="#line4289">4289</a><a class="anker" href="#line4290">4290</a><a class="anker" href="#line4291">4291</a><a class="anker" href="#line4292">4292</a><a class="anker" href="#line4293">4293</a><a class="anker" href="#line4294">4294</a><a class="anker" href="#line4295">4295</a><a class="anker" href="#line4296">4296</a><a class="anker" href="#line4297">4297</a><a class="anker" href="#line4298">4298</a><a class="anker" href="#line4299">4299</a><a class="anker" href="#line4300">4300</a><a class="anker" href="#line4301">4301</a><a class="anker" href="#line4302">4302</a><a class="anker" href="#line4303">4303</a><a class="anker" href="#line4304">4304</a><a class="anker" href="#line4305">4305</a><a class="anker" href="#line4306">4306</a><a class="anker" href="#line4307">4307</a><a class="anker" href="#line4308">4308</a><a class="anker" href="#line4309">4309</a><a class="anker" href="#line4310">4310</a><a class="anker" href="#line4311">4311</a><a class="anker" href="#line4312">4312</a><a class="anker" href="#line4313">4313</a><a class="anker" href="#line4314">4314</a><a class="anker" href="#line4315">4315</a><a class="anker" href="#line4316">4316</a><a class="anker" href="#line4317">4317</a><a class="anker" href="#line4318">4318</a><a class="anker" href="#line4319">4319</a><a class="anker" href="#line4320">4320</a><a class="anker" href="#line4321">4321</a><a class="anker" href="#line4322">4322</a><a class="anker" href="#line4323">4323</a><a class="anker" href="#line4324">4324</a><a class="anker" href="#line4325">4325</a><a class="anker" href="#line4326">4326</a><a class="anker" href="#line4327">4327</a><a class="anker" href="#line4328">4328</a><a class="anker" href="#line4329">4329</a><a class="anker" href="#line4330">4330</a><a class="anker" href="#line4331">4331</a><a class="anker" href="#line4332">4332</a><a class="anker" href="#line4333">4333</a><a class="anker" href="#line4334">4334</a><a class="anker" href="#line4335">4335</a><a class="anker" href="#line4336">4336</a><a class="anker" href="#line4337">4337</a><a class="anker" href="#line4338">4338</a><a class="anker" href="#line4339">4339</a><a class="anker" href="#line4340">4340</a><a class="anker" href="#line4341">4341</a><a class="anker" href="#line4342">4342</a><a class="anker" href="#line4343">4343</a><a class="anker" href="#line4344">4344</a><a class="anker" href="#line4345">4345</a><a class="anker" href="#line4346">4346</a><a class="anker" href="#line4347">4347</a><a class="anker" href="#line4348">4348</a><a class="anker" href="#line4349">4349</a><a class="anker" href="#line4350">4350</a><a class="anker" href="#line4351">4351</a><a class="anker" href="#line4352">4352</a><a class="anker" href="#line4353">4353</a><a class="anker" href="#line4354">4354</a><a class="anker" href="#line4355">4355</a><a class="anker" href="#line4356">4356</a><a class="anker" href="#line4357">4357</a><a class="anker" href="#line4358">4358</a><a class="anker" href="#line4359">4359</a><a class="anker" href="#line4360">4360</a><a class="anker" href="#line4361">4361</a><a class="anker" href="#line4362">4362</a><a class="anker" href="#line4363">4363</a><a class="anker" href="#line4364">4364</a><a class="anker" href="#line4365">4365</a><a class="anker" href="#line4366">4366</a><a class="anker" href="#line4367">4367</a><a class="anker" href="#line4368">4368</a><a class="anker" href="#line4369">4369</a><a class="anker" href="#line4370">4370</a><a class="anker" href="#line4371">4371</a><a class="anker" href="#line4372">4372</a><a class="anker" href="#line4373">4373</a><a class="anker" href="#line4374">4374</a><a class="anker" href="#line4375">4375</a><a class="anker" href="#line4376">4376</a><a class="anker" href="#line4377">4377</a><a class="anker" href="#line4378">4378</a><a class="anker" href="#line4379">4379</a><a class="anker" href="#line4380">4380</a><a class="anker" href="#line4381">4381</a><a class="anker" href="#line4382">4382</a><a class="anker" href="#line4383">4383</a><a class="anker" href="#line4384">4384</a><a class="anker" href="#line4385">4385</a><a class="anker" href="#line4386">4386</a><a class="anker" href="#line4387">4387</a><a class="anker" href="#line4388">4388</a><a class="anker" href="#line4389">4389</a><a class="anker" href="#line4390">4390</a><a class="anker" href="#line4391">4391</a><a class="anker" href="#line4392">4392</a><a class="anker" href="#line4393">4393</a><a class="anker" href="#line4394">4394</a><a class="anker" href="#line4395">4395</a><a class="anker" href="#line4396">4396</a><a class="anker" href="#line4397">4397</a><a class="anker" href="#line4398">4398</a><a class="anker" href="#line4399">4399</a><a class="anker" href="#line4400">4400</a><a class="anker" href="#line4401">4401</a><a class="anker" href="#line4402">4402</a><a class="anker" href="#line4403">4403</a><a class="anker" href="#line4404">4404</a><a class="anker" href="#line4405">4405</a><a class="anker" href="#line4406">4406</a><a class="anker" href="#line4407">4407</a><a class="anker" href="#line4408">4408</a><a class="anker" href="#line4409">4409</a><a class="anker" href="#line4410">4410</a><a class="anker" href="#line4411">4411</a><a class="anker" href="#line4412">4412</a><a class="anker" href="#line4413">4413</a><a class="anker" href="#line4414">4414</a><a class="anker" href="#line4415">4415</a><a class="anker" href="#line4416">4416</a><a class="anker" href="#line4417">4417</a><a class="anker" href="#line4418">4418</a><a class="anker" href="#line4419">4419</a><a class="anker" href="#line4420">4420</a><a class="anker" href="#line4421">4421</a><a class="anker" href="#line4422">4422</a><a class="anker" href="#line4423">4423</a><a class="anker" href="#line4424">4424</a><a class="anker" href="#line4425">4425</a><a class="anker" href="#line4426">4426</a><a class="anker" href="#line4427">4427</a><a class="anker" href="#line4428">4428</a><a class="anker" href="#line4429">4429</a><a class="anker" href="#line4430">4430</a><a class="anker" href="#line4431">4431</a><a class="anker" href="#line4432">4432</a><a class="anker" href="#line4433">4433</a><a class="anker" href="#line4434">4434</a><a class="anker" href="#line4435">4435</a><a class="anker" href="#line4436">4436</a><a class="anker" href="#line4437">4437</a><a class="anker" href="#line4438">4438</a><a class="anker" href="#line4439">4439</a><a class="anker" href="#line4440">4440</a><a class="anker" href="#line4441">4441</a><a class="anker" href="#line4442">4442</a><a class="anker" href="#line4443">4443</a><a class="anker" href="#line4444">4444</a><a class="anker" href="#line4445">4445</a><a class="anker" href="#line4446">4446</a><a class="anker" href="#line4447">4447</a><a class="anker" href="#line4448">4448</a><a class="anker" href="#line4449">4449</a><a class="anker" href="#line4450">4450</a><a class="anker" href="#line4451">4451</a><a class="anker" href="#line4452">4452</a><a class="anker" href="#line4453">4453</a><a class="anker" href="#line4454">4454</a><a class="anker" href="#line4455">4455</a><a class="anker" href="#line4456">4456</a><a class="anker" href="#line4457">4457</a><a class="anker" href="#line4458">4458</a><a class="anker" href="#line4459">4459</a><a class="anker" href="#line4460">4460</a><a class="anker" href="#line4461">4461</a><a class="anker" href="#line4462">4462</a><a class="anker" href="#line4463">4463</a><a class="anker" href="#line4464">4464</a><a class="anker" href="#line4465">4465</a><a class="anker" href="#line4466">4466</a><a class="anker" href="#line4467">4467</a><a class="anker" href="#line4468">4468</a><a class="anker" href="#line4469">4469</a><a class="anker" href="#line4470">4470</a><a class="anker" href="#line4471">4471</a><a class="anker" href="#line4472">4472</a><a class="anker" href="#line4473">4473</a><a class="anker" href="#line4474">4474</a><a class="anker" href="#line4475">4475</a><a class="anker" href="#line4476">4476</a><a class="anker" href="#line4477">4477</a><a class="anker" href="#line4478">4478</a><a class="anker" href="#line4479">4479</a><a class="anker" href="#line4480">4480</a><a class="anker" href="#line4481">4481</a><a class="anker" href="#line4482">4482</a><a class="anker" href="#line4483">4483</a><a class="anker" href="#line4484">4484</a><a class="anker" href="#line4485">4485</a><a class="anker" href="#line4486">4486</a><a class="anker" href="#line4487">4487</a><a class="anker" href="#line4488">4488</a><a class="anker" href="#line4489">4489</a><a class="anker" href="#line4490">4490</a><a class="anker" href="#line4491">4491</a><a class="anker" href="#line4492">4492</a><a class="anker" href="#line4493">4493</a><a class="anker" href="#line4494">4494</a><a class="anker" href="#line4495">4495</a><a class="anker" href="#line4496">4496</a><a class="anker" href="#line4497">4497</a><a class="anker" href="#line4498">4498</a><a class="anker" href="#line4499">4499</a><a class="anker" href="#line4500">4500</a><a class="anker" href="#line4501">4501</a><a class="anker" href="#line4502">4502</a><a class="anker" href="#line4503">4503</a><a class="anker" href="#line4504">4504</a><a class="anker" href="#line4505">4505</a><a class="anker" href="#line4506">4506</a><a class="anker" href="#line4507">4507</a><a class="anker" href="#line4508">4508</a><a class="anker" href="#line4509">4509</a><a class="anker" href="#line4510">4510</a><a class="anker" href="#line4511">4511</a><a class="anker" href="#line4512">4512</a><a class="anker" href="#line4513">4513</a><a class="anker" href="#line4514">4514</a><a class="anker" href="#line4515">4515</a><a class="anker" href="#line4516">4516</a><a class="anker" href="#line4517">4517</a><a class="anker" href="#line4518">4518</a><a class="anker" href="#line4519">4519</a><a class="anker" href="#line4520">4520</a><a class="anker" href="#line4521">4521</a><a class="anker" href="#line4522">4522</a><a class="anker" href="#line4523">4523</a><a class="anker" href="#line4524">4524</a><a class="anker" href="#line4525">4525</a><a class="anker" href="#line4526">4526</a><a class="anker" href="#line4527">4527</a><a class="anker" href="#line4528">4528</a><a class="anker" href="#line4529">4529</a><a class="anker" href="#line4530">4530</a><a class="anker" href="#line4531">4531</a><a class="anker" href="#line4532">4532</a><a class="anker" href="#line4533">4533</a><a class="anker" href="#line4534">4534</a><a class="anker" href="#line4535">4535</a><a class="anker" href="#line4536">4536</a><a class="anker" href="#line4537">4537</a><a class="anker" href="#line4538">4538</a><a class="anker" href="#line4539">4539</a><a class="anker" href="#line4540">4540</a><a class="anker" href="#line4541">4541</a><a class="anker" href="#line4542">4542</a><a class="anker" href="#line4543">4543</a><a class="anker" href="#line4544">4544</a><a class="anker" href="#line4545">4545</a><a class="anker" href="#line4546">4546</a><a class="anker" href="#line4547">4547</a><a class="anker" href="#line4548">4548</a><a class="anker" href="#line4549">4549</a><a class="anker" href="#line4550">4550</a><a class="anker" href="#line4551">4551</a><a class="anker" href="#line4552">4552</a><a class="anker" href="#line4553">4553</a><a class="anker" href="#line4554">4554</a><a class="anker" href="#line4555">4555</a><a class="anker" href="#line4556">4556</a><a class="anker" href="#line4557">4557</a><a class="anker" href="#line4558">4558</a><a class="anker" href="#line4559">4559</a><a class="anker" href="#line4560">4560</a><a class="anker" href="#line4561">4561</a><a class="anker" href="#line4562">4562</a><a class="anker" href="#line4563">4563</a><a class="anker" href="#line4564">4564</a><a class="anker" href="#line4565">4565</a><a class="anker" href="#line4566">4566</a><a class="anker" href="#line4567">4567</a><a class="anker" href="#line4568">4568</a><a class="anker" href="#line4569">4569</a><a class="anker" href="#line4570">4570</a><a class="anker" href="#line4571">4571</a><a class="anker" href="#line4572">4572</a><a class="anker" href="#line4573">4573</a><a class="anker" href="#line4574">4574</a><a class="anker" href="#line4575">4575</a><a class="anker" href="#line4576">4576</a><a class="anker" href="#line4577">4577</a><a class="anker" href="#line4578">4578</a><a class="anker" href="#line4579">4579</a><a class="anker" href="#line4580">4580</a><a class="anker" href="#line4581">4581</a><a class="anker" href="#line4582">4582</a><a class="anker" href="#line4583">4583</a><a class="anker" href="#line4584">4584</a><a class="anker" href="#line4585">4585</a><a class="anker" href="#line4586">4586</a><a class="anker" href="#line4587">4587</a><a class="anker" href="#line4588">4588</a><a class="anker" href="#line4589">4589</a><a class="anker" href="#line4590">4590</a><a class="anker" href="#line4591">4591</a><a class="anker" href="#line4592">4592</a><a class="anker" href="#line4593">4593</a><a class="anker" href="#line4594">4594</a><a class="anker" href="#line4595">4595</a><a class="anker" href="#line4596">4596</a><a class="anker" href="#line4597">4597</a><a class="anker" href="#line4598">4598</a><a class="anker" href="#line4599">4599</a><a class="anker" href="#line4600">4600</a><a class="anker" href="#line4601">4601</a><a class="anker" href="#line4602">4602</a><a class="anker" href="#line4603">4603</a><a class="anker" href="#line4604">4604</a><a class="anker" href="#line4605">4605</a><a class="anker" href="#line4606">4606</a><a class="anker" href="#line4607">4607</a><a class="anker" href="#line4608">4608</a><a class="anker" href="#line4609">4609</a><a class="anker" href="#line4610">4610</a><a class="anker" href="#line4611">4611</a><a class="anker" href="#line4612">4612</a><a class="anker" href="#line4613">4613</a><a class="anker" href="#line4614">4614</a><a class="anker" href="#line4615">4615</a><a class="anker" href="#line4616">4616</a><a class="anker" href="#line4617">4617</a><a class="anker" href="#line4618">4618</a><a class="anker" href="#line4619">4619</a><a class="anker" href="#line4620">4620</a><a class="anker" href="#line4621">4621</a><a class="anker" href="#line4622">4622</a><a class="anker" href="#line4623">4623</a><a class="anker" href="#line4624">4624</a><a class="anker" href="#line4625">4625</a><a class="anker" href="#line4626">4626</a><a class="anker" href="#line4627">4627</a><a class="anker" href="#line4628">4628</a><a class="anker" href="#line4629">4629</a><a class="anker" href="#line4630">4630</a><a class="anker" href="#line4631">4631</a><a class="anker" href="#line4632">4632</a><a class="anker" href="#line4633">4633</a><a class="anker" href="#line4634">4634</a><a class="anker" href="#line4635">4635</a><a class="anker" href="#line4636">4636</a><a class="anker" href="#line4637">4637</a><a class="anker" href="#line4638">4638</a><a class="anker" href="#line4639">4639</a><a class="anker" href="#line4640">4640</a><a class="anker" href="#line4641">4641</a><a class="anker" href="#line4642">4642</a><a class="anker" href="#line4643">4643</a><a class="anker" href="#line4644">4644</a><a class="anker" href="#line4645">4645</a><a class="anker" href="#line4646">4646</a><a class="anker" href="#line4647">4647</a><a class="anker" href="#line4648">4648</a><a class="anker" href="#line4649">4649</a><a class="anker" href="#line4650">4650</a><a class="anker" href="#line4651">4651</a><a class="anker" href="#line4652">4652</a><a class="anker" href="#line4653">4653</a><a class="anker" href="#line4654">4654</a><a class="anker" href="#line4655">4655</a><a class="anker" href="#line4656">4656</a><a class="anker" href="#line4657">4657</a><a class="anker" href="#line4658">4658</a><a class="anker" href="#line4659">4659</a><a class="anker" href="#line4660">4660</a><a class="anker" href="#line4661">4661</a><a class="anker" href="#line4662">4662</a><a class="anker" href="#line4663">4663</a><a class="anker" href="#line4664">4664</a><a class="anker" href="#line4665">4665</a><a class="anker" href="#line4666">4666</a><a class="anker" href="#line4667">4667</a><a class="anker" href="#line4668">4668</a><a class="anker" href="#line4669">4669</a><a class="anker" href="#line4670">4670</a><a class="anker" href="#line4671">4671</a><a class="anker" href="#line4672">4672</a><a class="anker" href="#line4673">4673</a><a class="anker" href="#line4674">4674</a><a class="anker" href="#line4675">4675</a><a class="anker" href="#line4676">4676</a><a class="anker" href="#line4677">4677</a><a class="anker" href="#line4678">4678</a><a class="anker" href="#line4679">4679</a><a class="anker" href="#line4680">4680</a><a class="anker" href="#line4681">4681</a><a class="anker" href="#line4682">4682</a><a class="anker" href="#line4683">4683</a><a class="anker" href="#line4684">4684</a><a class="anker" href="#line4685">4685</a><a class="anker" href="#line4686">4686</a><a class="anker" href="#line4687">4687</a><a class="anker" href="#line4688">4688</a><a class="anker" href="#line4689">4689</a><a class="anker" href="#line4690">4690</a><a class="anker" href="#line4691">4691</a><a class="anker" href="#line4692">4692</a><a class="anker" href="#line4693">4693</a><a class="anker" href="#line4694">4694</a><a class="anker" href="#line4695">4695</a><a class="anker" href="#line4696">4696</a><a class="anker" href="#line4697">4697</a><a class="anker" href="#line4698">4698</a><a class="anker" href="#line4699">4699</a><a class="anker" href="#line4700">4700</a><a class="anker" href="#line4701">4701</a><a class="anker" href="#line4702">4702</a><a class="anker" href="#line4703">4703</a><a class="anker" href="#line4704">4704</a><a class="anker" href="#line4705">4705</a><a class="anker" href="#line4706">4706</a><a class="anker" href="#line4707">4707</a><a class="anker" href="#line4708">4708</a><a class="anker" href="#line4709">4709</a><a class="anker" href="#line4710">4710</a><a class="anker" href="#line4711">4711</a><a class="anker" href="#line4712">4712</a><a class="anker" href="#line4713">4713</a><a class="anker" href="#line4714">4714</a><a class="anker" href="#line4715">4715</a><a class="anker" href="#line4716">4716</a><a class="anker" href="#line4717">4717</a><a class="anker" href="#line4718">4718</a><a class="anker" href="#line4719">4719</a><a class="anker" href="#line4720">4720</a><a class="anker" href="#line4721">4721</a><a class="anker" href="#line4722">4722</a><a class="anker" href="#line4723">4723</a><a class="anker" href="#line4724">4724</a><a class="anker" href="#line4725">4725</a><a class="anker" href="#line4726">4726</a><a class="anker" href="#line4727">4727</a><a class="anker" href="#line4728">4728</a><a class="anker" href="#line4729">4729</a><a class="anker" href="#line4730">4730</a><a class="anker" href="#line4731">4731</a><a class="anker" href="#line4732">4732</a><a class="anker" href="#line4733">4733</a><a class="anker" href="#line4734">4734</a><a class="anker" href="#line4735">4735</a><a class="anker" href="#line4736">4736</a><a class="anker" href="#line4737">4737</a><a class="anker" href="#line4738">4738</a><a class="anker" href="#line4739">4739</a><a class="anker" href="#line4740">4740</a><a class="anker" href="#line4741">4741</a><a class="anker" href="#line4742">4742</a><a class="anker" href="#line4743">4743</a><a class="anker" href="#line4744">4744</a><a class="anker" href="#line4745">4745</a><a class="anker" href="#line4746">4746</a><a class="anker" href="#line4747">4747</a><a class="anker" href="#line4748">4748</a><a class="anker" href="#line4749">4749</a><a class="anker" href="#line4750">4750</a><a class="anker" href="#line4751">4751</a><a class="anker" href="#line4752">4752</a><a class="anker" href="#line4753">4753</a><a class="anker" href="#line4754">4754</a><a class="anker" href="#line4755">4755</a><a class="anker" href="#line4756">4756</a><a class="anker" href="#line4757">4757</a><a class="anker" href="#line4758">4758</a><a class="anker" href="#line4759">4759</a><a class="anker" href="#line4760">4760</a><a class="anker" href="#line4761">4761</a><a class="anker" href="#line4762">4762</a><a class="anker" href="#line4763">4763</a><a class="anker" href="#line4764">4764</a><a class="anker" href="#line4765">4765</a><a class="anker" href="#line4766">4766</a><a class="anker" href="#line4767">4767</a><a class="anker" href="#line4768">4768</a><a class="anker" href="#line4769">4769</a><a class="anker" href="#line4770">4770</a><a class="anker" href="#line4771">4771</a><a class="anker" href="#line4772">4772</a><a class="anker" href="#line4773">4773</a><a class="anker" href="#line4774">4774</a><a class="anker" href="#line4775">4775</a><a class="anker" href="#line4776">4776</a><a class="anker" href="#line4777">4777</a><a class="anker" href="#line4778">4778</a><a class="anker" href="#line4779">4779</a><a class="anker" href="#line4780">4780</a><a class="anker" href="#line4781">4781</a><a class="anker" href="#line4782">4782</a><a class="anker" href="#line4783">4783</a><a class="anker" href="#line4784">4784</a><a class="anker" href="#line4785">4785</a><a class="anker" href="#line4786">4786</a><a class="anker" href="#line4787">4787</a><a class="anker" href="#line4788">4788</a><a class="anker" href="#line4789">4789</a><a class="anker" href="#line4790">4790</a><a class="anker" href="#line4791">4791</a><a class="anker" href="#line4792">4792</a><a class="anker" href="#line4793">4793</a><a class="anker" href="#line4794">4794</a><a class="anker" href="#line4795">4795</a><a class="anker" href="#line4796">4796</a><a class="anker" href="#line4797">4797</a><a class="anker" href="#line4798">4798</a><a class="anker" href="#line4799">4799</a><a class="anker" href="#line4800">4800</a><a class="anker" href="#line4801">4801</a><a class="anker" href="#line4802">4802</a><a class="anker" href="#line4803">4803</a><a class="anker" href="#line4804">4804</a><a class="anker" href="#line4805">4805</a><a class="anker" href="#line4806">4806</a><a class="anker" href="#line4807">4807</a><a class="anker" href="#line4808">4808</a><a class="anker" href="#line4809">4809</a><a class="anker" href="#line4810">4810</a><a class="anker" href="#line4811">4811</a><a class="anker" href="#line4812">4812</a><a class="anker" href="#line4813">4813</a><a class="anker" href="#line4814">4814</a><a class="anker" href="#line4815">4815</a><a class="anker" href="#line4816">4816</a><a class="anker" href="#line4817">4817</a><a class="anker" href="#line4818">4818</a><a class="anker" href="#line4819">4819</a><a class="anker" href="#line4820">4820</a><a class="anker" href="#line4821">4821</a><a class="anker" href="#line4822">4822</a><a class="anker" href="#line4823">4823</a><a class="anker" href="#line4824">4824</a><a class="anker" href="#line4825">4825</a><a class="anker" href="#line4826">4826</a><a class="anker" href="#line4827">4827</a><a class="anker" href="#line4828">4828</a><a class="anker" href="#line4829">4829</a><a class="anker" href="#line4830">4830</a><a class="anker" href="#line4831">4831</a><a class="anker" href="#line4832">4832</a><a class="anker" href="#line4833">4833</a><a class="anker" href="#line4834">4834</a><a class="anker" href="#line4835">4835</a><a class="anker" href="#line4836">4836</a><a class="anker" href="#line4837">4837</a><a class="anker" href="#line4838">4838</a><a class="anker" href="#line4839">4839</a><a class="anker" href="#line4840">4840</a><a class="anker" href="#line4841">4841</a><a class="anker" href="#line4842">4842</a><a class="anker" href="#line4843">4843</a><a class="anker" href="#line4844">4844</a><a class="anker" href="#line4845">4845</a><a class="anker" href="#line4846">4846</a><a class="anker" href="#line4847">4847</a><a class="anker" href="#line4848">4848</a><a class="anker" href="#line4849">4849</a><a class="anker" href="#line4850">4850</a><a class="anker" href="#line4851">4851</a><a class="anker" href="#line4852">4852</a><a class="anker" href="#line4853">4853</a><a class="anker" href="#line4854">4854</a><a class="anker" href="#line4855">4855</a><a class="anker" href="#line4856">4856</a><a class="anker" href="#line4857">4857</a><a class="anker" href="#line4858">4858</a><a class="anker" href="#line4859">4859</a><a class="anker" href="#line4860">4860</a><a class="anker" href="#line4861">4861</a><a class="anker" href="#line4862">4862</a><a class="anker" href="#line4863">4863</a><a class="anker" href="#line4864">4864</a><a class="anker" href="#line4865">4865</a><a class="anker" href="#line4866">4866</a><a class="anker" href="#line4867">4867</a><a class="anker" href="#line4868">4868</a><a class="anker" href="#line4869">4869</a><a class="anker" href="#line4870">4870</a><a class="anker" href="#line4871">4871</a><a class="anker" href="#line4872">4872</a><a class="anker" href="#line4873">4873</a><a class="anker" href="#line4874">4874</a><a class="anker" href="#line4875">4875</a><a class="anker" href="#line4876">4876</a><a class="anker" href="#line4877">4877</a><a class="anker" href="#line4878">4878</a><a class="anker" href="#line4879">4879</a><a class="anker" href="#line4880">4880</a><a class="anker" href="#line4881">4881</a><a class="anker" href="#line4882">4882</a><a class="anker" href="#line4883">4883</a><a class="anker" href="#line4884">4884</a><a class="anker" href="#line4885">4885</a><a class="anker" href="#line4886">4886</a><a class="anker" href="#line4887">4887</a><a class="anker" href="#line4888">4888</a><a class="anker" href="#line4889">4889</a><a class="anker" href="#line4890">4890</a><a class="anker" href="#line4891">4891</a><a class="anker" href="#line4892">4892</a><a class="anker" href="#line4893">4893</a><a class="anker" href="#line4894">4894</a><a class="anker" href="#line4895">4895</a><a class="anker" href="#line4896">4896</a><a class="anker" href="#line4897">4897</a><a class="anker" href="#line4898">4898</a><a class="anker" href="#line4899">4899</a><a class="anker" href="#line4900">4900</a><a class="anker" href="#line4901">4901</a><a class="anker" href="#line4902">4902</a><a class="anker" href="#line4903">4903</a><a class="anker" href="#line4904">4904</a><a class="anker" href="#line4905">4905</a><a class="anker" href="#line4906">4906</a><a class="anker" href="#line4907">4907</a><a class="anker" href="#line4908">4908</a><a class="anker" href="#line4909">4909</a><a class="anker" href="#line4910">4910</a><a class="anker" href="#line4911">4911</a><a class="anker" href="#line4912">4912</a><a class="anker" href="#line4913">4913</a><a class="anker" href="#line4914">4914</a><a class="anker" href="#line4915">4915</a><a class="anker" href="#line4916">4916</a><a class="anker" href="#line4917">4917</a><a class="anker" href="#line4918">4918</a><a class="anker" href="#line4919">4919</a><a class="anker" href="#line4920">4920</a><a class="anker" href="#line4921">4921</a><a class="anker" href="#line4922">4922</a><a class="anker" href="#line4923">4923</a><a class="anker" href="#line4924">4924</a><a class="anker" href="#line4925">4925</a><a class="anker" href="#line4926">4926</a><a class="anker" href="#line4927">4927</a><a class="anker" href="#line4928">4928</a><a class="anker" href="#line4929">4929</a><a class="anker" href="#line4930">4930</a><a class="anker" href="#line4931">4931</a><a class="anker" href="#line4932">4932</a><a class="anker" href="#line4933">4933</a><a class="anker" href="#line4934">4934</a><a class="anker" href="#line4935">4935</a><a class="anker" href="#line4936">4936</a><a class="anker" href="#line4937">4937</a><a class="anker" href="#line4938">4938</a><a class="anker" href="#line4939">4939</a><a class="anker" href="#line4940">4940</a><a class="anker" href="#line4941">4941</a><a class="anker" href="#line4942">4942</a><a class="anker" href="#line4943">4943</a><a class="anker" href="#line4944">4944</a><a class="anker" href="#line4945">4945</a><a class="anker" href="#line4946">4946</a><a class="anker" href="#line4947">4947</a><a class="anker" href="#line4948">4948</a><a class="anker" href="#line4949">4949</a><a class="anker" href="#line4950">4950</a><a class="anker" href="#line4951">4951</a><a class="anker" href="#line4952">4952</a><a class="anker" href="#line4953">4953</a><a class="anker" href="#line4954">4954</a><a class="anker" href="#line4955">4955</a><a class="anker" href="#line4956">4956</a><a class="anker" href="#line4957">4957</a><a class="anker" href="#line4958">4958</a><a class="anker" href="#line4959">4959</a><a class="anker" href="#line4960">4960</a><a class="anker" href="#line4961">4961</a><a class="anker" href="#line4962">4962</a><a class="anker" href="#line4963">4963</a><a class="anker" href="#line4964">4964</a><a class="anker" href="#line4965">4965</a><a class="anker" href="#line4966">4966</a><a class="anker" href="#line4967">4967</a><a class="anker" href="#line4968">4968</a><a class="anker" href="#line4969">4969</a><a class="anker" href="#line4970">4970</a><a class="anker" href="#line4971">4971</a><a class="anker" href="#line4972">4972</a><a class="anker" href="#line4973">4973</a><a class="anker" href="#line4974">4974</a><a class="anker" href="#line4975">4975</a><a class="anker" href="#line4976">4976</a><a class="anker" href="#line4977">4977</a><a class="anker" href="#line4978">4978</a><a class="anker" href="#line4979">4979</a><a class="anker" href="#line4980">4980</a><a class="anker" href="#line4981">4981</a><a class="anker" href="#line4982">4982</a><a class="anker" href="#line4983">4983</a><a class="anker" href="#line4984">4984</a><a class="anker" href="#line4985">4985</a><a class="anker" href="#line4986">4986</a><a class="anker" href="#line4987">4987</a><a class="anker" href="#line4988">4988</a><a class="anker" href="#line4989">4989</a><a class="anker" href="#line4990">4990</a><a class="anker" href="#line4991">4991</a><a class="anker" href="#line4992">4992</a><a class="anker" href="#line4993">4993</a><a class="anker" href="#line4994">4994</a><a class="anker" href="#line4995">4995</a><a class="anker" href="#line4996">4996</a><a class="anker" href="#line4997">4997</a><a class="anker" href="#line4998">4998</a><a class="anker" href="#line4999">4999</a><a class="anker" href="#line5000">5000</a><a class="anker" href="#line5001">5001</a><a class="anker" href="#line5002">5002</a><a class="anker" href="#line5003">5003</a><a class="anker" href="#line5004">5004</a><a class="anker" href="#line5005">5005</a><a class="anker" href="#line5006">5006</a><a class="anker" href="#line5007">5007</a><a class="anker" href="#line5008">5008</a><a class="anker" href="#line5009">5009</a><a class="anker" href="#line5010">5010</a><a class="anker" href="#line5011">5011</a><a class="anker" href="#line5012">5012</a><a class="anker" href="#line5013">5013</a><a class="anker" href="#line5014">5014</a><a class="anker" href="#line5015">5015</a><a class="anker" href="#line5016">5016</a><a class="anker" href="#line5017">5017</a><a class="anker" href="#line5018">5018</a><a class="anker" href="#line5019">5019</a><a class="anker" href="#line5020">5020</a><a class="anker" href="#line5021">5021</a><a class="anker" href="#line5022">5022</a><a class="anker" href="#line5023">5023</a><a class="anker" href="#line5024">5024</a><a class="anker" href="#line5025">5025</a><a class="anker" href="#line5026">5026</a><a class="anker" href="#line5027">5027</a><a class="anker" href="#line5028">5028</a><a class="anker" href="#line5029">5029</a><a class="anker" href="#line5030">5030</a><a class="anker" href="#line5031">5031</a><a class="anker" href="#line5032">5032</a><a class="anker" href="#line5033">5033</a><a class="anker" href="#line5034">5034</a><a class="anker" href="#line5035">5035</a><a class="anker" href="#line5036">5036</a><a class="anker" href="#line5037">5037</a><a class="anker" href="#line5038">5038</a><a class="anker" href="#line5039">5039</a><a class="anker" href="#line5040">5040</a><a class="anker" href="#line5041">5041</a><a class="anker" href="#line5042">5042</a><a class="anker" href="#line5043">5043</a><a class="anker" href="#line5044">5044</a><a class="anker" href="#line5045">5045</a><a class="anker" href="#line5046">5046</a><a class="anker" href="#line5047">5047</a><a class="anker" href="#line5048">5048</a><a class="anker" href="#line5049">5049</a><a class="anker" href="#line5050">5050</a><a class="anker" href="#line5051">5051</a><a class="anker" href="#line5052">5052</a><a class="anker" href="#line5053">5053</a><a class="anker" href="#line5054">5054</a><a class="anker" href="#line5055">5055</a><a class="anker" href="#line5056">5056</a><a class="anker" href="#line5057">5057</a><a class="anker" href="#line5058">5058</a><a class="anker" href="#line5059">5059</a><a class="anker" href="#line5060">5060</a><a class="anker" href="#line5061">5061</a><a class="anker" href="#line5062">5062</a><a class="anker" href="#line5063">5063</a><a class="anker" href="#line5064">5064</a><a class="anker" href="#line5065">5065</a><a class="anker" href="#line5066">5066</a><a class="anker" href="#line5067">5067</a><a class="anker" href="#line5068">5068</a><a class="anker" href="#line5069">5069</a><a class="anker" href="#line5070">5070</a><a class="anker" href="#line5071">5071</a><a class="anker" href="#line5072">5072</a><a class="anker" href="#line5073">5073</a><a class="anker" href="#line5074">5074</a><a class="anker" href="#line5075">5075</a><a class="anker" href="#line5076">5076</a><a class="anker" href="#line5077">5077</a><a class="anker" href="#line5078">5078</a><a class="anker" href="#line5079">5079</a><a class="anker" href="#line5080">5080</a><a class="anker" href="#line5081">5081</a><a class="anker" href="#line5082">5082</a><a class="anker" href="#line5083">5083</a><a class="anker" href="#line5084">5084</a><a class="anker" href="#line5085">5085</a><a class="anker" href="#line5086">5086</a><a class="anker" href="#line5087">5087</a><a class="anker" href="#line5088">5088</a><a class="anker" href="#line5089">5089</a><a class="anker" href="#line5090">5090</a><a class="anker" href="#line5091">5091</a><a class="anker" href="#line5092">5092</a><a class="anker" href="#line5093">5093</a><a class="anker" href="#line5094">5094</a><a class="anker" href="#line5095">5095</a><a class="anker" href="#line5096">5096</a><a class="anker" href="#line5097">5097</a><a class="anker" href="#line5098">5098</a><a class="anker" href="#line5099">5099</a><a class="anker" href="#line5100">5100</a><a class="anker" href="#line5101">5101</a><a class="anker" href="#line5102">5102</a><a class="anker" href="#line5103">5103</a><a class="anker" href="#line5104">5104</a><a class="anker" href="#line5105">5105</a><a class="anker" href="#line5106">5106</a><a class="anker" href="#line5107">5107</a><a class="anker" href="#line5108">5108</a><a class="anker" href="#line5109">5109</a><a class="anker" href="#line5110">5110</a><a class="anker" href="#line5111">5111</a><a class="anker" href="#line5112">5112</a><a class="anker" href="#line5113">5113</a><a class="anker" href="#line5114">5114</a><a class="anker" href="#line5115">5115</a><a class="anker" href="#line5116">5116</a><a class="anker" href="#line5117">5117</a><a class="anker" href="#line5118">5118</a><a class="anker" href="#line5119">5119</a><a class="anker" href="#line5120">5120</a><a class="anker" href="#line5121">5121</a><a class="anker" href="#line5122">5122</a><a class="anker" href="#line5123">5123</a><a class="anker" href="#line5124">5124</a><a class="anker" href="#line5125">5125</a><a class="anker" href="#line5126">5126</a><a class="anker" href="#line5127">5127</a><a class="anker" href="#line5128">5128</a><a class="anker" href="#line5129">5129</a><a class="anker" href="#line5130">5130</a><a class="anker" href="#line5131">5131</a><a class="anker" href="#line5132">5132</a><a class="anker" href="#line5133">5133</a><a class="anker" href="#line5134">5134</a><a class="anker" href="#line5135">5135</a><a class="anker" href="#line5136">5136</a><a class="anker" href="#line5137">5137</a><a class="anker" href="#line5138">5138</a><a class="anker" href="#line5139">5139</a><a class="anker" href="#line5140">5140</a><a class="anker" href="#line5141">5141</a><a class="anker" href="#line5142">5142</a><a class="anker" href="#line5143">5143</a><a class="anker" href="#line5144">5144</a><a class="anker" href="#line5145">5145</a><a class="anker" href="#line5146">5146</a><a class="anker" href="#line5147">5147</a><a class="anker" href="#line5148">5148</a><a class="anker" href="#line5149">5149</a><a class="anker" href="#line5150">5150</a><a class="anker" href="#line5151">5151</a><a class="anker" href="#line5152">5152</a><a class="anker" href="#line5153">5153</a><a class="anker" href="#line5154">5154</a><a class="anker" href="#line5155">5155</a><a class="anker" href="#line5156">5156</a><a class="anker" href="#line5157">5157</a><a class="anker" href="#line5158">5158</a><a class="anker" href="#line5159">5159</a><a class="anker" href="#line5160">5160</a><a class="anker" href="#line5161">5161</a><a class="anker" href="#line5162">5162</a><a class="anker" href="#line5163">5163</a><a class="anker" href="#line5164">5164</a><a class="anker" href="#line5165">5165</a><a class="anker" href="#line5166">5166</a><a class="anker" href="#line5167">5167</a><a class="anker" href="#line5168">5168</a><a class="anker" href="#line5169">5169</a><a class="anker" href="#line5170">5170</a><a class="anker" href="#line5171">5171</a><a class="anker" href="#line5172">5172</a><a class="anker" href="#line5173">5173</a><a class="anker" href="#line5174">5174</a><a class="anker" href="#line5175">5175</a><a class="anker" href="#line5176">5176</a><a class="anker" href="#line5177">5177</a><a class="anker" href="#line5178">5178</a><a class="anker" href="#line5179">5179</a><a class="anker" href="#line5180">5180</a><a class="anker" href="#line5181">5181</a><a class="anker" href="#line5182">5182</a><a class="anker" href="#line5183">5183</a><a class="anker" href="#line5184">5184</a><a class="anker" href="#line5185">5185</a><a class="anker" href="#line5186">5186</a><a class="anker" href="#line5187">5187</a><a class="anker" href="#line5188">5188</a><a class="anker" href="#line5189">5189</a><a class="anker" href="#line5190">5190</a><a class="anker" href="#line5191">5191</a><a class="anker" href="#line5192">5192</a><a class="anker" href="#line5193">5193</a><a class="anker" href="#line5194">5194</a><a class="anker" href="#line5195">5195</a><a class="anker" href="#line5196">5196</a><a class="anker" href="#line5197">5197</a><a class="anker" href="#line5198">5198</a><a class="anker" href="#line5199">5199</a><a class="anker" href="#line5200">5200</a><a class="anker" href="#line5201">5201</a><a class="anker" href="#line5202">5202</a><a class="anker" href="#line5203">5203</a><a class="anker" href="#line5204">5204</a><a class="anker" href="#line5205">5205</a><a class="anker" href="#line5206">5206</a><a class="anker" href="#line5207">5207</a><a class="anker" href="#line5208">5208</a><a class="anker" href="#line5209">5209</a><a class="anker" href="#line5210">5210</a><a class="anker" href="#line5211">5211</a><a class="anker" href="#line5212">5212</a><a class="anker" href="#line5213">5213</a><a class="anker" href="#line5214">5214</a><a class="anker" href="#line5215">5215</a><a class="anker" href="#line5216">5216</a><a class="anker" href="#line5217">5217</a><a class="anker" href="#line5218">5218</a><a class="anker" href="#line5219">5219</a><a class="anker" href="#line5220">5220</a><a class="anker" href="#line5221">5221</a><a class="anker" href="#line5222">5222</a><a class="anker" href="#line5223">5223</a><a class="anker" href="#line5224">5224</a><a class="anker" href="#line5225">5225</a><a class="anker" href="#line5226">5226</a><a class="anker" href="#line5227">5227</a><a class="anker" href="#line5228">5228</a><a class="anker" href="#line5229">5229</a><a class="anker" href="#line5230">5230</a><a class="anker" href="#line5231">5231</a><a class="anker" href="#line5232">5232</a><a class="anker" href="#line5233">5233</a><a class="anker" href="#line5234">5234</a><a class="anker" href="#line5235">5235</a><a class="anker" href="#line5236">5236</a><a class="anker" href="#line5237">5237</a><a class="anker" href="#line5238">5238</a><a class="anker" href="#line5239">5239</a><a class="anker" href="#line5240">5240</a><a class="anker" href="#line5241">5241</a><a class="anker" href="#line5242">5242</a><a class="anker" href="#line5243">5243</a><a class="anker" href="#line5244">5244</a><a class="anker" href="#line5245">5245</a><a class="anker" href="#line5246">5246</a><a class="anker" href="#line5247">5247</a><a class="anker" href="#line5248">5248</a><a class="anker" href="#line5249">5249</a><a class="anker" href="#line5250">5250</a><a class="anker" href="#line5251">5251</a><a class="anker" href="#line5252">5252</a><a class="anker" href="#line5253">5253</a><a class="anker" href="#line5254">5254</a><a class="anker" href="#line5255">5255</a><a class="anker" href="#line5256">5256</a><a class="anker" href="#line5257">5257</a><a class="anker" href="#line5258">5258</a><a class="anker" href="#line5259">5259</a><a class="anker" href="#line5260">5260</a><a class="anker" href="#line5261">5261</a><a class="anker" href="#line5262">5262</a><a class="anker" href="#line5263">5263</a><a class="anker" href="#line5264">5264</a><a class="anker" href="#line5265">5265</a><a class="anker" href="#line5266">5266</a><a class="anker" href="#line5267">5267</a><a class="anker" href="#line5268">5268</a><a class="anker" href="#line5269">5269</a><a class="anker" href="#line5270">5270</a><a class="anker" href="#line5271">5271</a><a class="anker" href="#line5272">5272</a><a class="anker" href="#line5273">5273</a><a class="anker" href="#line5274">5274</a><a class="anker" href="#line5275">5275</a><a class="anker" href="#line5276">5276</a><a class="anker" href="#line5277">5277</a><a class="anker" href="#line5278">5278</a><a class="anker" href="#line5279">5279</a><a class="anker" href="#line5280">5280</a><a class="anker" href="#line5281">5281</a><a class="anker" href="#line5282">5282</a><a class="anker" href="#line5283">5283</a><a class="anker" href="#line5284">5284</a><a class="anker" href="#line5285">5285</a><a class="anker" href="#line5286">5286</a><a class="anker" href="#line5287">5287</a><a class="anker" href="#line5288">5288</a><a class="anker" href="#line5289">5289</a><a class="anker" href="#line5290">5290</a><a class="anker" href="#line5291">5291</a><a class="anker" href="#line5292">5292</a><a class="anker" href="#line5293">5293</a><a class="anker" href="#line5294">5294</a><a class="anker" href="#line5295">5295</a><a class="anker" href="#line5296">5296</a><a class="anker" href="#line5297">5297</a><a class="anker" href="#line5298">5298</a><a class="anker" href="#line5299">5299</a><a class="anker" href="#line5300">5300</a><a class="anker" href="#line5301">5301</a><a class="anker" href="#line5302">5302</a><a class="anker" href="#line5303">5303</a><a class="anker" href="#line5304">5304</a><a class="anker" href="#line5305">5305</a><a class="anker" href="#line5306">5306</a><a class="anker" href="#line5307">5307</a><a class="anker" href="#line5308">5308</a><a class="anker" href="#line5309">5309</a><a class="anker" href="#line5310">5310</a><a class="anker" href="#line5311">5311</a><a class="anker" href="#line5312">5312</a><a class="anker" href="#line5313">5313</a><a class="anker" href="#line5314">5314</a><a class="anker" href="#line5315">5315</a><a class="anker" href="#line5316">5316</a><a class="anker" href="#line5317">5317</a><a class="anker" href="#line5318">5318</a><a class="anker" href="#line5319">5319</a><a class="anker" href="#line5320">5320</a><a class="anker" href="#line5321">5321</a><a class="anker" href="#line5322">5322</a><a class="anker" href="#line5323">5323</a><a class="anker" href="#line5324">5324</a><a class="anker" href="#line5325">5325</a><a class="anker" href="#line5326">5326</a><a class="anker" href="#line5327">5327</a><a class="anker" href="#line5328">5328</a><a class="anker" href="#line5329">5329</a><a class="anker" href="#line5330">5330</a><a class="anker" href="#line5331">5331</a><a class="anker" href="#line5332">5332</a><a class="anker" href="#line5333">5333</a><a class="anker" href="#line5334">5334</a><a class="anker" href="#line5335">5335</a><a class="anker" href="#line5336">5336</a><a class="anker" href="#line5337">5337</a><a class="anker" href="#line5338">5338</a><a class="anker" href="#line5339">5339</a><a class="anker" href="#line5340">5340</a><a class="anker" href="#line5341">5341</a><a class="anker" href="#line5342">5342</a><a class="anker" href="#line5343">5343</a><a class="anker" href="#line5344">5344</a><a class="anker" href="#line5345">5345</a><a class="anker" href="#line5346">5346</a><a class="anker" href="#line5347">5347</a><a class="anker" href="#line5348">5348</a><a class="anker" href="#line5349">5349</a><a class="anker" href="#line5350">5350</a><a class="anker" href="#line5351">5351</a><a class="anker" href="#line5352">5352</a><a class="anker" href="#line5353">5353</a><a class="anker" href="#line5354">5354</a><a class="anker" href="#line5355">5355</a><a class="anker" href="#line5356">5356</a><a class="anker" href="#line5357">5357</a><a class="anker" href="#line5358">5358</a><a class="anker" href="#line5359">5359</a><a class="anker" href="#line5360">5360</a><a class="anker" href="#line5361">5361</a><a class="anker" href="#line5362">5362</a><a class="anker" href="#line5363">5363</a><a class="anker" href="#line5364">5364</a><a class="anker" href="#line5365">5365</a><a class="anker" href="#line5366">5366</a><a class="anker" href="#line5367">5367</a><a class="anker" href="#line5368">5368</a><a class="anker" href="#line5369">5369</a><a class="anker" href="#line5370">5370</a><a class="anker" href="#line5371">5371</a><a class="anker" href="#line5372">5372</a><a class="anker" href="#line5373">5373</a><a class="anker" href="#line5374">5374</a><a class="anker" href="#line5375">5375</a><a class="anker" href="#line5376">5376</a><a class="anker" href="#line5377">5377</a><a class="anker" href="#line5378">5378</a><a class="anker" href="#line5379">5379</a><a class="anker" href="#line5380">5380</a><a class="anker" href="#line5381">5381</a><a class="anker" href="#line5382">5382</a><a class="anker" href="#line5383">5383</a><a class="anker" href="#line5384">5384</a><a class="anker" href="#line5385">5385</a><a class="anker" href="#line5386">5386</a><a class="anker" href="#line5387">5387</a><a class="anker" href="#line5388">5388</a><a class="anker" href="#line5389">5389</a><a class="anker" href="#line5390">5390</a><a class="anker" href="#line5391">5391</a><a class="anker" href="#line5392">5392</a><a class="anker" href="#line5393">5393</a><a class="anker" href="#line5394">5394</a><a class="anker" href="#line5395">5395</a><a class="anker" href="#line5396">5396</a><a class="anker" href="#line5397">5397</a><a class="anker" href="#line5398">5398</a><a class="anker" href="#line5399">5399</a><a class="anker" href="#line5400">5400</a><a class="anker" href="#line5401">5401</a><a class="anker" href="#line5402">5402</a><a class="anker" href="#line5403">5403</a><a class="anker" href="#line5404">5404</a><a class="anker" href="#line5405">5405</a><a class="anker" href="#line5406">5406</a><a class="anker" href="#line5407">5407</a><a class="anker" href="#line5408">5408</a><a class="anker" href="#line5409">5409</a><a class="anker" href="#line5410">5410</a><a class="anker" href="#line5411">5411</a><a class="anker" href="#line5412">5412</a><a class="anker" href="#line5413">5413</a><a class="anker" href="#line5414">5414</a><a class="anker" href="#line5415">5415</a><a class="anker" href="#line5416">5416</a><a class="anker" href="#line5417">5417</a><a class="anker" href="#line5418">5418</a><a class="anker" href="#line5419">5419</a><a class="anker" href="#line5420">5420</a><a class="anker" href="#line5421">5421</a><a class="anker" href="#line5422">5422</a><a class="anker" href="#line5423">5423</a><a class="anker" href="#line5424">5424</a><a class="anker" href="#line5425">5425</a><a class="anker" href="#line5426">5426</a><a class="anker" href="#line5427">5427</a><a class="anker" href="#line5428">5428</a><a class="anker" href="#line5429">5429</a><a class="anker" href="#line5430">5430</a><a class="anker" href="#line5431">5431</a><a class="anker" href="#line5432">5432</a><a class="anker" href="#line5433">5433</a><a class="anker" href="#line5434">5434</a><a class="anker" href="#line5435">5435</a><a class="anker" href="#line5436">5436</a><a class="anker" href="#line5437">5437</a><a class="anker" href="#line5438">5438</a><a class="anker" href="#line5439">5439</a><a class="anker" href="#line5440">5440</a><a class="anker" href="#line5441">5441</a><a class="anker" href="#line5442">5442</a><a class="anker" href="#line5443">5443</a><a class="anker" href="#line5444">5444</a><a class="anker" href="#line5445">5445</a><a class="anker" href="#line5446">5446</a><a class="anker" href="#line5447">5447</a><a class="anker" href="#line5448">5448</a><a class="anker" href="#line5449">5449</a><a class="anker" href="#line5450">5450</a><a class="anker" href="#line5451">5451</a><a class="anker" href="#line5452">5452</a><a class="anker" href="#line5453">5453</a><a class="anker" href="#line5454">5454</a><a class="anker" href="#line5455">5455</a><a class="anker" href="#line5456">5456</a><a class="anker" href="#line5457">5457</a><a class="anker" href="#line5458">5458</a><a class="anker" href="#line5459">5459</a><a class="anker" href="#line5460">5460</a><a class="anker" href="#line5461">5461</a><a class="anker" href="#line5462">5462</a><a class="anker" href="#line5463">5463</a><a class="anker" href="#line5464">5464</a><a class="anker" href="#line5465">5465</a><a class="anker" href="#line5466">5466</a><a class="anker" href="#line5467">5467</a><a class="anker" href="#line5468">5468</a><a class="anker" href="#line5469">5469</a><a class="anker" href="#line5470">5470</a><a class="anker" href="#line5471">5471</a><a class="anker" href="#line5472">5472</a><a class="anker" href="#line5473">5473</a><a class="anker" href="#line5474">5474</a><a class="anker" href="#line5475">5475</a><a class="anker" href="#line5476">5476</a><a class="anker" href="#line5477">5477</a><a class="anker" href="#line5478">5478</a><a class="anker" href="#line5479">5479</a><a class="anker" href="#line5480">5480</a><a class="anker" href="#line5481">5481</a><a class="anker" href="#line5482">5482</a><a class="anker" href="#line5483">5483</a><a class="anker" href="#line5484">5484</a><a class="anker" href="#line5485">5485</a><a class="anker" href="#line5486">5486</a><a class="anker" href="#line5487">5487</a><a class="anker" href="#line5488">5488</a><a class="anker" href="#line5489">5489</a><a class="anker" href="#line5490">5490</a><a class="anker" href="#line5491">5491</a><a class="anker" href="#line5492">5492</a><a class="anker" href="#line5493">5493</a><a class="anker" href="#line5494">5494</a><a class="anker" href="#line5495">5495</a><a class="anker" href="#line5496">5496</a><a class="anker" href="#line5497">5497</a><a class="anker" href="#line5498">5498</a><a class="anker" href="#line5499">5499</a><a class="anker" href="#line5500">5500</a><a class="anker" href="#line5501">5501</a><a class="anker" href="#line5502">5502</a><a class="anker" href="#line5503">5503</a><a class="anker" href="#line5504">5504</a><a class="anker" href="#line5505">5505</a><a class="anker" href="#line5506">5506</a><a class="anker" href="#line5507">5507</a><a class="anker" href="#line5508">5508</a><a class="anker" href="#line5509">5509</a><a class="anker" href="#line5510">5510</a><a class="anker" href="#line5511">5511</a><a class="anker" href="#line5512">5512</a><a class="anker" href="#line5513">5513</a><a class="anker" href="#line5514">5514</a><a class="anker" href="#line5515">5515</a><a class="anker" href="#line5516">5516</a><a class="anker" href="#line5517">5517</a><a class="anker" href="#line5518">5518</a><a class="anker" href="#line5519">5519</a><a class="anker" href="#line5520">5520</a><a class="anker" href="#line5521">5521</a><a class="anker" href="#line5522">5522</a><a class="anker" href="#line5523">5523</a><a class="anker" href="#line5524">5524</a><a class="anker" href="#line5525">5525</a><a class="anker" href="#line5526">5526</a><a class="anker" href="#line5527">5527</a><a class="anker" href="#line5528">5528</a><a class="anker" href="#line5529">5529</a><a class="anker" href="#line5530">5530</a><a class="anker" href="#line5531">5531</a><a class="anker" href="#line5532">5532</a><a class="anker" href="#line5533">5533</a><a class="anker" href="#line5534">5534</a><a class="anker" href="#line5535">5535</a><a class="anker" href="#line5536">5536</a><a class="anker" href="#line5537">5537</a><a class="anker" href="#line5538">5538</a><a class="anker" href="#line5539">5539</a><a class="anker" href="#line5540">5540</a><a class="anker" href="#line5541">5541</a><a class="anker" href="#line5542">5542</a><a class="anker" href="#line5543">5543</a><a class="anker" href="#line5544">5544</a><a class="anker" href="#line5545">5545</a><a class="anker" href="#line5546">5546</a><a class="anker" href="#line5547">5547</a><a class="anker" href="#line5548">5548</a><a class="anker" href="#line5549">5549</a><a class="anker" href="#line5550">5550</a><a class="anker" href="#line5551">5551</a><a class="anker" href="#line5552">5552</a><a class="anker" href="#line5553">5553</a><a class="anker" href="#line5554">5554</a><a class="anker" href="#line5555">5555</a><a class="anker" href="#line5556">5556</a><a class="anker" href="#line5557">5557</a><a class="anker" href="#line5558">5558</a><a class="anker" href="#line5559">5559</a><a class="anker" href="#line5560">5560</a><a class="anker" href="#line5561">5561</a><a class="anker" href="#line5562">5562</a><a class="anker" href="#line5563">5563</a><a class="anker" href="#line5564">5564</a><a class="anker" href="#line5565">5565</a><a class="anker" href="#line5566">5566</a><a class="anker" href="#line5567">5567</a><a class="anker" href="#line5568">5568</a><a class="anker" href="#line5569">5569</a><a class="anker" href="#line5570">5570</a><a class="anker" href="#line5571">5571</a><a class="anker" href="#line5572">5572</a><a class="anker" href="#line5573">5573</a><a class="anker" href="#line5574">5574</a><a class="anker" href="#line5575">5575</a><a class="anker" href="#line5576">5576</a><a class="anker" href="#line5577">5577</a><a class="anker" href="#line5578">5578</a><a class="anker" href="#line5579">5579</a><a class="anker" href="#line5580">5580</a><a class="anker" href="#line5581">5581</a><a class="anker" href="#line5582">5582</a><a class="anker" href="#line5583">5583</a><a class="anker" href="#line5584">5584</a><a class="anker" href="#line5585">5585</a><a class="anker" href="#line5586">5586</a><a class="anker" href="#line5587">5587</a><a class="anker" href="#line5588">5588</a><a class="anker" href="#line5589">5589</a><a class="anker" href="#line5590">5590</a><a class="anker" href="#line5591">5591</a><a class="anker" href="#line5592">5592</a><a class="anker" href="#line5593">5593</a><a class="anker" href="#line5594">5594</a><a class="anker" href="#line5595">5595</a><a class="anker" href="#line5596">5596</a><a class="anker" href="#line5597">5597</a><a class="anker" href="#line5598">5598</a><a class="anker" href="#line5599">5599</a><a class="anker" href="#line5600">5600</a><a class="anker" href="#line5601">5601</a><a class="anker" href="#line5602">5602</a><a class="anker" href="#line5603">5603</a><a class="anker" href="#line5604">5604</a><a class="anker" href="#line5605">5605</a><a class="anker" href="#line5606">5606</a><a class="anker" href="#line5607">5607</a><a class="anker" href="#line5608">5608</a><a class="anker" href="#line5609">5609</a><a class="anker" href="#line5610">5610</a><a class="anker" href="#line5611">5611</a><a class="anker" href="#line5612">5612</a><a class="anker" href="#line5613">5613</a><a class="anker" href="#line5614">5614</a><a class="anker" href="#line5615">5615</a><a class="anker" href="#line5616">5616</a><a class="anker" href="#line5617">5617</a><a class="anker" href="#line5618">5618</a><a class="anker" href="#line5619">5619</a><a class="anker" href="#line5620">5620</a><a class="anker" href="#line5621">5621</a><a class="anker" href="#line5622">5622</a><a class="anker" href="#line5623">5623</a><a class="anker" href="#line5624">5624</a><a class="anker" href="#line5625">5625</a><a class="anker" href="#line5626">5626</a><a class="anker" href="#line5627">5627</a><a class="anker" href="#line5628">5628</a><a class="anker" href="#line5629">5629</a><a class="anker" href="#line5630">5630</a><a class="anker" href="#line5631">5631</a><a class="anker" href="#line5632">5632</a><a class="anker" href="#line5633">5633</a><a class="anker" href="#line5634">5634</a><a class="anker" href="#line5635">5635</a><a class="anker" href="#line5636">5636</a><a class="anker" href="#line5637">5637</a><a class="anker" href="#line5638">5638</a><a class="anker" href="#line5639">5639</a><a class="anker" href="#line5640">5640</a><a class="anker" href="#line5641">5641</a><a class="anker" href="#line5642">5642</a><a class="anker" href="#line5643">5643</a><a class="anker" href="#line5644">5644</a><a class="anker" href="#line5645">5645</a><a class="anker" href="#line5646">5646</a><a class="anker" href="#line5647">5647</a><a class="anker" href="#line5648">5648</a><a class="anker" href="#line5649">5649</a><a class="anker" href="#line5650">5650</a><a class="anker" href="#line5651">5651</a><a class="anker" href="#line5652">5652</a><a class="anker" href="#line5653">5653</a><a class="anker" href="#line5654">5654</a><a class="anker" href="#line5655">5655</a><a class="anker" href="#line5656">5656</a><a class="anker" href="#line5657">5657</a><a class="anker" href="#line5658">5658</a><a class="anker" href="#line5659">5659</a><a class="anker" href="#line5660">5660</a><a class="anker" href="#line5661">5661</a><a class="anker" href="#line5662">5662</a><a class="anker" href="#line5663">5663</a><a class="anker" href="#line5664">5664</a><a class="anker" href="#line5665">5665</a><a class="anker" href="#line5666">5666</a><a class="anker" href="#line5667">5667</a><a class="anker" href="#line5668">5668</a><a class="anker" href="#line5669">5669</a><a class="anker" href="#line5670">5670</a><a class="anker" href="#line5671">5671</a><a class="anker" href="#line5672">5672</a><a class="anker" href="#line5673">5673</a><a class="anker" href="#line5674">5674</a><a class="anker" href="#line5675">5675</a><a class="anker" href="#line5676">5676</a><a class="anker" href="#line5677">5677</a><a class="anker" href="#line5678">5678</a><a class="anker" href="#line5679">5679</a><a class="anker" href="#line5680">5680</a><a class="anker" href="#line5681">5681</a><a class="anker" href="#line5682">5682</a><a class="anker" href="#line5683">5683</a><a class="anker" href="#line5684">5684</a><a class="anker" href="#line5685">5685</a><a class="anker" href="#line5686">5686</a><a class="anker" href="#line5687">5687</a><a class="anker" href="#line5688">5688</a><a class="anker" href="#line5689">5689</a><a class="anker" href="#line5690">5690</a><a class="anker" href="#line5691">5691</a><a class="anker" href="#line5692">5692</a><a class="anker" href="#line5693">5693</a><a class="anker" href="#line5694">5694</a><a class="anker" href="#line5695">5695</a><a class="anker" href="#line5696">5696</a><a class="anker" href="#line5697">5697</a><a class="anker" href="#line5698">5698</a><a class="anker" href="#line5699">5699</a><a class="anker" href="#line5700">5700</a><a class="anker" href="#line5701">5701</a><a class="anker" href="#line5702">5702</a><a class="anker" href="#line5703">5703</a><a class="anker" href="#line5704">5704</a><a class="anker" href="#line5705">5705</a><a class="anker" href="#line5706">5706</a><a class="anker" href="#line5707">5707</a><a class="anker" href="#line5708">5708</a><a class="anker" href="#line5709">5709</a><a class="anker" href="#line5710">5710</a><a class="anker" href="#line5711">5711</a><a class="anker" href="#line5712">5712</a><a class="anker" href="#line5713">5713</a><a class="anker" href="#line5714">5714</a><a class="anker" href="#line5715">5715</a><a class="anker" href="#line5716">5716</a><a class="anker" href="#line5717">5717</a><a class="anker" href="#line5718">5718</a><a class="anker" href="#line5719">5719</a><a class="anker" href="#line5720">5720</a><a class="anker" href="#line5721">5721</a><a class="anker" href="#line5722">5722</a><a class="anker" href="#line5723">5723</a><a class="anker" href="#line5724">5724</a><a class="anker" href="#line5725">5725</a><a class="anker" href="#line5726">5726</a><a class="anker" href="#line5727">5727</a><a class="anker" href="#line5728">5728</a><a class="anker" href="#line5729">5729</a><a class="anker" href="#line5730">5730</a><a class="anker" href="#line5731">5731</a><a class="anker" href="#line5732">5732</a><a class="anker" href="#line5733">5733</a><a class="anker" href="#line5734">5734</a><a class="anker" href="#line5735">5735</a><a class="anker" href="#line5736">5736</a><a class="anker" href="#line5737">5737</a><a class="anker" href="#line5738">5738</a><a class="anker" href="#line5739">5739</a><a class="anker" href="#line5740">5740</a><a class="anker" href="#line5741">5741</a><a class="anker" href="#line5742">5742</a><a class="anker" href="#line5743">5743</a><a class="anker" href="#line5744">5744</a><a class="anker" href="#line5745">5745</a><a class="anker" href="#line5746">5746</a><a class="anker" href="#line5747">5747</a><a class="anker" href="#line5748">5748</a><a class="anker" href="#line5749">5749</a><a class="anker" href="#line5750">5750</a><a class="anker" href="#line5751">5751</a><a class="anker" href="#line5752">5752</a><a class="anker" href="#line5753">5753</a><a class="anker" href="#line5754">5754</a><a class="anker" href="#line5755">5755</a><a class="anker" href="#line5756">5756</a><a class="anker" href="#line5757">5757</a><a class="anker" href="#line5758">5758</a><a class="anker" href="#line5759">5759</a><a class="anker" href="#line5760">5760</a><a class="anker" href="#line5761">5761</a><a class="anker" href="#line5762">5762</a><a class="anker" href="#line5763">5763</a><a class="anker" href="#line5764">5764</a><a class="anker" href="#line5765">5765</a><a class="anker" href="#line5766">5766</a><a class="anker" href="#line5767">5767</a><a class="anker" href="#line5768">5768</a><a class="anker" href="#line5769">5769</a><a class="anker" href="#line5770">5770</a><a class="anker" href="#line5771">5771</a><a class="anker" href="#line5772">5772</a><a class="anker" href="#line5773">5773</a><a class="anker" href="#line5774">5774</a><a class="anker" href="#line5775">5775</a><a class="anker" href="#line5776">5776</a><a class="anker" href="#line5777">5777</a><a class="anker" href="#line5778">5778</a><a class="anker" href="#line5779">5779</a><a class="anker" href="#line5780">5780</a><a class="anker" href="#line5781">5781</a><a class="anker" href="#line5782">5782</a><a class="anker" href="#line5783">5783</a><a class="anker" href="#line5784">5784</a><a class="anker" href="#line5785">5785</a><a class="anker" href="#line5786">5786</a><a class="anker" href="#line5787">5787</a><a class="anker" href="#line5788">5788</a><a class="anker" href="#line5789">5789</a><a class="anker" href="#line5790">5790</a><a class="anker" href="#line5791">5791</a><a class="anker" href="#line5792">5792</a><a class="anker" href="#line5793">5793</a><a class="anker" href="#line5794">5794</a><a class="anker" href="#line5795">5795</a><a class="anker" href="#line5796">5796</a><a class="anker" href="#line5797">5797</a><a class="anker" href="#line5798">5798</a><a class="anker" href="#line5799">5799</a><a class="anker" href="#line5800">5800</a><a class="anker" href="#line5801">5801</a><a class="anker" href="#line5802">5802</a><a class="anker" href="#line5803">5803</a><a class="anker" href="#line5804">5804</a><a class="anker" href="#line5805">5805</a><a class="anker" href="#line5806">5806</a><a class="anker" href="#line5807">5807</a><a class="anker" href="#line5808">5808</a><a class="anker" href="#line5809">5809</a><a class="anker" href="#line5810">5810</a><a class="anker" href="#line5811">5811</a><a class="anker" href="#line5812">5812</a><a class="anker" href="#line5813">5813</a><a class="anker" href="#line5814">5814</a><a class="anker" href="#line5815">5815</a><a class="anker" href="#line5816">5816</a><a class="anker" href="#line5817">5817</a><a class="anker" href="#line5818">5818</a><a class="anker" href="#line5819">5819</a><a class="anker" href="#line5820">5820</a><a class="anker" href="#line5821">5821</a><a class="anker" href="#line5822">5822</a><a class="anker" href="#line5823">5823</a><a class="anker" href="#line5824">5824</a><a class="anker" href="#line5825">5825</a><a class="anker" href="#line5826">5826</a><a class="anker" href="#line5827">5827</a><a class="anker" href="#line5828">5828</a><a class="anker" href="#line5829">5829</a><a class="anker" href="#line5830">5830</a><a class="anker" href="#line5831">5831</a><a class="anker" href="#line5832">5832</a><a class="anker" href="#line5833">5833</a><a class="anker" href="#line5834">5834</a><a class="anker" href="#line5835">5835</a><a class="anker" href="#line5836">5836</a><a class="anker" href="#line5837">5837</a><a class="anker" href="#line5838">5838</a><a class="anker" href="#line5839">5839</a><a class="anker" href="#line5840">5840</a><a class="anker" href="#line5841">5841</a><a class="anker" href="#line5842">5842</a><a class="anker" href="#line5843">5843</a><a class="anker" href="#line5844">5844</a><a class="anker" href="#line5845">5845</a><a class="anker" href="#line5846">5846</a><a class="anker" href="#line5847">5847</a><a class="anker" href="#line5848">5848</a><a class="anker" href="#line5849">5849</a><a class="anker" href="#line5850">5850</a><a class="anker" href="#line5851">5851</a><a class="anker" href="#line5852">5852</a><a class="anker" href="#line5853">5853</a><a class="anker" href="#line5854">5854</a><a class="anker" href="#line5855">5855</a><a class="anker" href="#line5856">5856</a><a class="anker" href="#line5857">5857</a><a class="anker" href="#line5858">5858</a><a class="anker" href="#line5859">5859</a><a class="anker" href="#line5860">5860</a><a class="anker" href="#line5861">5861</a><a class="anker" href="#line5862">5862</a><a class="anker" href="#line5863">5863</a><a class="anker" href="#line5864">5864</a><a class="anker" href="#line5865">5865</a><a class="anker" href="#line5866">5866</a><a class="anker" href="#line5867">5867</a><a class="anker" href="#line5868">5868</a><a class="anker" href="#line5869">5869</a><a class="anker" href="#line5870">5870</a><a class="anker" href="#line5871">5871</a><a class="anker" href="#line5872">5872</a><a class="anker" href="#line5873">5873</a><a class="anker" href="#line5874">5874</a><a class="anker" href="#line5875">5875</a><a class="anker" href="#line5876">5876</a><a class="anker" href="#line5877">5877</a><a class="anker" href="#line5878">5878</a><a class="anker" href="#line5879">5879</a><a class="anker" href="#line5880">5880</a><a class="anker" href="#line5881">5881</a><a class="anker" href="#line5882">5882</a><a class="anker" href="#line5883">5883</a><a class="anker" href="#line5884">5884</a><a class="anker" href="#line5885">5885</a><a class="anker" href="#line5886">5886</a><a class="anker" href="#line5887">5887</a><a class="anker" href="#line5888">5888</a><a class="anker" href="#line5889">5889</a><a class="anker" href="#line5890">5890</a><a class="anker" href="#line5891">5891</a><a class="anker" href="#line5892">5892</a><a class="anker" href="#line5893">5893</a><a class="anker" href="#line5894">5894</a><a class="anker" href="#line5895">5895</a><a class="anker" href="#line5896">5896</a><a class="anker" href="#line5897">5897</a><a class="anker" href="#line5898">5898</a><a class="anker" href="#line5899">5899</a><a class="anker" href="#line5900">5900</a><a class="anker" href="#line5901">5901</a><a class="anker" href="#line5902">5902</a><a class="anker" href="#line5903">5903</a><a class="anker" href="#line5904">5904</a><a class="anker" href="#line5905">5905</a><a class="anker" href="#line5906">5906</a><a class="anker" href="#line5907">5907</a><a class="anker" href="#line5908">5908</a><a class="anker" href="#line5909">5909</a><a class="anker" href="#line5910">5910</a><a class="anker" href="#line5911">5911</a><a class="anker" href="#line5912">5912</a><a class="anker" href="#line5913">5913</a><a class="anker" href="#line5914">5914</a><a class="anker" href="#line5915">5915</a><a class="anker" href="#line5916">5916</a><a class="anker" href="#line5917">5917</a><a class="anker" href="#line5918">5918</a><a class="anker" href="#line5919">5919</a><a class="anker" href="#line5920">5920</a><a class="anker" href="#line5921">5921</a><a class="anker" href="#line5922">5922</a><a class="anker" href="#line5923">5923</a><a class="anker" href="#line5924">5924</a><a class="anker" href="#line5925">5925</a><a class="anker" href="#line5926">5926</a><a class="anker" href="#line5927">5927</a><a class="anker" href="#line5928">5928</a><a class="anker" href="#line5929">5929</a><a class="anker" href="#line5930">5930</a><a class="anker" href="#line5931">5931</a><a class="anker" href="#line5932">5932</a><a class="anker" href="#line5933">5933</a><a class="anker" href="#line5934">5934</a><a class="anker" href="#line5935">5935</a><a class="anker" href="#line5936">5936</a><a class="anker" href="#line5937">5937</a><a class="anker" href="#line5938">5938</a><a class="anker" href="#line5939">5939</a><a class="anker" href="#line5940">5940</a><a class="anker" href="#line5941">5941</a><a class="anker" href="#line5942">5942</a><a class="anker" href="#line5943">5943</a><a class="anker" href="#line5944">5944</a><a class="anker" href="#line5945">5945</a><a class="anker" href="#line5946">5946</a><a class="anker" href="#line5947">5947</a><a class="anker" href="#line5948">5948</a><a class="anker" href="#line5949">5949</a><a class="anker" href="#line5950">5950</a><a class="anker" href="#line5951">5951</a><a class="anker" href="#line5952">5952</a><a class="anker" href="#line5953">5953</a><a class="anker" href="#line5954">5954</a><a class="anker" href="#line5955">5955</a><a class="anker" href="#line5956">5956</a><a class="anker" href="#line5957">5957</a><a class="anker" href="#line5958">5958</a><a class="anker" href="#line5959">5959</a><a class="anker" href="#line5960">5960</a><a class="anker" href="#line5961">5961</a><a class="anker" href="#line5962">5962</a><a class="anker" href="#line5963">5963</a><a class="anker" href="#line5964">5964</a><a class="anker" href="#line5965">5965</a><a class="anker" href="#line5966">5966</a><a class="anker" href="#line5967">5967</a><a class="anker" href="#line5968">5968</a><a class="anker" href="#line5969">5969</a><a class="anker" href="#line5970">5970</a><a class="anker" href="#line5971">5971</a><a class="anker" href="#line5972">5972</a><a class="anker" href="#line5973">5973</a><a class="anker" href="#line5974">5974</a><a class="anker" href="#line5975">5975</a><a class="anker" href="#line5976">5976</a><a class="anker" href="#line5977">5977</a><a class="anker" href="#line5978">5978</a><a class="anker" href="#line5979">5979</a><a class="anker" href="#line5980">5980</a><a class="anker" href="#line5981">5981</a><a class="anker" href="#line5982">5982</a><a class="anker" href="#line5983">5983</a><a class="anker" href="#line5984">5984</a><a class="anker" href="#line5985">5985</a><a class="anker" href="#line5986">5986</a><a class="anker" href="#line5987">5987</a><a class="anker" href="#line5988">5988</a><a class="anker" href="#line5989">5989</a><a class="anker" href="#line5990">5990</a><a class="anker" href="#line5991">5991</a><a class="anker" href="#line5992">5992</a><a class="anker" href="#line5993">5993</a><a class="anker" href="#line5994">5994</a><a class="anker" href="#line5995">5995</a><a class="anker" href="#line5996">5996</a><a class="anker" href="#line5997">5997</a><a class="anker" href="#line5998">5998</a><a class="anker" href="#line5999">5999</a><a class="anker" href="#line6000">6000</a><a class="anker" href="#line6001">6001</a><a class="anker" href="#line6002">6002</a><a class="anker" href="#line6003">6003</a><a class="anker" href="#line6004">6004</a><a class="anker" href="#line6005">6005</a><a class="anker" href="#line6006">6006</a><a class="anker" href="#line6007">6007</a><a class="anker" href="#line6008">6008</a><a class="anker" href="#line6009">6009</a><a class="anker" href="#line6010">6010</a><a class="anker" href="#line6011">6011</a><a class="anker" href="#line6012">6012</a><a class="anker" href="#line6013">6013</a><a class="anker" href="#line6014">6014</a><a class="anker" href="#line6015">6015</a><a class="anker" href="#line6016">6016</a><a class="anker" href="#line6017">6017</a><a class="anker" href="#line6018">6018</a><a class="anker" href="#line6019">6019</a><a class="anker" href="#line6020">6020</a><a class="anker" href="#line6021">6021</a><a class="anker" href="#line6022">6022</a><a class="anker" href="#line6023">6023</a><a class="anker" href="#line6024">6024</a><a class="anker" href="#line6025">6025</a><a class="anker" href="#line6026">6026</a><a class="anker" href="#line6027">6027</a><a class="anker" href="#line6028">6028</a><a class="anker" href="#line6029">6029</a><a class="anker" href="#line6030">6030</a><a class="anker" href="#line6031">6031</a><a class="anker" href="#line6032">6032</a><a class="anker" href="#line6033">6033</a><a class="anker" href="#line6034">6034</a><a class="anker" href="#line6035">6035</a><a class="anker" href="#line6036">6036</a><a class="anker" href="#line6037">6037</a><a class="anker" href="#line6038">6038</a><a class="anker" href="#line6039">6039</a><a class="anker" href="#line6040">6040</a><a class="anker" href="#line6041">6041</a><a class="anker" href="#line6042">6042</a><a class="anker" href="#line6043">6043</a><a class="anker" href="#line6044">6044</a><a class="anker" href="#line6045">6045</a><a class="anker" href="#line6046">6046</a><a class="anker" href="#line6047">6047</a><a class="anker" href="#line6048">6048</a><a class="anker" href="#line6049">6049</a><a class="anker" href="#line6050">6050</a><a class="anker" href="#line6051">6051</a><a class="anker" href="#line6052">6052</a><a class="anker" href="#line6053">6053</a><a class="anker" href="#line6054">6054</a><a class="anker" href="#line6055">6055</a><a class="anker" href="#line6056">6056</a><a class="anker" href="#line6057">6057</a><a class="anker" href="#line6058">6058</a><a class="anker" href="#line6059">6059</a><a class="anker" href="#line6060">6060</a><a class="anker" href="#line6061">6061</a><a class="anker" href="#line6062">6062</a><a class="anker" href="#line6063">6063</a><a class="anker" href="#line6064">6064</a><a class="anker" href="#line6065">6065</a><a class="anker" href="#line6066">6066</a><a class="anker" href="#line6067">6067</a><a class="anker" href="#line6068">6068</a><a class="anker" href="#line6069">6069</a><a class="anker" href="#line6070">6070</a><a class="anker" href="#line6071">6071</a><a class="anker" href="#line6072">6072</a><a class="anker" href="#line6073">6073</a><a class="anker" href="#line6074">6074</a><a class="anker" href="#line6075">6075</a><a class="anker" href="#line6076">6076</a><a class="anker" href="#line6077">6077</a><a class="anker" href="#line6078">6078</a><a class="anker" href="#line6079">6079</a><a class="anker" href="#line6080">6080</a><a class="anker" href="#line6081">6081</a><a class="anker" href="#line6082">6082</a><a class="anker" href="#line6083">6083</a><a class="anker" href="#line6084">6084</a><a class="anker" href="#line6085">6085</a><a class="anker" href="#line6086">6086</a><a class="anker" href="#line6087">6087</a><a class="anker" href="#line6088">6088</a><a class="anker" href="#line6089">6089</a><a class="anker" href="#line6090">6090</a><a class="anker" href="#line6091">6091</a><a class="anker" href="#line6092">6092</a><a class="anker" href="#line6093">6093</a><a class="anker" href="#line6094">6094</a><a class="anker" href="#line6095">6095</a><a class="anker" href="#line6096">6096</a><a class="anker" href="#line6097">6097</a><a class="anker" href="#line6098">6098</a><a class="anker" href="#line6099">6099</a><a class="anker" href="#line6100">6100</a><a class="anker" href="#line6101">6101</a><a class="anker" href="#line6102">6102</a><a class="anker" href="#line6103">6103</a><a class="anker" href="#line6104">6104</a><a class="anker" href="#line6105">6105</a><a class="anker" href="#line6106">6106</a><a class="anker" href="#line6107">6107</a><a class="anker" href="#line6108">6108</a><a class="anker" href="#line6109">6109</a><a class="anker" href="#line6110">6110</a><a class="anker" href="#line6111">6111</a><a class="anker" href="#line6112">6112</a><a class="anker" href="#line6113">6113</a><a class="anker" href="#line6114">6114</a><a class="anker" href="#line6115">6115</a><a class="anker" href="#line6116">6116</a><a class="anker" href="#line6117">6117</a><a class="anker" href="#line6118">6118</a><a class="anker" href="#line6119">6119</a><a class="anker" href="#line6120">6120</a><a class="anker" href="#line6121">6121</a><a class="anker" href="#line6122">6122</a><a class="anker" href="#line6123">6123</a><a class="anker" href="#line6124">6124</a><a class="anker" href="#line6125">6125</a><a class="anker" href="#line6126">6126</a><a class="anker" href="#line6127">6127</a><a class="anker" href="#line6128">6128</a><a class="anker" href="#line6129">6129</a><a class="anker" href="#line6130">6130</a><a class="anker" href="#line6131">6131</a><a class="anker" href="#line6132">6132</a><a class="anker" href="#line6133">6133</a><a class="anker" href="#line6134">6134</a><a class="anker" href="#line6135">6135</a><a class="anker" href="#line6136">6136</a><a class="anker" href="#line6137">6137</a><a class="anker" href="#line6138">6138</a><a class="anker" href="#line6139">6139</a><a class="anker" href="#line6140">6140</a><a class="anker" href="#line6141">6141</a><a class="anker" href="#line6142">6142</a><a class="anker" href="#line6143">6143</a><a class="anker" href="#line6144">6144</a><a class="anker" href="#line6145">6145</a><a class="anker" href="#line6146">6146</a><a class="anker" href="#line6147">6147</a><a class="anker" href="#line6148">6148</a><a class="anker" href="#line6149">6149</a><a class="anker" href="#line6150">6150</a><a class="anker" href="#line6151">6151</a><a class="anker" href="#line6152">6152</a><a class="anker" href="#line6153">6153</a><a class="anker" href="#line6154">6154</a><a class="anker" href="#line6155">6155</a><a class="anker" href="#line6156">6156</a><a class="anker" href="#line6157">6157</a><a class="anker" href="#line6158">6158</a><a class="anker" href="#line6159">6159</a><a class="anker" href="#line6160">6160</a><a class="anker" href="#line6161">6161</a><a class="anker" href="#line6162">6162</a><a class="anker" href="#line6163">6163</a><a class="anker" href="#line6164">6164</a><a class="anker" href="#line6165">6165</a><a class="anker" href="#line6166">6166</a><a class="anker" href="#line6167">6167</a><a class="anker" href="#line6168">6168</a><a class="anker" href="#line6169">6169</a><a class="anker" href="#line6170">6170</a><a class="anker" href="#line6171">6171</a><a class="anker" href="#line6172">6172</a><a class="anker" href="#line6173">6173</a><a class="anker" href="#line6174">6174</a><a class="anker" href="#line6175">6175</a><a class="anker" href="#line6176">6176</a><a class="anker" href="#line6177">6177</a><a class="anker" href="#line6178">6178</a><a class="anker" href="#line6179">6179</a><a class="anker" href="#line6180">6180</a><a class="anker" href="#line6181">6181</a><a class="anker" href="#line6182">6182</a><a class="anker" href="#line6183">6183</a><a class="anker" href="#line6184">6184</a><a class="anker" href="#line6185">6185</a><a class="anker" href="#line6186">6186</a><a class="anker" href="#line6187">6187</a><a class="anker" href="#line6188">6188</a><a class="anker" href="#line6189">6189</a><a class="anker" href="#line6190">6190</a><a class="anker" href="#line6191">6191</a><a class="anker" href="#line6192">6192</a><a class="anker" href="#line6193">6193</a><a class="anker" href="#line6194">6194</a><a class="anker" href="#line6195">6195</a><a class="anker" href="#line6196">6196</a><a class="anker" href="#line6197">6197</a><a class="anker" href="#line6198">6198</a><a class="anker" href="#line6199">6199</a><a class="anker" href="#line6200">6200</a><a class="anker" href="#line6201">6201</a><a class="anker" href="#line6202">6202</a><a class="anker" href="#line6203">6203</a><a class="anker" href="#line6204">6204</a><a class="anker" href="#line6205">6205</a><a class="anker" href="#line6206">6206</a><a class="anker" href="#line6207">6207</a><a class="anker" href="#line6208">6208</a><a class="anker" href="#line6209">6209</a><a class="anker" href="#line6210">6210</a><a class="anker" href="#line6211">6211</a><a class="anker" href="#line6212">6212</a><a class="anker" href="#line6213">6213</a><a class="anker" href="#line6214">6214</a><a class="anker" href="#line6215">6215</a><a class="anker" href="#line6216">6216</a><a class="anker" href="#line6217">6217</a><a class="anker" href="#line6218">6218</a><a class="anker" href="#line6219">6219</a><a class="anker" href="#line6220">6220</a><a class="anker" href="#line6221">6221</a><a class="anker" href="#line6222">6222</a><a class="anker" href="#line6223">6223</a><a class="anker" href="#line6224">6224</a><a class="anker" href="#line6225">6225</a><a class="anker" href="#line6226">6226</a><a class="anker" href="#line6227">6227</a><a class="anker" href="#line6228">6228</a><a class="anker" href="#line6229">6229</a><a class="anker" href="#line6230">6230</a><a class="anker" href="#line6231">6231</a><a class="anker" href="#line6232">6232</a><a class="anker" href="#line6233">6233</a><a class="anker" href="#line6234">6234</a><a class="anker" href="#line6235">6235</a><a class="anker" href="#line6236">6236</a><a class="anker" href="#line6237">6237</a><a class="anker" href="#line6238">6238</a><a class="anker" href="#line6239">6239</a><a class="anker" href="#line6240">6240</a><a class="anker" href="#line6241">6241</a><a class="anker" href="#line6242">6242</a><a class="anker" href="#line6243">6243</a><a class="anker" href="#line6244">6244</a><a class="anker" href="#line6245">6245</a><a class="anker" href="#line6246">6246</a><a class="anker" href="#line6247">6247</a><a class="anker" href="#line6248">6248</a><a class="anker" href="#line6249">6249</a><a class="anker" href="#line6250">6250</a><a class="anker" href="#line6251">6251</a><a class="anker" href="#line6252">6252</a><a class="anker" href="#line6253">6253</a><a class="anker" href="#line6254">6254</a><a class="anker" href="#line6255">6255</a><a class="anker" href="#line6256">6256</a><a class="anker" href="#line6257">6257</a><a class="anker" href="#line6258">6258</a><a class="anker" href="#line6259">6259</a><a class="anker" href="#line6260">6260</a><a class="anker" href="#line6261">6261</a><a class="anker" href="#line6262">6262</a><a class="anker" href="#line6263">6263</a><a class="anker" href="#line6264">6264</a><a class="anker" href="#line6265">6265</a><a class="anker" href="#line6266">6266</a><a class="anker" href="#line6267">6267</a><a class="anker" href="#line6268">6268</a><a class="anker" href="#line6269">6269</a><a class="anker" href="#line6270">6270</a><a class="anker" href="#line6271">6271</a><a class="anker" href="#line6272">6272</a><a class="anker" href="#line6273">6273</a><a class="anker" href="#line6274">6274</a><a class="anker" href="#line6275">6275</a><a class="anker" href="#line6276">6276</a><a class="anker" href="#line6277">6277</a><a class="anker" href="#line6278">6278</a><a class="anker" href="#line6279">6279</a><a class="anker" href="#line6280">6280</a><a class="anker" href="#line6281">6281</a><a class="anker" href="#line6282">6282</a><a class="anker" href="#line6283">6283</a><a class="anker" href="#line6284">6284</a><a class="anker" href="#line6285">6285</a><a class="anker" href="#line6286">6286</a><a class="anker" href="#line6287">6287</a><a class="anker" href="#line6288">6288</a><a class="anker" href="#line6289">6289</a><a class="anker" href="#line6290">6290</a><a class="anker" href="#line6291">6291</a><a class="anker" href="#line6292">6292</a><a class="anker" href="#line6293">6293</a><a class="anker" href="#line6294">6294</a><a class="anker" href="#line6295">6295</a><a class="anker" href="#line6296">6296</a><a class="anker" href="#line6297">6297</a><a class="anker" href="#line6298">6298</a><a class="anker" href="#line6299">6299</a><a class="anker" href="#line6300">6300</a><a class="anker" href="#line6301">6301</a><a class="anker" href="#line6302">6302</a><a class="anker" href="#line6303">6303</a><a class="anker" href="#line6304">6304</a><a class="anker" href="#line6305">6305</a><a class="anker" href="#line6306">6306</a><a class="anker" href="#line6307">6307</a><a class="anker" href="#line6308">6308</a><a class="anker" href="#line6309">6309</a><a class="anker" href="#line6310">6310</a><a class="anker" href="#line6311">6311</a><a class="anker" href="#line6312">6312</a><a class="anker" href="#line6313">6313</a><a class="anker" href="#line6314">6314</a><a class="anker" href="#line6315">6315</a><a class="anker" href="#line6316">6316</a><a class="anker" href="#line6317">6317</a><a class="anker" href="#line6318">6318</a><a class="anker" href="#line6319">6319</a><a class="anker" href="#line6320">6320</a><a class="anker" href="#line6321">6321</a><a class="anker" href="#line6322">6322</a><a class="anker" href="#line6323">6323</a><a class="anker" href="#line6324">6324</a><a class="anker" href="#line6325">6325</a><a class="anker" href="#line6326">6326</a><a class="anker" href="#line6327">6327</a><a class="anker" href="#line6328">6328</a><a class="anker" href="#line6329">6329</a><a class="anker" href="#line6330">6330</a><a class="anker" href="#line6331">6331</a><a class="anker" href="#line6332">6332</a><a class="anker" href="#line6333">6333</a><a class="anker" href="#line6334">6334</a><a class="anker" href="#line6335">6335</a><a class="anker" href="#line6336">6336</a><a class="anker" href="#line6337">6337</a><a class="anker" href="#line6338">6338</a><a class="anker" href="#line6339">6339</a><a class="anker" href="#line6340">6340</a><a class="anker" href="#line6341">6341</a><a class="anker" href="#line6342">6342</a><a class="anker" href="#line6343">6343</a><a class="anker" href="#line6344">6344</a><a class="anker" href="#line6345">6345</a><a class="anker" href="#line6346">6346</a><a class="anker" href="#line6347">6347</a><a class="anker" href="#line6348">6348</a><a class="anker" href="#line6349">6349</a><a class="anker" href="#line6350">6350</a><a class="anker" href="#line6351">6351</a><a class="anker" href="#line6352">6352</a><a class="anker" href="#line6353">6353</a><a class="anker" href="#line6354">6354</a><a class="anker" href="#line6355">6355</a><a class="anker" href="#line6356">6356</a><a class="anker" href="#line6357">6357</a><a class="anker" href="#line6358">6358</a><a class="anker" href="#line6359">6359</a><a class="anker" href="#line6360">6360</a><a class="anker" href="#line6361">6361</a><a class="anker" href="#line6362">6362</a><a class="anker" href="#line6363">6363</a><a class="anker" href="#line6364">6364</a><a class="anker" href="#line6365">6365</a><a class="anker" href="#line6366">6366</a><a class="anker" href="#line6367">6367</a><a class="anker" href="#line6368">6368</a><a class="anker" href="#line6369">6369</a><a class="anker" href="#line6370">6370</a><a class="anker" href="#line6371">6371</a><a class="anker" href="#line6372">6372</a><a class="anker" href="#line6373">6373</a><a class="anker" href="#line6374">6374</a><a class="anker" href="#line6375">6375</a><a class="anker" href="#line6376">6376</a><a class="anker" href="#line6377">6377</a><a class="anker" href="#line6378">6378</a><a class="anker" href="#line6379">6379</a><a class="anker" href="#line6380">6380</a><a class="anker" href="#line6381">6381</a><a class="anker" href="#line6382">6382</a><a class="anker" href="#line6383">6383</a><a class="anker" href="#line6384">6384</a><a class="anker" href="#line6385">6385</a><a class="anker" href="#line6386">6386</a><a class="anker" href="#line6387">6387</a><a class="anker" href="#line6388">6388</a><a class="anker" href="#line6389">6389</a><a class="anker" href="#line6390">6390</a><a class="anker" href="#line6391">6391</a><a class="anker" href="#line6392">6392</a><a class="anker" href="#line6393">6393</a><a class="anker" href="#line6394">6394</a><a class="anker" href="#line6395">6395</a><a class="anker" href="#line6396">6396</a><a class="anker" href="#line6397">6397</a><a class="anker" href="#line6398">6398</a><a class="anker" href="#line6399">6399</a><a class="anker" href="#line6400">6400</a><a class="anker" href="#line6401">6401</a><a class="anker" href="#line6402">6402</a><a class="anker" href="#line6403">6403</a><a class="anker" href="#line6404">6404</a><a class="anker" href="#line6405">6405</a><a class="anker" href="#line6406">6406</a><a class="anker" href="#line6407">6407</a><a class="anker" href="#line6408">6408</a><a class="anker" href="#line6409">6409</a><a class="anker" href="#line6410">6410</a><a class="anker" href="#line6411">6411</a><a class="anker" href="#line6412">6412</a><a class="anker" href="#line6413">6413</a><a class="anker" href="#line6414">6414</a><a class="anker" href="#line6415">6415</a><a class="anker" href="#line6416">6416</a><a class="anker" href="#line6417">6417</a><a class="anker" href="#line6418">6418</a><a class="anker" href="#line6419">6419</a><a class="anker" href="#line6420">6420</a><a class="anker" href="#line6421">6421</a><a class="anker" href="#line6422">6422</a><a class="anker" href="#line6423">6423</a><a class="anker" href="#line6424">6424</a><a class="anker" href="#line6425">6425</a><a class="anker" href="#line6426">6426</a><a class="anker" href="#line6427">6427</a><a class="anker" href="#line6428">6428</a><a class="anker" href="#line6429">6429</a><a class="anker" href="#line6430">6430</a><a class="anker" href="#line6431">6431</a><a class="anker" href="#line6432">6432</a><a class="anker" href="#line6433">6433</a><a class="anker" href="#line6434">6434</a><a class="anker" href="#line6435">6435</a><a class="anker" href="#line6436">6436</a><a class="anker" href="#line6437">6437</a><a class="anker" href="#line6438">6438</a><a class="anker" href="#line6439">6439</a><a class="anker" href="#line6440">6440</a><a class="anker" href="#line6441">6441</a><a class="anker" href="#line6442">6442</a><a class="anker" href="#line6443">6443</a><a class="anker" href="#line6444">6444</a><a class="anker" href="#line6445">6445</a><a class="anker" href="#line6446">6446</a><a class="anker" href="#line6447">6447</a><a class="anker" href="#line6448">6448</a><a class="anker" href="#line6449">6449</a><a class="anker" href="#line6450">6450</a><a class="anker" href="#line6451">6451</a><a class="anker" href="#line6452">6452</a><a class="anker" href="#line6453">6453</a><a class="anker" href="#line6454">6454</a><a class="anker" href="#line6455">6455</a><a class="anker" href="#line6456">6456</a><a class="anker" href="#line6457">6457</a><a class="anker" href="#line6458">6458</a><a class="anker" href="#line6459">6459</a><a class="anker" href="#line6460">6460</a><a class="anker" href="#line6461">6461</a><a class="anker" href="#line6462">6462</a><a class="anker" href="#line6463">6463</a><a class="anker" href="#line6464">6464</a><a class="anker" href="#line6465">6465</a><a class="anker" href="#line6466">6466</a><a class="anker" href="#line6467">6467</a><a class="anker" href="#line6468">6468</a><a class="anker" href="#line6469">6469</a><a class="anker" href="#line6470">6470</a><a class="anker" href="#line6471">6471</a><a class="anker" href="#line6472">6472</a><a class="anker" href="#line6473">6473</a><a class="anker" href="#line6474">6474</a><a class="anker" href="#line6475">6475</a><a class="anker" href="#line6476">6476</a><a class="anker" href="#line6477">6477</a><a class="anker" href="#line6478">6478</a><a class="anker" href="#line6479">6479</a><a class="anker" href="#line6480">6480</a><a class="anker" href="#line6481">6481</a><a class="anker" href="#line6482">6482</a><a class="anker" href="#line6483">6483</a><a class="anker" href="#line6484">6484</a><a class="anker" href="#line6485">6485</a><a class="anker" href="#line6486">6486</a><a class="anker" href="#line6487">6487</a><a class="anker" href="#line6488">6488</a><a class="anker" href="#line6489">6489</a><a class="anker" href="#line6490">6490</a><a class="anker" href="#line6491">6491</a><a class="anker" href="#line6492">6492</a><a class="anker" href="#line6493">6493</a><a class="anker" href="#line6494">6494</a><a class="anker" href="#line6495">6495</a><a class="anker" href="#line6496">6496</a><a class="anker" href="#line6497">6497</a><a class="anker" href="#line6498">6498</a><a class="anker" href="#line6499">6499</a><a class="anker" href="#line6500">6500</a><a class="anker" href="#line6501">6501</a><a class="anker" href="#line6502">6502</a><a class="anker" href="#line6503">6503</a><a class="anker" href="#line6504">6504</a><a class="anker" href="#line6505">6505</a><a class="anker" href="#line6506">6506</a><a class="anker" href="#line6507">6507</a><a class="anker" href="#line6508">6508</a><a class="anker" href="#line6509">6509</a><a class="anker" href="#line6510">6510</a><a class="anker" href="#line6511">6511</a><a class="anker" href="#line6512">6512</a><a class="anker" href="#line6513">6513</a><a class="anker" href="#line6514">6514</a><a class="anker" href="#line6515">6515</a><a class="anker" href="#line6516">6516</a><a class="anker" href="#line6517">6517</a><a class="anker" href="#line6518">6518</a><a class="anker" href="#line6519">6519</a><a class="anker" href="#line6520">6520</a><a class="anker" href="#line6521">6521</a><a class="anker" href="#line6522">6522</a><a class="anker" href="#line6523">6523</a><a class="anker" href="#line6524">6524</a><a class="anker" href="#line6525">6525</a><a class="anker" href="#line6526">6526</a><a class="anker" href="#line6527">6527</a><a class="anker" href="#line6528">6528</a><a class="anker" href="#line6529">6529</a><a class="anker" href="#line6530">6530</a><a class="anker" href="#line6531">6531</a><a class="anker" href="#line6532">6532</a><a class="anker" href="#line6533">6533</a><a class="anker" href="#line6534">6534</a><a class="anker" href="#line6535">6535</a><a class="anker" href="#line6536">6536</a><a class="anker" href="#line6537">6537</a><a class="anker" href="#line6538">6538</a><a class="anker" href="#line6539">6539</a><a class="anker" href="#line6540">6540</a><a class="anker" href="#line6541">6541</a><a class="anker" href="#line6542">6542</a><a class="anker" href="#line6543">6543</a><a class="anker" href="#line6544">6544</a><a class="anker" href="#line6545">6545</a><a class="anker" href="#line6546">6546</a><a class="anker" href="#line6547">6547</a><a class="anker" href="#line6548">6548</a><a class="anker" href="#line6549">6549</a><a class="anker" href="#line6550">6550</a><a class="anker" href="#line6551">6551</a><a class="anker" href="#line6552">6552</a><a class="anker" href="#line6553">6553</a><a class="anker" href="#line6554">6554</a><a class="anker" href="#line6555">6555</a><a class="anker" href="#line6556">6556</a><a class="anker" href="#line6557">6557</a><a class="anker" href="#line6558">6558</a><a class="anker" href="#line6559">6559</a><a class="anker" href="#line6560">6560</a><a class="anker" href="#line6561">6561</a><a class="anker" href="#line6562">6562</a><a class="anker" href="#line6563">6563</a><a class="anker" href="#line6564">6564</a><a class="anker" href="#line6565">6565</a><a class="anker" href="#line6566">6566</a><a class="anker" href="#line6567">6567</a><a class="anker" href="#line6568">6568</a><a class="anker" href="#line6569">6569</a><a class="anker" href="#line6570">6570</a><a class="anker" href="#line6571">6571</a><a class="anker" href="#line6572">6572</a><a class="anker" href="#line6573">6573</a><a class="anker" href="#line6574">6574</a><a class="anker" href="#line6575">6575</a><a class="anker" href="#line6576">6576</a><a class="anker" href="#line6577">6577</a><a class="anker" href="#line6578">6578</a><a class="anker" href="#line6579">6579</a><a class="anker" href="#line6580">6580</a><a class="anker" href="#line6581">6581</a><a class="anker" href="#line6582">6582</a><a class="anker" href="#line6583">6583</a><a class="anker" href="#line6584">6584</a><a class="anker" href="#line6585">6585</a><a class="anker" href="#line6586">6586</a><a class="anker" href="#line6587">6587</a><a class="anker" href="#line6588">6588</a><a class="anker" href="#line6589">6589</a><a class="anker" href="#line6590">6590</a><a class="anker" href="#line6591">6591</a><a class="anker" href="#line6592">6592</a><a class="anker" href="#line6593">6593</a><a class="anker" href="#line6594">6594</a><a class="anker" href="#line6595">6595</a><a class="anker" href="#line6596">6596</a><a class="anker" href="#line6597">6597</a><a class="anker" href="#line6598">6598</a><a class="anker" href="#line6599">6599</a><a class="anker" href="#line6600">6600</a><a class="anker" href="#line6601">6601</a><a class="anker" href="#line6602">6602</a><a class="anker" href="#line6603">6603</a><a class="anker" href="#line6604">6604</a><a class="anker" href="#line6605">6605</a><a class="anker" href="#line6606">6606</a><a class="anker" href="#line6607">6607</a><a class="anker" href="#line6608">6608</a><a class="anker" href="#line6609">6609</a><a class="anker" href="#line6610">6610</a><a class="anker" href="#line6611">6611</a><a class="anker" href="#line6612">6612</a><a class="anker" href="#line6613">6613</a><a class="anker" href="#line6614">6614</a><a class="anker" href="#line6615">6615</a><a class="anker" href="#line6616">6616</a><a class="anker" href="#line6617">6617</a><a class="anker" href="#line6618">6618</a><a class="anker" href="#line6619">6619</a><a class="anker" href="#line6620">6620</a><a class="anker" href="#line6621">6621</a><a class="anker" href="#line6622">6622</a><a class="anker" href="#line6623">6623</a><a class="anker" href="#line6624">6624</a><a class="anker" href="#line6625">6625</a><a class="anker" href="#line6626">6626</a><a class="anker" href="#line6627">6627</a><a class="anker" href="#line6628">6628</a><a class="anker" href="#line6629">6629</a><a class="anker" href="#line6630">6630</a><a class="anker" href="#line6631">6631</a><a class="anker" href="#line6632">6632</a><a class="anker" href="#line6633">6633</a><a class="anker" href="#line6634">6634</a><a class="anker" href="#line6635">6635</a><a class="anker" href="#line6636">6636</a><a class="anker" href="#line6637">6637</a><a class="anker" href="#line6638">6638</a><a class="anker" href="#line6639">6639</a><a class="anker" href="#line6640">6640</a><a class="anker" href="#line6641">6641</a><a class="anker" href="#line6642">6642</a><a class="anker" href="#line6643">6643</a><a class="anker" href="#line6644">6644</a><a class="anker" href="#line6645">6645</a><a class="anker" href="#line6646">6646</a><a class="anker" href="#line6647">6647</a><a class="anker" href="#line6648">6648</a><a class="anker" href="#line6649">6649</a><a class="anker" href="#line6650">6650</a><a class="anker" href="#line6651">6651</a><a class="anker" href="#line6652">6652</a><a class="anker" href="#line6653">6653</a><a class="anker" href="#line6654">6654</a><a class="anker" href="#line6655">6655</a><a class="anker" href="#line6656">6656</a><a class="anker" href="#line6657">6657</a><a class="anker" href="#line6658">6658</a><a class="anker" href="#line6659">6659</a><a class="anker" href="#line6660">6660</a><a class="anker" href="#line6661">6661</a><a class="anker" href="#line6662">6662</a><a class="anker" href="#line6663">6663</a><a class="anker" href="#line6664">6664</a><a class="anker" href="#line6665">6665</a><a class="anker" href="#line6666">6666</a><a class="anker" href="#line6667">6667</a><a class="anker" href="#line6668">6668</a><a class="anker" href="#line6669">6669</a><a class="anker" href="#line6670">6670</a><a class="anker" href="#line6671">6671</a><a class="anker" href="#line6672">6672</a><a class="anker" href="#line6673">6673</a><a class="anker" href="#line6674">6674</a><a class="anker" href="#line6675">6675</a><a class="anker" href="#line6676">6676</a><a class="anker" href="#line6677">6677</a><a class="anker" href="#line6678">6678</a><a class="anker" href="#line6679">6679</a><a class="anker" href="#line6680">6680</a><a class="anker" href="#line6681">6681</a><a class="anker" href="#line6682">6682</a><a class="anker" href="#line6683">6683</a><a class="anker" href="#line6684">6684</a><a class="anker" href="#line6685">6685</a><a class="anker" href="#line6686">6686</a><a class="anker" href="#line6687">6687</a><a class="anker" href="#line6688">6688</a><a class="anker" href="#line6689">6689</a><a class="anker" href="#line6690">6690</a><a class="anker" href="#line6691">6691</a><a class="anker" href="#line6692">6692</a><a class="anker" href="#line6693">6693</a><a class="anker" href="#line6694">6694</a><a class="anker" href="#line6695">6695</a><a class="anker" href="#line6696">6696</a><a class="anker" href="#line6697">6697</a><a class="anker" href="#line6698">6698</a><a class="anker" href="#line6699">6699</a><a class="anker" href="#line6700">6700</a><a class="anker" href="#line6701">6701</a><a class="anker" href="#line6702">6702</a><a class="anker" href="#line6703">6703</a><a class="anker" href="#line6704">6704</a><a class="anker" href="#line6705">6705</a><a class="anker" href="#line6706">6706</a><a class="anker" href="#line6707">6707</a><a class="anker" href="#line6708">6708</a><a class="anker" href="#line6709">6709</a><a class="anker" href="#line6710">6710</a><a class="anker" href="#line6711">6711</a><a class="anker" href="#line6712">6712</a><a class="anker" href="#line6713">6713</a><a class="anker" href="#line6714">6714</a><a class="anker" href="#line6715">6715</a><a class="anker" href="#line6716">6716</a><a class="anker" href="#line6717">6717</a><a class="anker" href="#line6718">6718</a><a class="anker" href="#line6719">6719</a><a class="anker" href="#line6720">6720</a><a class="anker" href="#line6721">6721</a><a class="anker" href="#line6722">6722</a><a class="anker" href="#line6723">6723</a><a class="anker" href="#line6724">6724</a><a class="anker" href="#line6725">6725</a><a class="anker" href="#line6726">6726</a><a class="anker" href="#line6727">6727</a><a class="anker" href="#line6728">6728</a><a class="anker" href="#line6729">6729</a><a class="anker" href="#line6730">6730</a><a class="anker" href="#line6731">6731</a><a class="anker" href="#line6732">6732</a><a class="anker" href="#line6733">6733</a><a class="anker" href="#line6734">6734</a><a class="anker" href="#line6735">6735</a><a class="anker" href="#line6736">6736</a><a class="anker" href="#line6737">6737</a><a class="anker" href="#line6738">6738</a><a class="anker" href="#line6739">6739</a><a class="anker" href="#line6740">6740</a><a class="anker" href="#line6741">6741</a><a class="anker" href="#line6742">6742</a><a class="anker" href="#line6743">6743</a><a class="anker" href="#line6744">6744</a><a class="anker" href="#line6745">6745</a><a class="anker" href="#line6746">6746</a><a class="anker" href="#line6747">6747</a><a class="anker" href="#line6748">6748</a><a class="anker" href="#line6749">6749</a><a class="anker" href="#line6750">6750</a><a class="anker" href="#line6751">6751</a><a class="anker" href="#line6752">6752</a><a class="anker" href="#line6753">6753</a><a class="anker" href="#line6754">6754</a><a class="anker" href="#line6755">6755</a><a class="anker" href="#line6756">6756</a><a class="anker" href="#line6757">6757</a><a class="anker" href="#line6758">6758</a><a class="anker" href="#line6759">6759</a><a class="anker" href="#line6760">6760</a><a class="anker" href="#line6761">6761</a><a class="anker" href="#line6762">6762</a><a class="anker" href="#line6763">6763</a><a class="anker" href="#line6764">6764</a><a class="anker" href="#line6765">6765</a><a class="anker" href="#line6766">6766</a><a class="anker" href="#line6767">6767</a><a class="anker" href="#line6768">6768</a><a class="anker" href="#line6769">6769</a><a class="anker" href="#line6770">6770</a><a class="anker" href="#line6771">6771</a><a class="anker" href="#line6772">6772</a><a class="anker" href="#line6773">6773</a><a class="anker" href="#line6774">6774</a><a class="anker" href="#line6775">6775</a><a class="anker" href="#line6776">6776</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * This file is part of PDepend.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * PHP Version 5</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * Copyright (c) 2008-2015, Manuel Pichler &lt;mapi@pdepend.org&gt;.</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * All rights reserved.</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * Redistribution and use in source and binary forms, with or without</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * modification, are permitted provided that the following conditions</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * are met:</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> *   * Redistributions of source code must retain the above copyright</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> *     notice, this list of conditions and the following disclaimer.</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> *   * Redistributions in binary form must reproduce the above copyright</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *     notice, this list of conditions and the following disclaimer in</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> *     the documentation and/or other materials provided with the</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> *     distribution.</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> *   * Neither the name of Manuel Pichler nor the names of his</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> *     contributors may be used to endorse or promote products derived</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> *     from this software without specific prior written permission.</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * POSSIBILITY OF SUCH DAMAGE.</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * @copyright 2008-2015 Manuel Pichler. All rights reserved.</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * @license http://www.opensource.org/licenses/bsd-license.php BSD License</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line42"><br/></div><div id="line43"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Language</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PHP</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><br/></div><div id="line45"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">org</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">pdepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">reflection</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">exceptions</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">EndOfTokenStreamException</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line46"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractASTCallable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line47"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractASTClassOrInterface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line48"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractASTType</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line49"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTAllocationExpression</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTArray</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line51"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTClass</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line52"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTDeclareStatement</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTExpression</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line54"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTIndexExpression</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line55"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTInterface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line56"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line57"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTStatement</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line58"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTSwitchStatement</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTTrait</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line60"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTValue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line61"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">State</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line62"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Builder</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Builder</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line63"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line64"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">MissingValueException</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line65"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line66"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line67"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tokenizer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Token</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tokenizer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tokenizer</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line69"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tokenizer</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Tokens</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line70"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Util</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Cache</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">CacheDriver</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line71"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Util</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Log</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line72"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Util</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line73"><br/></div><div id="line74"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT"> * The php source parser.</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT"> * With the default settings the parser includes annotations, better known as</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT"> * doc comment tags, in the generated result. This means it extracts the type</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT"> * information of @var tags for properties, and types in @return + @throws tags</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT"> * of functions and methods. The current implementation tries to ignore all</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT"> * scalar types from &lt;b&gt;boolean&lt;/b&gt; to &lt;b&gt;void&lt;/b&gt;. You should disable this</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT"> * feature for project that have more or less invalid doc comments, because it</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT"> * could produce invalid results.</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT"> * &lt;code&gt;</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT"> *   $parser-&gt;setIgnoreAnnotations();</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT"> * &lt;/code&gt;</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line89"><pre><span class="token T_DOC_COMMENT"> * &lt;b&gt;Note&lt;/b&gt;: Due to the fact that it is possible to use the same name for</span></pre></div><div id="line90"><pre><span class="token T_DOC_COMMENT"> * multiple classes and interfaces, and there is no way to determine to which</span></pre></div><div id="line91"><pre><span class="token T_DOC_COMMENT"> * package it belongs, while the parser handles class, interface or method</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT"> * signatures, the parser could/will create a code tree that doesn't reflect the</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT"> * real source structure.</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT"> * @copyright 2008-2015 Manuel Pichler. All rights reserved.</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT"> * @license http://www.opensource.org/licenses/bsd-license.php BSD License</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line98"><pre><span class="token T_ABSTRACT">abstract</span><span class="token T_WHITESPACE"> </span><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">AbstractPHPParser</span></pre></div><div id="line99"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     * Regular expression for inline type definitions in regular comments. This</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     * kind of type is supported by IDEs like Netbeans or eclipse.</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">REGEXP_INLINE_TYPE</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'(^\s*/\*\s*</span></pre></div><div id="line105"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                                 @var\s+</span></pre></div><div id="line106"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                                   \$[a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff]*\s+</span></pre></div><div id="line107"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                                   (.*?)</span></pre></div><div id="line108"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                                \s*\*/\s*$)ix'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line109"><br/></div><div id="line110"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">     * Regular expression for types defined in &lt;b&gt;throws&lt;/b&gt; annotations of</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">     * method or function doc comments.</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">REGEXP_THROWS_TYPE</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'(\*\s*</span></pre></div><div id="line115"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                             @throws\s+</span></pre></div><div id="line116"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                               ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\\\\]*)</span></pre></div><div id="line117"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                            )ix'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line118"><br/></div><div id="line119"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line120"><pre><span class="token T_DOC_COMMENT">     * Regular expression for types defined in annotations like &lt;b&gt;return&lt;/b&gt; or</span></pre></div><div id="line121"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;var&lt;/b&gt; in doc comments of functions and methods.</span></pre></div><div id="line122"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">REGEXP_RETURN_TYPE</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'(\*\s*</span></pre></div><div id="line124"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                     @return\s+</span></pre></div><div id="line125"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      (array\(\s*</span></pre></div><div id="line126"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                        (\w+\s*=&gt;\s*)?</span></pre></div><div id="line127"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                        ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*</span></pre></div><div id="line128"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      \)</span></pre></div><div id="line129"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      |</span></pre></div><div id="line130"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+</span></pre></div><div id="line131"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      |</span></pre></div><div id="line132"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]</span></pre></div><div id="line133"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                    )ix'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line134"><br/></div><div id="line135"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">     * Regular expression for types defined in annotations like &lt;b&gt;return&lt;/b&gt; or</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;var&lt;/b&gt; in doc comments of functions and methods.</span></pre></div><div id="line138"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line139"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">REGEXP_VAR_TYPE</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'(\*\s*</span></pre></div><div id="line140"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                      @var\s+</span></pre></div><div id="line141"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       (array\(\s*</span></pre></div><div id="line142"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                         (\w+\s*=&gt;\s*)?</span></pre></div><div id="line143"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                         ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*</span></pre></div><div id="line144"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       \)</span></pre></div><div id="line145"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       |</span></pre></div><div id="line146"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+</span></pre></div><div id="line147"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       |</span></pre></div><div id="line148"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]\s+</span></pre></div><div id="line149"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       |</span></pre></div><div id="line150"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                       (array)\(\s*\)\s+</span></pre></div><div id="line151"><pre><span class="token T_CONSTANT_ENCAPSED_STRING">                     )ix'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line152"><br/></div><div id="line153"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line154"><pre><span class="token T_DOC_COMMENT">     * Internal state flag, that will be set to &lt;b&gt;true&lt;/b&gt; when the parser has</span></pre></div><div id="line155"><pre><span class="token T_DOC_COMMENT">     * prefixed a qualified name with the actual namespace.</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line157"><pre><span class="token T_DOC_COMMENT">     * @var boolean</span></pre></div><div id="line158"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$namespacePrefixReplaced</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line160"><br/></div><div id="line161"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line162"><pre><span class="token T_DOC_COMMENT">     * The name of the last detected namespace.</span></pre></div><div id="line163"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line164"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line165"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$namespaceName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line167"><br/></div><div id="line168"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line169"><pre><span class="token T_DOC_COMMENT">     * Last parsed package tag.</span></pre></div><div id="line170"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line171"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line172"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line174"><br/></div><div id="line175"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line176"><pre><span class="token T_DOC_COMMENT">     * The package defined in the file level comment.</span></pre></div><div id="line177"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line178"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line179"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line180"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$globalPackageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line181"><br/></div><div id="line182"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line183"><pre><span class="token T_DOC_COMMENT">     * The used data structure builder.</span></pre></div><div id="line184"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line185"><pre><span class="token T_DOC_COMMENT">     * @var Builder</span></pre></div><div id="line186"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line187"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$builder</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line188"><br/></div><div id="line189"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line190"><pre><span class="token T_DOC_COMMENT">     * The currently parsed file instance.</span></pre></div><div id="line191"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line192"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Source\AST\ASTCompilationUnit</span></pre></div><div id="line193"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line194"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$compilationUnit</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line195"><br/></div><div id="line196"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line197"><pre><span class="token T_DOC_COMMENT">     * The symbol table used to handle PHP 5.3 use statements.</span></pre></div><div id="line198"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line199"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Source\Parser\SymbolTable</span></pre></div><div id="line200"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line201"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$useSymbolTable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line202"><br/></div><div id="line203"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line204"><pre><span class="token T_DOC_COMMENT">     * The last parsed doc comment or &lt;b&gt;null&lt;/b&gt;.</span></pre></div><div id="line205"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line206"><pre><span class="token T_DOC_COMMENT">     * @var string</span></pre></div><div id="line207"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line208"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$docComment</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line209"><br/></div><div id="line210"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line211"><pre><span class="token T_DOC_COMMENT">     * Bitfield of last parsed modifiers.</span></pre></div><div id="line212"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line213"><pre><span class="token T_DOC_COMMENT">     * @var integer</span></pre></div><div id="line214"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line215"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line216"><br/></div><div id="line217"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line218"><pre><span class="token T_DOC_COMMENT">     * The actually parsed class or interface instance.</span></pre></div><div id="line219"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line220"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Source\AST\AbstractASTClassOrInterface</span></pre></div><div id="line221"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line222"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$classOrInterface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line223"><br/></div><div id="line224"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line225"><pre><span class="token T_DOC_COMMENT">     * If this property is set to &lt;b&gt;true&lt;/b&gt; the parser will ignore all doc</span></pre></div><div id="line226"><pre><span class="token T_DOC_COMMENT">     * comment annotations.</span></pre></div><div id="line227"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line228"><pre><span class="token T_DOC_COMMENT">     * @var boolean</span></pre></div><div id="line229"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line230"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ignoreAnnotations</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line231"><br/></div><div id="line232"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line233"><pre><span class="token T_DOC_COMMENT">     * Stack with all active token scopes.</span></pre></div><div id="line234"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line235"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Source\Tokenizer\TokenStack</span></pre></div><div id="line236"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line237"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenStack</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line238"><br/></div><div id="line239"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line240"><pre><span class="token T_DOC_COMMENT">     * Used identifier builder instance.</span></pre></div><div id="line241"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line242"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Util\IdBuilder</span></pre></div><div id="line243"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.12</span></pre></div><div id="line244"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line245"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$idBuilder</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line246"><br/></div><div id="line247"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line248"><pre><span class="token T_DOC_COMMENT">     * The maximum valid nesting level allowed.</span></pre></div><div id="line249"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line250"><pre><span class="token T_DOC_COMMENT">     * @var   integer</span></pre></div><div id="line251"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.12</span></pre></div><div id="line252"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line253"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$maxNestingLevel</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1024</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line254"><br/></div><div id="line255"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line256"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line257"><pre><span class="token T_DOC_COMMENT">     * @var \PDepend\Util\Cache\CacheDriver</span></pre></div><div id="line258"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.0</span></pre></div><div id="line259"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line260"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line261"><br/></div><div id="line262"><pre><span class="token T_WHITESPACE">    </span><span class="token T_COMMENT">/*</span></pre></div><div id="line263"><pre><span class="token T_COMMENT">     * The used code tokenizer.</span></pre></div><div id="line264"><pre><span class="token T_COMMENT">     *</span></pre></div><div id="line265"><pre><span class="token T_COMMENT">     * @var \PDepend\Source\Tokenizer\Tokenizer</span></pre></div><div id="line266"><pre><span class="token T_COMMENT">     */</span></pre></div><div id="line267"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenizer</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line268"><br/></div><div id="line269"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line270"><pre><span class="token T_DOC_COMMENT">     * Constructs a new source parser.</span></pre></div><div id="line271"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line272"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\Tokenizer\Tokenizer $tokenizer</span></pre></div><div id="line273"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\Builder\Builder $builder</span></pre></div><div id="line274"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Util\Cache\CacheDriver $cache</span></pre></div><div id="line275"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line276"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokenizer</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenizer</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$builder</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CacheDriver</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line277"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line278"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenizer</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line279"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_WHITESPACE">   </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$builder</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line280"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_WHITESPACE">     </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line281"><br/></div><div id="line282"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Util</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">IdBuilder</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line283"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_WHITESPACE">     </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">TokenStack</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line284"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Parser</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">SymbolTable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line285"><br/></div><div id="line286"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line287"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line288"><br/></div><div id="line289"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line290"><pre><span class="token T_DOC_COMMENT">     * Sets the ignore annotations flag. This means that the parser will ignore</span></pre></div><div id="line291"><pre><span class="token T_DOC_COMMENT">     * doc comment annotations.</span></pre></div><div id="line292"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line293"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line294"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line295"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setIgnoreAnnotations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line296"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line297"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">ignoreAnnotations</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line298"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line299"><br/></div><div id="line300"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line301"><pre><span class="token T_DOC_COMMENT">     * Configures the maximum allowed nesting level.</span></pre></div><div id="line302"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line303"><pre><span class="token T_DOC_COMMENT">     * @param integer $maxNestingLevel The maximum allowed nesting level.</span></pre></div><div id="line304"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line305"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line306"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line307"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line308"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setMaxNestingLevel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$maxNestingLevel</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line309"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line310"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">maxNestingLevel</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$maxNestingLevel</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line311"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line312"><br/></div><div id="line313"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line314"><pre><span class="token T_DOC_COMMENT">     * Returns the maximum allowed nesting/recursion level.</span></pre></div><div id="line315"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line316"><pre><span class="token T_DOC_COMMENT">     * @return integer</span></pre></div><div id="line317"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line318"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line319"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getMaxNestingLevel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line320"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line321"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">maxNestingLevel</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line322"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line323"><br/></div><div id="line324"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line325"><pre><span class="token T_DOC_COMMENT">     * Parses the contents of the tokenizer and generates a node tree based on</span></pre></div><div id="line326"><pre><span class="token T_DOC_COMMENT">     * the found tokens.</span></pre></div><div id="line327"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line328"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line329"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line330"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parse</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line331"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line332"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line333"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span></pre></div><div id="line334"><pre><span class="token T_WHITESPACE">            </span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line335"><pre><span class="token T_WHITESPACE">            </span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line336"><br/></div><div id="line337"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$hash</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">md5_file</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line338"><br/></div><div id="line339"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">restore</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$hash</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line340"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line341"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line342"><br/></div><div id="line343"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">remove</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line344"><br/></div><div id="line345"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setUpEnvironment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line346"><br/></div><div id="line347"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line348"><br/></div><div id="line349"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">debug</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Processing file '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line350"><br/></div><div id="line351"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line352"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line353"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line354"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line355"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line356"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line357"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line358"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$comment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line359"><br/></div><div id="line360"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePackageAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line361"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line362"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line363"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line364"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// Parse a use statement. This method has no return value but it</span></pre></div><div id="line365"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// creates a new entry in the symbol map.</span></pre></div><div id="line366"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseUseDeclarations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line367"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line368"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line369"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNamespaceDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line370"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line371"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NO_PHP</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line372"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OPEN_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line373"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OPEN_TAG_WITH_ECHO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line374"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line375"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line376"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line377"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line378"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line379"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line380"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line381"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line382"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line383"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_COMMENT">// Consume whatever token</span></pre></div><div id="line384"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line385"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line386"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line387"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line388"><br/></div><div id="line389"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line390"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line391"><br/></div><div id="line392"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line393"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">store</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line394"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line395"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line396"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$hash</span></pre></div><div id="line397"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line398"><br/></div><div id="line399"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tearDownEnvironment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line400"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line401"><br/></div><div id="line402"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line403"><pre><span class="token T_DOC_COMMENT">     * Initializes the parser environment.</span></pre></div><div id="line404"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line405"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line406"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line407"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line408"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setUpEnvironment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line409"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line410"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">ini_set</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'xdebug.max_nesting_level'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getMaxNestingLevel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line411"><br/></div><div id="line412"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">createScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line413"><br/></div><div id="line414"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line415"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line416"><br/></div><div id="line417"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line418"><pre><span class="token T_DOC_COMMENT">     * Restores the parser environment back.</span></pre></div><div id="line419"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line420"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line421"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line422"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line423"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">tearDownEnvironment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line424"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line425"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">ini_restore</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'xdebug.max_nesting_level'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line426"><br/></div><div id="line427"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">destroyScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line428"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line429"><br/></div><div id="line430"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line431"><pre><span class="token T_DOC_COMMENT">     * Resets some object properties.</span></pre></div><div id="line432"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line433"><pre><span class="token T_DOC_COMMENT">     * @param integer $modifiers Optional default modifiers.</span></pre></div><div id="line434"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line435"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line436"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line437"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line438"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line439"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line440"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line441"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">modifiers</span><span class="token T_WHITESPACE">   </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line442"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line443"><br/></div><div id="line444"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line445"><pre><span class="token T_DOC_COMMENT">     * Tests if the given token type is a reserved keyword in the supported PHP</span></pre></div><div id="line446"><pre><span class="token T_DOC_COMMENT">     * version.</span></pre></div><div id="line447"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line448"><pre><span class="token T_DOC_COMMENT">     * @param  $tokenType</span></pre></div><div id="line449"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line450"><pre><span class="token T_DOC_COMMENT">     * @since  1.1.1</span></pre></div><div id="line451"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line452"><pre><span class="token T_WHITESPACE">    </span><span class="token T_ABSTRACT">abstract</span><span class="token T_WHITESPACE"> </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isKeyword</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line453"><br/></div><div id="line454"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line455"><pre><span class="token T_DOC_COMMENT">     * Parses a valid class or interface name and returns the image of the parsed</span></pre></div><div id="line456"><pre><span class="token T_DOC_COMMENT">     * token.</span></pre></div><div id="line457"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line458"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line459"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\TokenStreamEndException</span></pre></div><div id="line460"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line461"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line462"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line463"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line464"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line465"><br/></div><div id="line466"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line467"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line468"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line469"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line470"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line471"><br/></div><div id="line472"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line473"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line474"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line475"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line476"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line477"><br/></div><div id="line478"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line479"><pre><span class="token T_DOC_COMMENT">     * Will return &lt;b&gt;true&lt;/b&gt; if the given &lt;b&gt;$tokenType&lt;/b&gt; is a valid class</span></pre></div><div id="line480"><pre><span class="token T_DOC_COMMENT">     * name part.</span></pre></div><div id="line481"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line482"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType</span></pre></div><div id="line483"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line484"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.6</span></pre></div><div id="line485"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line486"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line487"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line488"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line489"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line490"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line491"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line492"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line493"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_YIELD</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line494"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line495"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line496"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CALLABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line497"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INSTEADOF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line498"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line499"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line500"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line501"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line502"><br/></div><div id="line503"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line504"><pre><span class="token T_DOC_COMMENT">     * Parses a function name from the given tokenizer and returns the string</span></pre></div><div id="line505"><pre><span class="token T_DOC_COMMENT">     * literal representing the function name. If no valid token exists in the</span></pre></div><div id="line506"><pre><span class="token T_DOC_COMMENT">     * token stream, this method will throw an exception.</span></pre></div><div id="line507"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line508"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line509"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line510"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\TokenStreamEndException</span></pre></div><div id="line511"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.0</span></pre></div><div id="line512"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line513"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line514"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line515"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line516"><br/></div><div id="line517"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line518"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line519"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line520"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line521"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line522"><br/></div><div id="line523"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line524"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line525"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line526"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line527"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line528"><br/></div><div id="line529"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line530"><pre><span class="token T_DOC_COMMENT">     * Tests if the give token is a valid function name in the supported PHP</span></pre></div><div id="line531"><pre><span class="token T_DOC_COMMENT">     * version.</span></pre></div><div id="line532"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line533"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType</span></pre></div><div id="line534"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line535"><pre><span class="token T_DOC_COMMENT">     * @since 2.3</span></pre></div><div id="line536"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line537"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line538"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line539"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line540"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line541"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line542"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line543"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line544"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line545"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_YIELD</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line546"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line547"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line548"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line549"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CALLABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line550"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INSTEADOF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line551"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line552"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line553"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line554"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line555"><br/></div><div id="line556"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line557"><pre><span class="token T_DOC_COMMENT">     * Parses a trait declaration.</span></pre></div><div id="line558"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line559"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTrait</span></pre></div><div id="line560"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line561"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line562"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line563"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line564"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line565"><br/></div><div id="line566"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line567"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTypeBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line568"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line569"><br/></div><div id="line570"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line571"><br/></div><div id="line572"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line573"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line574"><br/></div><div id="line575"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line576"><pre><span class="token T_DOC_COMMENT">     * Parses the signature of a trait.</span></pre></div><div id="line577"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line578"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTrait</span></pre></div><div id="line579"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line580"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line581"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line582"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line583"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line584"><br/></div><div id="line585"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">createQualifiedTypeName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line586"><br/></div><div id="line587"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildTrait</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line588"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line589"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line590"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forClassOrInterface</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line591"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$trait</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setUserDefined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line592"><br/></div><div id="line593"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line594"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line595"><br/></div><div id="line596"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line597"><pre><span class="token T_DOC_COMMENT">     * Parses the dependencies in a interface signature.</span></pre></div><div id="line598"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line599"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTInterface</span></pre></div><div id="line600"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line601"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseInterfaceDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line602"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line603"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line604"><br/></div><div id="line605"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseInterfaceSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line606"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTypeBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line607"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line608"><br/></div><div id="line609"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line610"><br/></div><div id="line611"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line612"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line613"><br/></div><div id="line614"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line615"><pre><span class="token T_DOC_COMMENT">     * Parses the signature of an interface and finally returns a configured</span></pre></div><div id="line616"><pre><span class="token T_DOC_COMMENT">     * interface instance.</span></pre></div><div id="line617"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line618"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTInterface</span></pre></div><div id="line619"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.2</span></pre></div><div id="line620"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line621"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseInterfaceSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line622"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line623"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INTERFACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line624"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line625"><br/></div><div id="line626"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">createQualifiedTypeName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line627"><br/></div><div id="line628"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildInterface</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line629"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line630"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line631"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forClassOrInterface</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line632"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$interface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setUserDefined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line633"><br/></div><div id="line634"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExtendsList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line635"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line636"><br/></div><div id="line637"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line638"><pre><span class="token T_DOC_COMMENT">     * Parses an optional interface list of an interface declaration.</span></pre></div><div id="line639"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line640"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTInterface $interface</span></pre></div><div id="line641"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTInterface</span></pre></div><div id="line642"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.2</span></pre></div><div id="line643"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line644"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalExtendsList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line645"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line646"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line647"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line648"><br/></div><div id="line649"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXTENDS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line650"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXTENDS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line651"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseInterfaceList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line652"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line653"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line654"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line655"><br/></div><div id="line656"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line657"><pre><span class="token T_DOC_COMMENT">     * Parses the dependencies in a class signature.</span></pre></div><div id="line658"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line659"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClass</span></pre></div><div id="line660"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line661"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line662"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line663"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line664"><br/></div><div id="line665"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line666"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTypeBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line667"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line668"><br/></div><div id="line669"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line670"><br/></div><div id="line671"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line672"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line673"><br/></div><div id="line674"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line675"><pre><span class="token T_DOC_COMMENT">     * Parses the signature of a class.</span></pre></div><div id="line676"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line677"><pre><span class="token T_DOC_COMMENT">     * The signature of a class consists of optional class modifiers like, final</span></pre></div><div id="line678"><pre><span class="token T_DOC_COMMENT">     * or abstract, the T_CLASS token, the class name, an optional parent class</span></pre></div><div id="line679"><pre><span class="token T_DOC_COMMENT">     * and an optional list of implemented interfaces.</span></pre></div><div id="line680"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line681"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClass</span></pre></div><div id="line682"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line683"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line684"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassSignature</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line685"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line686"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassModifiers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line687"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line688"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line689"><br/></div><div id="line690"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">createQualifiedTypeName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line691"><br/></div><div id="line692"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildClass</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line693"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line694"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setModifiers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">modifiers</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line695"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line696"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forClassOrInterface</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line697"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setUserDefined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line698"><br/></div><div id="line699"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line700"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line701"><br/></div><div id="line702"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXTENDS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line703"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassExtends</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line704"><br/></div><div id="line705"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line706"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line707"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line708"><br/></div><div id="line709"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IMPLEMENTS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line710"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IMPLEMENTS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line711"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseInterfaceList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line712"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line713"><br/></div><div id="line714"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line715"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line716"><br/></div><div id="line717"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line718"><pre><span class="token T_DOC_COMMENT">     * This method parses an optional class modifier. Valid class modifiers are</span></pre></div><div id="line719"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;final&lt;/b&gt; or &lt;b&gt;abstract&lt;/b&gt;.</span></pre></div><div id="line720"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line721"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line722"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line723"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassModifiers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line724"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line725"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line726"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line727"><br/></div><div id="line728"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line729"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line730"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_EXPLICIT_ABSTRACT</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line731"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line732"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line733"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_FINAL</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line734"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line735"><br/></div><div id="line736"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line737"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line738"><br/></div><div id="line739"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line740"><pre><span class="token T_DOC_COMMENT">     * Parses a parent class declaration for the given &lt;b&gt;$class&lt;/b&gt;.</span></pre></div><div id="line741"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line742"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTClass $class</span></pre></div><div id="line743"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClass</span></pre></div><div id="line744"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line745"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line746"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassExtends</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTClass</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line747"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line748"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXTENDS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line749"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line750"><br/></div><div id="line751"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$class</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setParentClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line752"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line753"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line754"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line755"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line756"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line757"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line758"><br/></div><div id="line759"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line760"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line761"><br/></div><div id="line762"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line763"><pre><span class="token T_DOC_COMMENT">     * This method parses a list of interface names as used in the &lt;b&gt;extends&lt;/b&gt;</span></pre></div><div id="line764"><pre><span class="token T_DOC_COMMENT">     * part of a interface declaration or in the &lt;b&gt;implements&lt;/b&gt; part of a</span></pre></div><div id="line765"><pre><span class="token T_DOC_COMMENT">     * class declaration.</span></pre></div><div id="line766"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line767"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\AbstractASTClassOrInterface $abstractType</span></pre></div><div id="line768"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line769"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line770"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseInterfaceList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractASTClassOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$abstractType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line771"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line772"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line773"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line774"><br/></div><div id="line775"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$abstractType</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line776"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line777"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line778"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line779"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line780"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line781"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line782"><br/></div><div id="line783"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line784"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line785"><br/></div><div id="line786"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line787"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line788"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line789"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line790"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line791"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line792"><br/></div><div id="line793"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line794"><pre><span class="token T_DOC_COMMENT">     * Parses a class/interface/trait body.</span></pre></div><div id="line795"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line796"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\AbstractASTType $type</span></pre></div><div id="line797"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\AbstractASTType</span></pre></div><div id="line798"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line799"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\TokenStreamEndException</span></pre></div><div id="line800"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line801"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTypeBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractASTType</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line802"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line803"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line804"><br/></div><div id="line805"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume comments and read opening curly brace</span></pre></div><div id="line806"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line807"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line808"><br/></div><div id="line809"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$defaultModifier</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PUBLIC</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line810"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTInterface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line811"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$defaultModifier</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_ABSTRACT</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line812"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line813"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line814"><br/></div><div id="line815"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line816"><br/></div><div id="line817"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line818"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line819"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line820"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PUBLIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line821"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PRIVATE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line822"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PROTECTED</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line823"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line824"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line825"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line826"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line827"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line828"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$methodOrProperty</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodOrFieldDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line829"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$defaultModifier</span></pre></div><div id="line830"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line831"><br/></div><div id="line832"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$methodOrProperty</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line833"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$methodOrProperty</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line834"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line835"><br/></div><div id="line836"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line837"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line838"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line839"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantDefinition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line840"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line841"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line842"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line843"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line844"><br/></div><div id="line845"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line846"><br/></div><div id="line847"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// Reset context class or interface instance</span></pre></div><div id="line848"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line849"><br/></div><div id="line850"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// Stop processing</span></pre></div><div id="line851"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line852"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line853"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line854"><br/></div><div id="line855"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$comment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line856"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$comment</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line857"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line858"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line859"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line860"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line861"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line862"><br/></div><div id="line863"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line864"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line865"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line866"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line867"><br/></div><div id="line868"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$comment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line869"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$comment</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line870"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line871"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line872"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line873"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line874"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line875"><br/></div><div id="line876"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line877"><br/></div><div id="line878"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line879"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line880"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line881"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitUseStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line882"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line883"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line884"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line885"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line886"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line887"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line888"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line889"><br/></div><div id="line890"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line891"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line892"><br/></div><div id="line893"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line894"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line895"><br/></div><div id="line896"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line897"><pre><span class="token T_DOC_COMMENT">     * This method will parse a list of modifiers and a following property or</span></pre></div><div id="line898"><pre><span class="token T_DOC_COMMENT">     * method.</span></pre></div><div id="line899"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line900"><pre><span class="token T_DOC_COMMENT">     * @param  integer $modifiers</span></pre></div><div id="line901"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTMethod|\PDepend\Source\AST\ASTFieldDeclaration</span></pre></div><div id="line902"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.6</span></pre></div><div id="line903"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line904"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMethodOrFieldDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line905"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line906"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line907"><br/></div><div id="line908"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line909"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line910"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line911"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PRIVATE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line912"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PRIVATE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line913"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_TILDE">~</span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PUBLIC</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line914"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line915"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PROTECTED</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line916"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PROTECTED</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line917"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_TILDE">~</span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PUBLIC</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line918"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line919"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line920"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PUBLIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line921"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PUBLIC</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line922"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line923"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line924"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_STATIC</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line925"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line926"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line927"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_ABSTRACT</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line928"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line929"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line930"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$modifiers</span><span class="token T_WHITESPACE"> </span><span class="token T_OR_EQUAL">|=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_FINAL</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line931"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line932"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line933"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$method</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line934"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setModifiers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$modifiers</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line935"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line936"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forMethod</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line937"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line938"><br/></div><div id="line939"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line940"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line941"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$declaration</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFieldDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line942"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$declaration</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setModifiers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$modifiers</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line943"><br/></div><div id="line944"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$declaration</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line945"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line946"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line947"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line948"><br/></div><div id="line949"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line950"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line951"><br/></div><div id="line952"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line953"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line954"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line955"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line956"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line957"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line958"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line959"><br/></div><div id="line960"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line961"><pre><span class="token T_DOC_COMMENT">     * This method will parse a class field declaration with all it's variables.</span></pre></div><div id="line962"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line963"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line964"><pre><span class="token T_DOC_COMMENT">     * // Simple field declaration</span></pre></div><div id="line965"><pre><span class="token T_DOC_COMMENT">     * class Foo {</span></pre></div><div id="line966"><pre><span class="token T_DOC_COMMENT">     *     protected $foo;</span></pre></div><div id="line967"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line968"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line969"><pre><span class="token T_DOC_COMMENT">     * // Field declaration with multiple properties</span></pre></div><div id="line970"><pre><span class="token T_DOC_COMMENT">     * class Foo {</span></pre></div><div id="line971"><pre><span class="token T_DOC_COMMENT">     *     protected $foo = 23</span></pre></div><div id="line972"><pre><span class="token T_DOC_COMMENT">     *               $bar = 42,</span></pre></div><div id="line973"><pre><span class="token T_DOC_COMMENT">     *               $baz = null;</span></pre></div><div id="line974"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line975"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line976"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line977"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFieldDeclaration</span></pre></div><div id="line978"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line979"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line980"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFieldDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line981"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line982"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declaration</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstFieldDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line983"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declaration</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line984"><br/></div><div id="line985"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFieldDeclarationType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line986"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line987"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$declaration</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line988"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line989"><br/></div><div id="line990"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line991"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line992"><br/></div><div id="line993"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line994"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$declaration</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line995"><br/></div><div id="line996"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line997"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line998"><br/></div><div id="line999"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1000"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1001"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1002"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1003"><br/></div><div id="line1004"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1005"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1006"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1007"><br/></div><div id="line1008"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$declaration</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1009"><br/></div><div id="line1010"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1011"><br/></div><div id="line1012"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$declaration</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1013"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1014"><br/></div><div id="line1015"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1016"><pre><span class="token T_DOC_COMMENT">     * This method parses a simple function or a PHP 5.3 lambda function or</span></pre></div><div id="line1017"><pre><span class="token T_DOC_COMMENT">     * closure.</span></pre></div><div id="line1018"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1019"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\AbstractASTCallable</span></pre></div><div id="line1020"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line1021"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1022"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFunctionOrClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1023"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1024"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1025"><br/></div><div id="line1026"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1027"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1028"><br/></div><div id="line1029"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$returnReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1030"><br/></div><div id="line1031"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isNextTokenFormalParameterList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1032"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1033"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1034"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1035"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1036"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1037"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1038"><br/></div><div id="line1039"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1040"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setTokens</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1041"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prepareCallable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1042"><br/></div><div id="line1043"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$returnReference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1044"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setReturnsReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1045"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1046"><br/></div><div id="line1047"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1048"><br/></div><div id="line1049"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1050"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1051"><br/></div><div id="line1052"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1053"><pre><span class="token T_DOC_COMMENT">     * Parses an optional by reference token. The return value will be</span></pre></div><div id="line1054"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;true&lt;/b&gt; when a reference token was found, otherwise this method will</span></pre></div><div id="line1055"><pre><span class="token T_DOC_COMMENT">     * return &lt;b&gt;false&lt;/b&gt;.</span></pre></div><div id="line1056"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1057"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line1058"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line1059"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1060"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1061"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1062"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isNextTokenByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1063"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1064"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1065"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1066"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1067"><br/></div><div id="line1068"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1069"><pre><span class="token T_DOC_COMMENT">     * Tests that the next available token is the returns by reference token.</span></pre></div><div id="line1070"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1071"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line1072"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line1073"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1074"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isNextTokenByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1075"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1076"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1077"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1078"><br/></div><div id="line1079"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1080"><pre><span class="token T_DOC_COMMENT">     * This method parses a returns by reference token and returns &lt;b&gt;true&lt;/b&gt;.</span></pre></div><div id="line1081"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1082"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line1083"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1084"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1085"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1086"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1087"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1088"><br/></div><div id="line1089"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1090"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1091"><br/></div><div id="line1092"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1093"><pre><span class="token T_DOC_COMMENT">     * Tests that the next available token is an opening parenthesis.</span></pre></div><div id="line1094"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1095"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line1096"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line1097"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1098"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isNextTokenFormalParameterList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1099"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1100"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1101"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1102"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1103"><br/></div><div id="line1104"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1105"><pre><span class="token T_DOC_COMMENT">     * This method parses a function declaration.</span></pre></div><div id="line1106"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1107"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFunction</span></pre></div><div id="line1108"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line1109"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1110"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFunctionDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1111"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1112"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1113"><br/></div><div id="line1114"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Next token must be the function identifier</span></pre></div><div id="line1115"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$functionName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1116"><br/></div><div id="line1117"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildFunction</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$functionName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1118"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1119"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">idBuilder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">forFunction</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1120"><br/></div><div id="line1121"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCallableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1122"><br/></div><div id="line1123"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// First check for an existing namespace</span></pre></div><div id="line1124"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1125"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1126"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1127"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1128"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1129"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">globalPackageName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1130"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1131"><br/></div><div id="line1132"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span></pre></div><div id="line1133"><pre><span class="token T_WHITESPACE">            </span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildNamespace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$packageName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1134"><pre><span class="token T_WHITESPACE">            </span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addFunction</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1135"><br/></div><div id="line1136"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Store function in source file, because we need them during the file's</span></pre></div><div id="line1137"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// __wakeup() phase for function declarations within another function or</span></pre></div><div id="line1138"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// method declaration.</span></pre></div><div id="line1139"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1140"><br/></div><div id="line1141"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1142"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1143"><br/></div><div id="line1144"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1145"><pre><span class="token T_DOC_COMMENT">     * This method parses a method declaration.</span></pre></div><div id="line1146"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1147"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTMethod</span></pre></div><div id="line1148"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line1149"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1150"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMethodDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1151"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1152"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Read function keyword</span></pre></div><div id="line1153"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1154"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1155"><br/></div><div id="line1156"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$returnsReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1157"><br/></div><div id="line1158"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$methodName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1159"><br/></div><div id="line1160"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$method</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildMethod</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$methodName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1161"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1162"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setCompilationUnit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1163"><br/></div><div id="line1164"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addMethod</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1165"><br/></div><div id="line1166"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCallableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1167"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prepareCallable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1168"><br/></div><div id="line1169"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$returnsReference</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1170"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$method</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setReturnsReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1171"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1172"><br/></div><div id="line1173"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1174"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1175"><br/></div><div id="line1176"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1177"><pre><span class="token T_DOC_COMMENT">     * This method parses a PHP 5.3 closure or lambda function.</span></pre></div><div id="line1178"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1179"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClosure</span></pre></div><div id="line1180"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line1181"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1182"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1183"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1184"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1185"><br/></div><div id="line1186"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1187"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1188"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1189"><br/></div><div id="line1190"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClosure</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1191"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setReturnsByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1192"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1193"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalBoundVariables</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1194"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCallableDeclarationAddition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1195"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closure</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1196"><br/></div><div id="line1197"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1198"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1199"><br/></div><div id="line1200"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1201"><pre><span class="token T_DOC_COMMENT">     * Parses a function or a method and adds it to the parent context node.</span></pre></div><div id="line1202"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1203"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\AbstractASTCallable $callable</span></pre></div><div id="line1204"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line1205"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1206"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCallableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractASTCallable</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1207"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1208"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1209"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$callable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCallableDeclarationAddition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1210"><br/></div><div id="line1211"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1212"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1213"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1214"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1215"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1216"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1217"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1218"><br/></div><div id="line1219"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1220"><pre><span class="token T_DOC_COMMENT">     * Extension for version specific additions.</span></pre></div><div id="line1221"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1222"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\AbstractASTCallable $callable</span></pre></div><div id="line1223"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\AbstractASTCallable</span></pre></div><div id="line1224"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1225"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCallableDeclarationAddition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1226"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1227"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1228"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1229"><br/></div><div id="line1230"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1231"><pre><span class="token T_DOC_COMMENT">     * Parses a trait use statement.</span></pre></div><div id="line1232"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1233"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitUseStatement</span></pre></div><div id="line1234"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1235"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1236"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitUseStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1237"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1238"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1239"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1240"><br/></div><div id="line1241"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$useStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitUseStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1242"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$useStatement</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1243"><br/></div><div id="line1244"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1245"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1246"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1247"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$useStatement</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1248"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1249"><br/></div><div id="line1250"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1251"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalTraitAdaptation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$useStatement</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1252"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1253"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1254"><br/></div><div id="line1255"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1256"><pre><span class="token T_DOC_COMMENT">     * Parses a trait reference instance.</span></pre></div><div id="line1257"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1258"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitReference</span></pre></div><div id="line1259"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1260"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1261"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1262"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1263"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1264"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1265"><br/></div><div id="line1266"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1267"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1268"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1269"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1270"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1271"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1272"><br/></div><div id="line1273"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1274"><pre><span class="token T_DOC_COMMENT">     * Parses the adaptation list of the given use statement or simply reads</span></pre></div><div id="line1275"><pre><span class="token T_DOC_COMMENT">     * the terminating semicolon, when no adaptation list exists.</span></pre></div><div id="line1276"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1277"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTTraitUseStatement $useStatement The parent use</span></pre></div><div id="line1278"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1279"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitUseStatement</span></pre></div><div id="line1280"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1281"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1282"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalTraitAdaptation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1283"><pre><span class="token T_WHITESPACE">        </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTTraitUseStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$useStatement</span></pre></div><div id="line1284"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1285"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1286"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1287"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$useStatement</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitAdaptation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1288"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1289"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1290"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1291"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$useStatement</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1292"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1293"><br/></div><div id="line1294"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1295"><pre><span class="token T_DOC_COMMENT">     * Parses the adaptation expression of a trait use statement.</span></pre></div><div id="line1296"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1297"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitAdaptation</span></pre></div><div id="line1298"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1299"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1300"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitAdaptation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1301"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1302"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1303"><br/></div><div id="line1304"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$adaptation</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitAdaptation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1305"><br/></div><div id="line1306"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1307"><br/></div><div id="line1308"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1309"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1310"><br/></div><div id="line1311"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$reference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitMethodReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1312"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1313"><br/></div><div id="line1314"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1315"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitAdaptationAliasStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1316"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1317"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitAdaptationPrecedenceStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1318"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1319"><br/></div><div id="line1320"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1321"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1322"><br/></div><div id="line1323"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$adaptation</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1324"><br/></div><div id="line1325"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1326"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1327"><br/></div><div id="line1328"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1329"><br/></div><div id="line1330"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$adaptation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1331"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1332"><br/></div><div id="line1333"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1334"><pre><span class="token T_DOC_COMMENT">     * Parses a trait method reference and returns the found reference as an</span></pre></div><div id="line1335"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;array&lt;/b&gt;.</span></pre></div><div id="line1336"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1337"><pre><span class="token T_DOC_COMMENT">     * The returned array with contain only one element, when the referenced</span></pre></div><div id="line1338"><pre><span class="token T_DOC_COMMENT">     * method is specified by the method's name, without the declaring trait.</span></pre></div><div id="line1339"><pre><span class="token T_DOC_COMMENT">     * When the method reference contains the declaring trait the returned</span></pre></div><div id="line1340"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;array&lt;/b&gt; will contain two elements. The first element is the plain</span></pre></div><div id="line1341"><pre><span class="token T_DOC_COMMENT">     * method name and the second element is an instance of the</span></pre></div><div id="line1342"><pre><span class="token T_DOC_COMMENT">     * {@link \PDepend\Source\AST\ASTTraitReference} class that represents the</span></pre></div><div id="line1343"><pre><span class="token T_DOC_COMMENT">     * declaring trait.</span></pre></div><div id="line1344"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1345"><pre><span class="token T_DOC_COMMENT">     * @return array</span></pre></div><div id="line1346"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1347"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1348"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitMethodReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1349"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1350"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1351"><br/></div><div id="line1352"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1353"><br/></div><div id="line1354"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1355"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1356"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$traitReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1357"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1358"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1359"><br/></div><div id="line1360"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1361"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1362"><br/></div><div id="line1363"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$traitReference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1364"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1365"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1366"><br/></div><div id="line1367"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1368"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1369"><br/></div><div id="line1370"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1371"><pre><span class="token T_DOC_COMMENT">     * Parses a trait adaptation alias statement.</span></pre></div><div id="line1372"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1373"><pre><span class="token T_DOC_COMMENT">     * @param array $reference Parsed method reference array.</span></pre></div><div id="line1374"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1375"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitAdaptationAlias</span></pre></div><div id="line1376"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1377"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1378"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitAdaptationAliasStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1379"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1380"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitAdaptationAlias</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1381"><br/></div><div id="line1382"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">2</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1383"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1384"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1385"><br/></div><div id="line1386"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1387"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1388"><br/></div><div id="line1389"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1390"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PUBLIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1391"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNewModifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PUBLIC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1392"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PUBLIC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1393"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1394"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1395"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PROTECTED</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1396"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNewModifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PROTECTED</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1397"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PROTECTED</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1398"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1399"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1400"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PRIVATE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1401"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNewModifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">State</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">IS_PRIVATE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1402"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PRIVATE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1403"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1404"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1405"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1406"><br/></div><div id="line1407"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1408"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNewName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1409"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1410"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1411"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1412"><br/></div><div id="line1413"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1414"><pre><span class="token T_DOC_COMMENT">     * Parses a trait adaptation precedence statement.</span></pre></div><div id="line1415"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1416"><pre><span class="token T_DOC_COMMENT">     * @param  array $reference Parsed method reference array.</span></pre></div><div id="line1417"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTraitAdaptationPrecedence</span></pre></div><div id="line1418"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line1419"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1420"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1421"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTraitAdaptationPrecedenceStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1422"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1423"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_LT">&lt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1424"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1425"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1426"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1427"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Expecting full qualified trait method name.'</span></pre></div><div id="line1428"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1429"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1430"><br/></div><div id="line1431"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTraitAdaptationPrecedence</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1432"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1433"><br/></div><div id="line1434"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INSTEADOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1435"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1436"><br/></div><div id="line1437"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1438"><br/></div><div id="line1439"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1440"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1441"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1442"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1443"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1444"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1445"><br/></div><div id="line1446"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1447"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1448"><br/></div><div id="line1449"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1450"><pre><span class="token T_DOC_COMMENT">     * Parses an allocation expression.</span></pre></div><div id="line1451"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1452"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line1453"><pre><span class="token T_DOC_COMMENT">     * function foo()</span></pre></div><div id="line1454"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line1455"><pre><span class="token T_DOC_COMMENT">     * //  -------------</span></pre></div><div id="line1456"><pre><span class="token T_DOC_COMMENT">     *     new bar\Baz();</span></pre></div><div id="line1457"><pre><span class="token T_DOC_COMMENT">     * //  -------------</span></pre></div><div id="line1458"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1459"><pre><span class="token T_DOC_COMMENT">     * //  ---------</span></pre></div><div id="line1460"><pre><span class="token T_DOC_COMMENT">     *     new Foo();</span></pre></div><div id="line1461"><pre><span class="token T_DOC_COMMENT">     * //  ---------</span></pre></div><div id="line1462"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line1463"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line1464"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1465"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTAllocationExpression</span></pre></div><div id="line1466"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line1467"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1468"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseAllocationExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1469"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1470"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1471"><br/></div><div id="line1472"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NEW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1473"><br/></div><div id="line1474"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$allocation</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstAllocationExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1475"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$allocation</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAllocationExpressionTypeReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$allocation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1476"><br/></div><div id="line1477"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isNextTokenArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1478"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$allocation</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1479"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1480"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$allocation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1481"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1482"><br/></div><div id="line1483"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1484"><pre><span class="token T_DOC_COMMENT">     * Parse the type reference used in an allocation expression.</span></pre></div><div id="line1485"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1486"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTAllocationExpression $allocation</span></pre></div><div id="line1487"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line1488"><pre><span class="token T_DOC_COMMENT">     * @since 2.3</span></pre></div><div id="line1489"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1490"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseAllocationExpressionTypeReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTAllocationExpression</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$allocation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1491"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1492"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionTypeReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$allocation</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1493"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1494"><br/></div><div id="line1495"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1496"><pre><span class="token T_DOC_COMMENT">     * Parses a eval-expression node.</span></pre></div><div id="line1497"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1498"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTEvalExpression</span></pre></div><div id="line1499"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1500"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1501"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseEvalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1502"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1503"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1504"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EVAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1505"><br/></div><div id="line1506"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstEvalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1507"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1508"><br/></div><div id="line1509"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1510"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1511"><br/></div><div id="line1512"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1513"><pre><span class="token T_DOC_COMMENT">     * This method parses an exit-expression.</span></pre></div><div id="line1514"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1515"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExitExpression</span></pre></div><div id="line1516"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1517"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1518"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseExitExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1519"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1520"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1521"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXIT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1522"><br/></div><div id="line1523"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstExitExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1524"><br/></div><div id="line1525"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1526"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1527"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1528"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1529"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1530"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1531"><br/></div><div id="line1532"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1533"><pre><span class="token T_DOC_COMMENT">     * Parses a clone-expression node.</span></pre></div><div id="line1534"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1535"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTCloneExpression</span></pre></div><div id="line1536"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1537"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1538"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCloneExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1539"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1540"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1541"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLONE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1542"><br/></div><div id="line1543"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCloneExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1544"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1545"><br/></div><div id="line1546"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1547"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1548"><br/></div><div id="line1549"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1550"><pre><span class="token T_DOC_COMMENT">     * This method parses a single list-statement node.</span></pre></div><div id="line1551"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1552"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTListExpression</span></pre></div><div id="line1553"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1554"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1555"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1556"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1557"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1558"><br/></div><div id="line1559"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LIST</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1560"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1561"><br/></div><div id="line1562"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$list</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1563"><br/></div><div id="line1564"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1565"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1566"><br/></div><div id="line1567"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1568"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// The variable is optional:</span></pre></div><div id="line1569"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">//   list(, , , , $something) = ...;</span></pre></div><div id="line1570"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// is valid.</span></pre></div><div id="line1571"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1572"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1573"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1574"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1575"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1576"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1577"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1578"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LIST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1579"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$list</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1580"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1581"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1582"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1583"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$list</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1584"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1585"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1586"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1587"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1588"><br/></div><div id="line1589"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1590"><br/></div><div id="line1591"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$list</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1592"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1593"><br/></div><div id="line1594"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1595"><pre><span class="token T_DOC_COMMENT">     * Parses a include-expression node.</span></pre></div><div id="line1596"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1597"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTIncludeExpression</span></pre></div><div id="line1598"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1599"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1600"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1601"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1602"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1603"><br/></div><div id="line1604"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireOrIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INCLUDE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1605"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1606"><br/></div><div id="line1607"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1608"><pre><span class="token T_DOC_COMMENT">     * Parses a include_once-expression node.</span></pre></div><div id="line1609"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1610"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTIncludeExpression</span></pre></div><div id="line1611"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1612"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1613"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIncludeOnceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1614"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1615"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1616"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setOnce</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1617"><br/></div><div id="line1618"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireOrIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INCLUDE_ONCE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1619"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1620"><br/></div><div id="line1621"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1622"><pre><span class="token T_DOC_COMMENT">     * Parses a require-expression node.</span></pre></div><div id="line1623"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1624"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTRequireExpression</span></pre></div><div id="line1625"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1626"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1627"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseRequireExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1628"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1629"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstRequireExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1630"><br/></div><div id="line1631"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireOrIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_REQUIRE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1632"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1633"><br/></div><div id="line1634"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1635"><pre><span class="token T_DOC_COMMENT">     * Parses a require_once-expression node.</span></pre></div><div id="line1636"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1637"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTRequireExpression</span></pre></div><div id="line1638"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1639"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1640"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseRequireOnceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1641"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1642"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstRequireExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1643"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setOnce</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1644"><br/></div><div id="line1645"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireOrIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_REQUIRE_ONCE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1646"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1647"><br/></div><div id="line1648"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1649"><pre><span class="token T_DOC_COMMENT">     * Parses a &lt;b&gt;require_once&lt;/b&gt;-, &lt;b&gt;require&lt;/b&gt;-, &lt;b&gt;include_once&lt;/b&gt;- or</span></pre></div><div id="line1650"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;include&lt;/b&gt;-expression node.</span></pre></div><div id="line1651"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1652"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTExpression $expr</span></pre></div><div id="line1653"><pre><span class="token T_DOC_COMMENT">     * @param  integer                           $type</span></pre></div><div id="line1654"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression</span></pre></div><div id="line1655"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1656"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1657"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseRequireOrIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTExpression</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1658"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1659"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1660"><br/></div><div id="line1661"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1662"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1663"><br/></div><div id="line1664"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1665"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1666"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1667"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1668"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1669"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1670"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1671"><br/></div><div id="line1672"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1673"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1674"><br/></div><div id="line1675"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1676"><pre><span class="token T_DOC_COMMENT">     * Parses a cast-expression node.</span></pre></div><div id="line1677"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1678"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTCaseExpression</span></pre></div><div id="line1679"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.0</span></pre></div><div id="line1680"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1681"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCastExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1682"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1683"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1684"><br/></div><div id="line1685"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCastExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1686"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1687"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1688"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1689"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1690"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1691"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1692"><br/></div><div id="line1693"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1694"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1695"><br/></div><div id="line1696"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1697"><pre><span class="token T_DOC_COMMENT">     * This method will parse an increment-expression. Depending on the previous</span></pre></div><div id="line1698"><pre><span class="token T_DOC_COMMENT">     * node this can be a {@link \PDepend\Source\AST\ASTPostIncrementExpression} or</span></pre></div><div id="line1699"><pre><span class="token T_DOC_COMMENT">     * {@link \PDepend\Source\AST\ASTPostfixExpression}.</span></pre></div><div id="line1700"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1701"><pre><span class="token T_DOC_COMMENT">     * @param  array &amp;$expressions List of previous parsed expression nodes.</span></pre></div><div id="line1702"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression</span></pre></div><div id="line1703"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1704"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1705"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1706"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1707"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isReadWriteVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1708"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePostIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1709"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1710"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePreIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1711"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1712"><br/></div><div id="line1713"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1714"><pre><span class="token T_DOC_COMMENT">     * Parses a post increment-expression and adds the given child to that node.</span></pre></div><div id="line1715"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1716"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $child The child expression node.</span></pre></div><div id="line1717"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1718"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTPostfixExpression</span></pre></div><div id="line1719"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1720"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1721"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePostIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1722"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1723"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1724"><br/></div><div id="line1725"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPostfixExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1726"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1727"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1728"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1729"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1730"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1731"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1732"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1733"><br/></div><div id="line1734"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1735"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1736"><br/></div><div id="line1737"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1738"><pre><span class="token T_DOC_COMMENT">     * Parses a pre increment-expression and adds the given child to that node.</span></pre></div><div id="line1739"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1740"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTPreIncrementExpression</span></pre></div><div id="line1741"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1742"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1743"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePreIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1744"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1745"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1746"><br/></div><div id="line1747"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPreIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1748"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1749"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1750"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1751"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1752"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1753"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1754"><br/></div><div id="line1755"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1756"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1757"><br/></div><div id="line1758"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1759"><pre><span class="token T_DOC_COMMENT">     * This method will parse an decrement-expression. Depending on the previous</span></pre></div><div id="line1760"><pre><span class="token T_DOC_COMMENT">     * node this can be a {@link \PDepend\Source\AST\ASTPostDecrementExpression} or</span></pre></div><div id="line1761"><pre><span class="token T_DOC_COMMENT">     * {@link \PDepend\Source\AST\ASTPostfixExpression}.</span></pre></div><div id="line1762"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1763"><pre><span class="token T_DOC_COMMENT">     * @param array &amp;$expressions List of previous parsed expression nodes.</span></pre></div><div id="line1764"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1765"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression</span></pre></div><div id="line1766"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1767"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1768"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1769"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1770"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isReadWriteVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1771"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePostDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1772"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1773"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePreDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1774"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1775"><br/></div><div id="line1776"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1777"><pre><span class="token T_DOC_COMMENT">     * Parses a post decrement-expression and adds the given child to that node.</span></pre></div><div id="line1778"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1779"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $child The child expression node.</span></pre></div><div id="line1780"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1781"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTPostfixExpression</span></pre></div><div id="line1782"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1783"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1784"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePostDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1785"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1786"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1787"><br/></div><div id="line1788"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPostfixExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1789"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1790"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1791"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1792"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1793"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1794"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1795"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1796"><br/></div><div id="line1797"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1798"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1799"><br/></div><div id="line1800"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1801"><pre><span class="token T_DOC_COMMENT">     * Parses a pre decrement-expression and adds the given child to that node.</span></pre></div><div id="line1802"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1803"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTPreDecrementExpression</span></pre></div><div id="line1804"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line1805"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1806"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePreDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1807"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1808"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1809"><br/></div><div id="line1810"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPreDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1811"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1812"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1813"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1814"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1815"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1816"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1817"><br/></div><div id="line1818"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1819"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1820"><br/></div><div id="line1821"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1822"><pre><span class="token T_DOC_COMMENT">     * Parses one or more optional php &lt;b&gt;array&lt;/b&gt; or &lt;b&gt;string&lt;/b&gt; expressions.</span></pre></div><div id="line1823"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1824"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line1825"><pre><span class="token T_DOC_COMMENT">     * ---------</span></pre></div><div id="line1826"><pre><span class="token T_DOC_COMMENT">     * $array[0];</span></pre></div><div id="line1827"><pre><span class="token T_DOC_COMMENT">     * ---------</span></pre></div><div id="line1828"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1829"><pre><span class="token T_DOC_COMMENT">     * ----------------</span></pre></div><div id="line1830"><pre><span class="token T_DOC_COMMENT">     * $array[1]['foo'];</span></pre></div><div id="line1831"><pre><span class="token T_DOC_COMMENT">     * ----------------</span></pre></div><div id="line1832"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1833"><pre><span class="token T_DOC_COMMENT">     * ----------------</span></pre></div><div id="line1834"><pre><span class="token T_DOC_COMMENT">     * $string{1}[0]{0};</span></pre></div><div id="line1835"><pre><span class="token T_DOC_COMMENT">     * ----------------</span></pre></div><div id="line1836"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line1837"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1838"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The parent/context node instance.</span></pre></div><div id="line1839"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1840"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line1841"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1842"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1843"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1844"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1845"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1846"><br/></div><div id="line1847"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1848"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1849"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStringIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1850"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line1851"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArrayIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1852"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1853"><br/></div><div id="line1854"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1855"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1856"><br/></div><div id="line1857"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1858"><pre><span class="token T_DOC_COMMENT">     * Parses an index expression as it is valid to access elements in a php</span></pre></div><div id="line1859"><pre><span class="token T_DOC_COMMENT">     * string or array.</span></pre></div><div id="line1860"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1861"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode       $node  The context source node.</span></pre></div><div id="line1862"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTExpression $expr  The concrete index expression.</span></pre></div><div id="line1863"><pre><span class="token T_DOC_COMMENT">     * @param integer                           $open  The open token type.</span></pre></div><div id="line1864"><pre><span class="token T_DOC_COMMENT">     * @param integer                           $close The close token type.</span></pre></div><div id="line1865"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1866"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line1867"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1868"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1869"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1870"><pre><span class="token T_WHITESPACE">        </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1871"><pre><span class="token T_WHITESPACE">        </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTExpression</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1872"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$open</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1873"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$close</span></pre></div><div id="line1874"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1875"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$open</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1876"><br/></div><div id="line1877"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1878"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1879"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1880"><br/></div><div id="line1881"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$close</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1882"><br/></div><div id="line1883"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1884"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1885"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1886"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1887"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1888"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1889"><br/></div><div id="line1890"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1891"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1892"><br/></div><div id="line1893"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1894"><pre><span class="token T_DOC_COMMENT">     * Parses a mandatory array index expression.</span></pre></div><div id="line1895"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1896"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line1897"><pre><span class="token T_DOC_COMMENT">     * //    ---</span></pre></div><div id="line1898"><pre><span class="token T_DOC_COMMENT">     * $array[0];</span></pre></div><div id="line1899"><pre><span class="token T_DOC_COMMENT">     * //    ---</span></pre></div><div id="line1900"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line1901"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1902"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The context source node.</span></pre></div><div id="line1903"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1904"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArrayIndexExpression</span></pre></div><div id="line1905"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1906"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1907"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArrayIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1908"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1909"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstArrayIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1910"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1911"><br/></div><div id="line1912"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1913"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1914"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1915"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_OPEN</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1916"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_CLOSE</span></pre></div><div id="line1917"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1918"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1919"><br/></div><div id="line1920"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1921"><pre><span class="token T_DOC_COMMENT">     * Parses a mandatory array index expression.</span></pre></div><div id="line1922"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1923"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line1924"><pre><span class="token T_DOC_COMMENT">     * //     ---</span></pre></div><div id="line1925"><pre><span class="token T_DOC_COMMENT">     * $string{0};</span></pre></div><div id="line1926"><pre><span class="token T_DOC_COMMENT">     * //     ---</span></pre></div><div id="line1927"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line1928"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1929"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The context source node.</span></pre></div><div id="line1930"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1931"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTStringIndexExpression</span></pre></div><div id="line1932"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line1933"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1934"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStringIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1935"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1936"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstStringIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1937"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1938"><br/></div><div id="line1939"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1940"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1941"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1942"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1943"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span></pre></div><div id="line1944"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1945"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1946"><br/></div><div id="line1947"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1948"><pre><span class="token T_DOC_COMMENT">     * This method checks if the next available token starts an arguments node.</span></pre></div><div id="line1949"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1950"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line1951"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line1952"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1953"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isNextTokenArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1954"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1955"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1956"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1957"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1958"><br/></div><div id="line1959"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1960"><pre><span class="token T_DOC_COMMENT">     * This method configures the given node with its start and end positions.</span></pre></div><div id="line1961"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1962"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The node to prepare.</span></pre></div><div id="line1963"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1964"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line1965"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line1966"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1967"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1968"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1969"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokens</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">stripTrailingComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1970"><br/></div><div id="line1971"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$end</span><span class="token T_WHITESPACE">   </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1972"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$start</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1973"><br/></div><div id="line1974"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line1975"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$start</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1976"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$end</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1977"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$start</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line1978"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$end</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line1979"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1980"><br/></div><div id="line1981"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1982"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1983"><br/></div><div id="line1984"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line1985"><pre><span class="token T_DOC_COMMENT">     * Strips all trailing comments from the given token stream.</span></pre></div><div id="line1986"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line1987"><pre><span class="token T_DOC_COMMENT">     * @param  Token[] $tokens Original token stream.</span></pre></div><div id="line1988"><pre><span class="token T_DOC_COMMENT">     * @return Token[]</span></pre></div><div id="line1989"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line1990"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line1991"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">stripTrailingComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line1992"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1993"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$comments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1994"><br/></div><div id="line1995"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">in_array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line1996"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1997"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line1998"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line1999"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2000"><br/></div><div id="line2001"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2002"><pre><span class="token T_DOC_COMMENT">     * This method parse an instance of expression with its associated class or</span></pre></div><div id="line2003"><pre><span class="token T_DOC_COMMENT">     * interface reference.</span></pre></div><div id="line2004"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2005"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2006"><pre><span class="token T_DOC_COMMENT">     *          ----------------</span></pre></div><div id="line2007"><pre><span class="token T_DOC_COMMENT">     * ($object instanceof Clazz);</span></pre></div><div id="line2008"><pre><span class="token T_DOC_COMMENT">     *          ----------------</span></pre></div><div id="line2009"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2010"><pre><span class="token T_DOC_COMMENT">     *          ------------------------</span></pre></div><div id="line2011"><pre><span class="token T_DOC_COMMENT">     * ($object instanceof Clazz::$clazz);</span></pre></div><div id="line2012"><pre><span class="token T_DOC_COMMENT">     *          ------------------------</span></pre></div><div id="line2013"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2014"><pre><span class="token T_DOC_COMMENT">     *          -----------------</span></pre></div><div id="line2015"><pre><span class="token T_DOC_COMMENT">     * ($object instanceof $clazz);</span></pre></div><div id="line2016"><pre><span class="token T_DOC_COMMENT">     *          -----------------</span></pre></div><div id="line2017"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2018"><pre><span class="token T_DOC_COMMENT">     *          -----------------------</span></pre></div><div id="line2019"><pre><span class="token T_DOC_COMMENT">     * ($object instanceof $clazz-&gt;type);</span></pre></div><div id="line2020"><pre><span class="token T_DOC_COMMENT">     *          -----------------------</span></pre></div><div id="line2021"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2022"><pre><span class="token T_DOC_COMMENT">     *          -----------------------------</span></pre></div><div id="line2023"><pre><span class="token T_DOC_COMMENT">     * ($object instanceof static|self|parent);</span></pre></div><div id="line2024"><pre><span class="token T_DOC_COMMENT">     *          -----------------------------</span></pre></div><div id="line2025"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2026"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2027"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTInstanceOfExpression</span></pre></div><div id="line2028"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line2029"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2030"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseInstanceOfExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2031"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2032"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume the "instanceof" keyword and strip comments</span></pre></div><div id="line2033"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INSTANCEOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2034"><br/></div><div id="line2035"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionTypeReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2036"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstInstanceOfExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2037"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">false</span></pre></div><div id="line2038"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2039"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2040"><br/></div><div id="line2041"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2042"><pre><span class="token T_DOC_COMMENT">     * Parses an isset-expression node.</span></pre></div><div id="line2043"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2044"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2045"><pre><span class="token T_DOC_COMMENT">     * //  -----------</span></pre></div><div id="line2046"><pre><span class="token T_DOC_COMMENT">     * if (isset($foo)) {</span></pre></div><div id="line2047"><pre><span class="token T_DOC_COMMENT">     * //  -----------</span></pre></div><div id="line2048"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line2049"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2050"><pre><span class="token T_DOC_COMMENT">     * //  -----------------------</span></pre></div><div id="line2051"><pre><span class="token T_DOC_COMMENT">     * if (isset($foo, $bar, $baz)) {</span></pre></div><div id="line2052"><pre><span class="token T_DOC_COMMENT">     * //  -----------------------</span></pre></div><div id="line2053"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line2054"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2055"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2056"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTIssetExpression</span></pre></div><div id="line2057"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line2058"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2059"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIssetExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2060"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2061"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$startToken</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ISSET</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2062"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2063"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2064"><br/></div><div id="line2065"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIssetExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2066"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2067"><br/></div><div id="line2068"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stopToken</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2069"><br/></div><div id="line2070"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2071"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$startToken</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2072"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stopToken</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2073"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$startToken</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2074"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stopToken</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2075"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2076"><br/></div><div id="line2077"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2078"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2079"><br/></div><div id="line2080"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2081"><pre><span class="token T_DOC_COMMENT">     * This method parses a type identifier as it is used in expression nodes</span></pre></div><div id="line2082"><pre><span class="token T_DOC_COMMENT">     * like {@link \PDepend\Source\AST\ASTInstanceOfExpression} or an object</span></pre></div><div id="line2083"><pre><span class="token T_DOC_COMMENT">     * allocation node like {@link \PDepend\Source\AST\ASTAllocationExpression}.</span></pre></div><div id="line2084"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2085"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $expr</span></pre></div><div id="line2086"><pre><span class="token T_DOC_COMMENT">     * @param boolean $classRef</span></pre></div><div id="line2087"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2088"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2089"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseExpressionTypeReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$classRef</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2090"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2091"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Peek next token and look for a static type identifier</span></pre></div><div id="line2092"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2093"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2094"><br/></div><div id="line2095"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2096"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2097"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2098"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">// TODO: Parse variable or Member Primary Prefix + Property Postfix</span></pre></div><div id="line2099"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrFunctionPostfixOrMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2100"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2101"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2102"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSelfReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2103"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2104"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2105"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParentReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2106"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2107"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2108"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2109"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2110"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2111"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classRef</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2112"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2113"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2114"><br/></div><div id="line2115"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2116"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2117"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ref</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2118"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2119"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2120"><br/></div><div id="line2121"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2122"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2123"><br/></div><div id="line2124"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2125"><pre><span class="token T_DOC_COMMENT">     * This method parses a conditional-expression.</span></pre></div><div id="line2126"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2127"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2128"><pre><span class="token T_DOC_COMMENT">     *         --------------</span></pre></div><div id="line2129"><pre><span class="token T_DOC_COMMENT">     * $foo = ($bar ? 42 : 23);</span></pre></div><div id="line2130"><pre><span class="token T_DOC_COMMENT">     *         --------------</span></pre></div><div id="line2131"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2132"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2133"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTConditionalExpression</span></pre></div><div id="line2134"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2135"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2136"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConditionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2137"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2138"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2139"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_QUESTION_MARK</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2140"><br/></div><div id="line2141"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConditionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2142"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2143"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2144"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2145"><br/></div><div id="line2146"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2147"><br/></div><div id="line2148"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2149"><br/></div><div id="line2150"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2151"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2152"><br/></div><div id="line2153"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2154"><pre><span class="token T_DOC_COMMENT">     * This method parses a shift left expression node.</span></pre></div><div id="line2155"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2156"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTShiftLeftExpression</span></pre></div><div id="line2157"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.1</span></pre></div><div id="line2158"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2159"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseShiftLeftExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2160"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2161"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2162"><br/></div><div id="line2163"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstShiftLeftExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2164"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2165"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2166"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2167"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2168"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2169"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2170"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2171"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2172"><br/></div><div id="line2173"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2174"><pre><span class="token T_DOC_COMMENT">     * This method parses a shift right expression node.</span></pre></div><div id="line2175"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2176"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTShiftRightExpression</span></pre></div><div id="line2177"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.1</span></pre></div><div id="line2178"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2179"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseShiftRightExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2180"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2181"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2182"><br/></div><div id="line2183"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstShiftRightExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2184"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2185"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2186"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2187"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2188"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2189"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2190"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2191"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2192"><br/></div><div id="line2193"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2194"><pre><span class="token T_DOC_COMMENT">     * This method parses a boolean and-expression.</span></pre></div><div id="line2195"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2196"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTBooleanAndExpression</span></pre></div><div id="line2197"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2198"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2199"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseBooleanAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2200"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2201"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BOOLEAN_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2202"><br/></div><div id="line2203"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstBooleanAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2204"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2205"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2206"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2207"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2208"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2209"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2210"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2211"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2212"><br/></div><div id="line2213"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2214"><pre><span class="token T_DOC_COMMENT">     * This method parses a boolean or-expression.</span></pre></div><div id="line2215"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2216"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTBooleanOrExpression</span></pre></div><div id="line2217"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2218"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2219"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseBooleanOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2220"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2221"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BOOLEAN_OR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2222"><br/></div><div id="line2223"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstBooleanOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2224"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2225"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2226"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2227"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2228"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2229"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2230"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2231"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2232"><br/></div><div id="line2233"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2234"><pre><span class="token T_DOC_COMMENT">     * This method parses a logical &lt;b&gt;and&lt;/b&gt;-expression.</span></pre></div><div id="line2235"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2236"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLogicalAndExpression</span></pre></div><div id="line2237"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2238"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2239"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLogicalAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2240"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2241"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2242"><br/></div><div id="line2243"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLogicalAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2244"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2245"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2246"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2247"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2248"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2249"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2250"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2251"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2252"><br/></div><div id="line2253"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2254"><pre><span class="token T_DOC_COMMENT">     * This method parses a logical &lt;b&gt;or&lt;/b&gt;-expression.</span></pre></div><div id="line2255"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2256"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLogicalOrExpression</span></pre></div><div id="line2257"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2258"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2259"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLogicalOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2260"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2261"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_OR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2262"><br/></div><div id="line2263"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLogicalOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2264"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2265"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2266"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2267"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2268"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2269"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2270"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2271"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2272"><br/></div><div id="line2273"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2274"><pre><span class="token T_DOC_COMMENT">     * This method parses a logical &lt;b&gt;xor&lt;/b&gt;-expression.</span></pre></div><div id="line2275"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2276"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLogicalXorExpression</span></pre></div><div id="line2277"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.8</span></pre></div><div id="line2278"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2279"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLogicalXorExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2280"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2281"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_XOR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2282"><br/></div><div id="line2283"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLogicalXorExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2284"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2285"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2286"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2287"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2288"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2289"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2290"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2291"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2292"><br/></div><div id="line2293"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2294"><pre><span class="token T_DOC_COMMENT">     * Parses a class or interface reference node.</span></pre></div><div id="line2295"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2296"><pre><span class="token T_DOC_COMMENT">     * @param boolean $classReference Force a class reference.</span></pre></div><div id="line2297"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2298"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClassOrInterfaceReference</span></pre></div><div id="line2299"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line2300"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2301"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classReference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2302"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2304"><br/></div><div id="line2305"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classReference</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2306"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2307"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2308"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2309"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2310"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2311"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2312"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2313"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2314"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2315"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2316"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2317"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2318"><br/></div><div id="line2319"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2320"><pre><span class="token T_DOC_COMMENT">     * This method parses a brace expression and adds all parsed node instances</span></pre></div><div id="line2321"><pre><span class="token T_DOC_COMMENT">     * to the given {@link \PDepend\Source\AST\ASTNode} object. Finally it returns</span></pre></div><div id="line2322"><pre><span class="token T_DOC_COMMENT">     * the prepared input node.</span></pre></div><div id="line2323"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2324"><pre><span class="token T_DOC_COMMENT">     * A brace expression can be a compound:</span></pre></div><div id="line2325"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2326"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2327"><pre><span class="token T_DOC_COMMENT">     * $this-&gt;{$foo ? 'foo' : 'bar'}();</span></pre></div><div id="line2328"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2329"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2330"><pre><span class="token T_DOC_COMMENT">     * or a parameter list:</span></pre></div><div id="line2331"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2332"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2333"><pre><span class="token T_DOC_COMMENT">     * $this-&gt;foo($bar, $baz);</span></pre></div><div id="line2334"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2335"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2336"><pre><span class="token T_DOC_COMMENT">     * or an array index:</span></pre></div><div id="line2337"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2338"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line2339"><pre><span class="token T_DOC_COMMENT">     * $foo[$bar];</span></pre></div><div id="line2340"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line2341"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2342"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode     $node</span></pre></div><div id="line2343"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $start</span></pre></div><div id="line2344"><pre><span class="token T_DOC_COMMENT">     * @param  integer                         $closeToken</span></pre></div><div id="line2345"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2346"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\TokenStreamEndException</span></pre></div><div id="line2347"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line2348"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2349"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2350"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2351"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$start</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2352"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$closeToken</span></pre></div><div id="line2353"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2354"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_object</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2355"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2356"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2357"><br/></div><div id="line2358"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$end</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closeToken</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2359"><br/></div><div id="line2360"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2361"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$start</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2362"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$end</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2363"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$start</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2364"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$end</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2365"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2366"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2367"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2368"><br/></div><div id="line2369"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2370"><pre><span class="token T_DOC_COMMENT">     * Parses the body of the given statement instance and adds all parsed nodes</span></pre></div><div id="line2371"><pre><span class="token T_DOC_COMMENT">     * to that statement.</span></pre></div><div id="line2372"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2373"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTStatement $stmt The owning statement.</span></pre></div><div id="line2374"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2375"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTStatement</span></pre></div><div id="line2376"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line2377"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2378"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2379"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2380"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2381"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2382"><br/></div><div id="line2383"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2384"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2385"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2386"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAlternativeScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2387"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2388"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2389"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2390"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2391"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2392"><br/></div><div id="line2393"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2394"><pre><span class="token T_DOC_COMMENT">     * Parse a scope enclosed by curly braces.</span></pre></div><div id="line2395"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2396"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTScope</span></pre></div><div id="line2397"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line2398"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2399"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2400"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2401"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2402"><br/></div><div id="line2403"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2404"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2405"><br/></div><div id="line2406"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scope</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseScopeStatements</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2407"><br/></div><div id="line2408"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2409"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scope</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2410"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2411"><br/></div><div id="line2412"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2413"><pre><span class="token T_DOC_COMMENT">     * Parses the scope of a statement that is surrounded with PHP's alternative</span></pre></div><div id="line2414"><pre><span class="token T_DOC_COMMENT">     * syntax for statements.</span></pre></div><div id="line2415"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2416"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTScopeStatement</span></pre></div><div id="line2417"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2418"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2419"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseAlternativeScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2420"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2421"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2422"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2423"><br/></div><div id="line2424"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scope</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseScopeStatements</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2425"><br/></div><div id="line2426"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2427"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scope</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2428"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2429"><br/></div><div id="line2430"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2431"><pre><span class="token T_DOC_COMMENT">     * Parses all statements that exist in a scope an adds them to a scope</span></pre></div><div id="line2432"><pre><span class="token T_DOC_COMMENT">     * instance.</span></pre></div><div id="line2433"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2434"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTScopeStatement</span></pre></div><div id="line2435"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2436"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2437"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseScopeStatements</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2438"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2439"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scope</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstScopeStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2440"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2441"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2442"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$scope</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2443"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2444"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2445"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$scope</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2446"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2447"><br/></div><div id="line2448"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2449"><pre><span class="token T_DOC_COMMENT">     * Parses the termination of a scope statement that uses PHP's laternative</span></pre></div><div id="line2450"><pre><span class="token T_DOC_COMMENT">     * syntax format.</span></pre></div><div id="line2451"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2452"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line2453"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2454"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2455"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2456"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2457"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2458"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2459"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2460"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2461"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2462"><br/></div><div id="line2463"><br/></div><div id="line2464"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2465"><pre><span class="token T_DOC_COMMENT">     * This method returns &lt;b&gt;true&lt;/b&gt; when the given token identifier represents</span></pre></div><div id="line2466"><pre><span class="token T_DOC_COMMENT">     * the end token of a alternative scope termination symbol. Otherwise this</span></pre></div><div id="line2467"><pre><span class="token T_DOC_COMMENT">     * method will return &lt;b&gt;false&lt;/b&gt;.</span></pre></div><div id="line2468"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2469"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType The token type identifier.</span></pre></div><div id="line2470"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2471"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line2472"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2473"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2474"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2475"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2476"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">in_array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2477"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2478"><pre><span class="token T_WHITESPACE">            </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2479"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDDECLARE</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2480"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDFOR</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2481"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDFOREACH</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2482"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDIF</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2483"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDSWITCH</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2484"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDWHILE</span></pre></div><div id="line2485"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2486"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2487"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2488"><br/></div><div id="line2489"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2490"><pre><span class="token T_DOC_COMMENT">     * Parses a series of tokens that represent an alternative scope termination.</span></pre></div><div id="line2491"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2492"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType The token type identifier.</span></pre></div><div id="line2493"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2494"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line2495"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2496"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2497"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2498"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2499"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2500"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2501"><br/></div><div id="line2502"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2503"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2504"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2505"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2506"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2507"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2508"><br/></div><div id="line2509"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2510"><pre><span class="token T_DOC_COMMENT">     * This method parses multiple expressions and adds them as children to the</span></pre></div><div id="line2511"><pre><span class="token T_DOC_COMMENT">     * given &lt;b&gt;$exprList&lt;/b&gt; node.</span></pre></div><div id="line2512"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2513"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $exprList Parent that accepts multiple expr.</span></pre></div><div id="line2514"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2515"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2516"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line2517"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2518"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseExpressionList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$exprList</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2519"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2520"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2521"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2522"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$exprList</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2523"><br/></div><div id="line2524"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2525"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2526"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2527"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2528"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2529"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2530"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2531"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2532"><br/></div><div id="line2533"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$exprList</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2534"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2535"><br/></div><div id="line2536"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2537"><pre><span class="token T_DOC_COMMENT">     * This method parses an expression node and returns it. When no expression</span></pre></div><div id="line2538"><pre><span class="token T_DOC_COMMENT">     * was found this method will throw an InvalidStateException.</span></pre></div><div id="line2539"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2540"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2541"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line2542"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.1</span></pre></div><div id="line2543"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2544"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2545"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2546"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2547"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2548"><br/></div><div id="line2549"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2550"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2551"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2552"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Mandatory expression expected.'</span></pre></div><div id="line2553"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2554"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2555"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2556"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2557"><br/></div><div id="line2558"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2559"><pre><span class="token T_DOC_COMMENT">     * This method optionally parses an expression node and returns it. When no</span></pre></div><div id="line2560"><pre><span class="token T_DOC_COMMENT">     * expression was found this method will return &lt;b&gt;null&lt;/b&gt;.</span></pre></div><div id="line2561"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2562"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2563"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line2564"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line2565"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2566"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2567"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2568"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expressions</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2569"><br/></div><div id="line2570"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2571"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2572"><br/></div><div id="line2573"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2574"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2575"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2576"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BREAK</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2577"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2578"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2579"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONTINUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2580"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2581"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DECLARE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2582"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2583"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2584"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ECHO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2585"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_END_HEREDOC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2586"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDFOREACH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2587"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2588"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOREACH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2589"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GLOBAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2590"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GOTO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2591"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2592"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2593"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_RETURN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2594"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2595"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2596"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SWITCH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2597"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_THROW</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2598"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRY</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2599"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_UNSET</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2600"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_WHILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2601"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2602"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2603"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2604"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2605"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2606"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2607"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2608"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2609"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2610"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2611"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2612"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isArrayStartDelimiter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2613"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">doParseArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2614"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2615"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2616"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2617"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2618"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2619"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2620"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKTICK</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2621"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_QUOTE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2622"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONSTANT_ENCAPSED_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2623"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLiteralOrString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2624"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2625"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NEW</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2626"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAllocationExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2627"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2628"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EVAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2629"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseEvalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2630"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2631"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLONE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2632"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCloneExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2633"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2634"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INSTANCEOF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2635"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseInstanceOfExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2636"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2637"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ISSET</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2638"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIssetExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2639"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2640"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LIST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2641"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2642"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2643"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_QUESTION_MARK</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2644"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConditionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2645"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2646"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BOOLEAN_AND</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2647"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBooleanAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2648"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2649"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BOOLEAN_OR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2650"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBooleanOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2651"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2652"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_AND</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2653"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLogicalAndExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2654"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2655"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_OR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2656"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLogicalOrExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2657"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2658"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LOGICAL_XOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2659"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLogicalXorExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2660"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2661"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2662"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2663"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2664"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2665"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpressionOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2666"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2667"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXIT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2668"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExitExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2669"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2670"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_START_HEREDOC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2671"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseHeredoc</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2672"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2673"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2674"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2675"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2676"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2677"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span></pre></div><div id="line2678"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2679"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2680"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INCLUDE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2681"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIncludeExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2682"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2683"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INCLUDE_ONCE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2684"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIncludeOnceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2685"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2686"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_REQUIRE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2687"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2688"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2689"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_REQUIRE_ONCE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2690"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRequireOnceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2691"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2692"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2693"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseDecrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2694"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2695"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2696"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIncrementExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2697"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2698"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2699"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseShiftLeftExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2700"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2701"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2702"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseShiftRightExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2703"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2704"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DIR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2705"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2706"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LINE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2707"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2708"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNC_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2709"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2710"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_METHOD_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2711"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2712"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2713"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INT_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2714"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BOOL_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2715"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ARRAY_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2716"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_UNSET_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2717"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OBJECT_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2718"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2719"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING_CAST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2720"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCastExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2721"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2722"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2723"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OR_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2724"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SL_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2725"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SR_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2726"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AND_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2727"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DIV_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2728"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MOD_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2729"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MUL_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2730"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_XOR_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2731"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PLUS_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2732"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MINUS_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2733"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONCAT_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2734"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAssignmentExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2735"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2736"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2737"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2738"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">// TODO: Handle comments here</span></pre></div><div id="line2739"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2740"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2741"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2742"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2743"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PRINT</span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// TODO: Implement print expression</span></pre></div><div id="line2744"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2745"><br/></div><div id="line2746"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPrintExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2747"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2748"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2749"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2750"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2751"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2752"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2753"><br/></div><div id="line2754"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2755"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2756"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING_VARNAME</span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// TODO: Implement this</span></pre></div><div id="line2757"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PLUS</span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// TODO: Make this a arithmetic expression</span></pre></div><div id="line2758"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MINUS</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2759"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MUL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2760"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DIV</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2761"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MOD</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2762"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_EQUAL</span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// TODO: Implement compare expressions</span></pre></div><div id="line2763"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_NOT_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2764"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_IDENTICAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2765"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_NOT_IDENTICAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2766"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_GREATER_OR_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2767"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IS_SMALLER_OR_EQUAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2768"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ANGLE_BRACKET_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2769"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ANGLE_BRACKET_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2770"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EMPTY</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2771"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONCAT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2772"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_OR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2773"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2774"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_NOT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2775"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_XOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2776"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2777"><br/></div><div id="line2778"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2779"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2780"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2781"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2782"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2783"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2784"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2785"><br/></div><div id="line2786"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2787"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2788"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2789"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EXCLAMATION_MARK</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2790"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2791"><br/></div><div id="line2792"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstUnaryExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2793"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2794"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2795"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2796"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2797"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line2798"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2799"><br/></div><div id="line2800"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2801"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2802"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_YIELD</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2803"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseYield</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2804"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2805"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2806"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpressionForVersion</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2807"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2808"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2809"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2810"><br/></div><div id="line2811"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expressions</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reduce</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2812"><br/></div><div id="line2813"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$count</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2814"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$count</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2815"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2816"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$count</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2817"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2818"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2819"><br/></div><div id="line2820"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2821"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2822"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2823"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2824"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2825"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2826"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$count</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2827"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2828"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$count</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2829"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2830"><br/></div><div id="line2831"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2832"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2833"><br/></div><div id="line2834"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2835"><pre><span class="token T_DOC_COMMENT">     * This method will be called when the base parser cannot handle an expression</span></pre></div><div id="line2836"><pre><span class="token T_DOC_COMMENT">     * in the base version. In this method you can implement version specific</span></pre></div><div id="line2837"><pre><span class="token T_DOC_COMMENT">     * expressions.</span></pre></div><div id="line2838"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2839"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line2840"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line2841"><pre><span class="token T_DOC_COMMENT">     * @since 2.2</span></pre></div><div id="line2842"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2843"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalExpressionForVersion</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2844"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2845"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2846"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2847"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2848"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2849"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2850"><br/></div><div id="line2851"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2852"><pre><span class="token T_DOC_COMMENT">     * Applies all reduce rules against the given expression list.</span></pre></div><div id="line2853"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2854"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTExpression[] $expressions Unprepared input</span></pre></div><div id="line2855"><pre><span class="token T_DOC_COMMENT">     *        array with parsed expression nodes found in the source tree.</span></pre></div><div id="line2856"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2857"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression[]</span></pre></div><div id="line2858"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2859"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2860"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">reduce</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2861"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2862"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reduceUnaryExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2863"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2864"><br/></div><div id="line2865"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2866"><pre><span class="token T_DOC_COMMENT">     * Reduces all unary-expressions in the given expression list.</span></pre></div><div id="line2867"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2868"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTExpression[] $expressions Unprepared input</span></pre></div><div id="line2869"><pre><span class="token T_DOC_COMMENT">     *        array with parsed expression nodes found in the source tree.</span></pre></div><div id="line2870"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2871"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression[]</span></pre></div><div id="line2872"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line2873"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2874"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">reduceUnaryExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2875"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2876"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOR">for</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_GREATER_OR_EQUAL">&gt;=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_DEC">--</span><span class="token T_VARIABLE">$i</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2877"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$i</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2878"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTUnaryExpression</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2879"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2880"><br/></div><div id="line2881"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2882"><br/></div><div id="line2883"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2884"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2885"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2886"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2887"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$child</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2888"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2889"><br/></div><div id="line2890"><pre><span class="token T_WHITESPACE">                </span><span class="token T_UNSET">unset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2891"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2892"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2893"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">array_values</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expressions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2894"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2895"><br/></div><div id="line2896"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2897"><pre><span class="token T_DOC_COMMENT">     * This method parses a switch statement.</span></pre></div><div id="line2898"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2899"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSwitchStatement</span></pre></div><div id="line2900"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line2901"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2902"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSwitchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2903"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2904"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2905"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SWITCH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2906"><br/></div><div id="line2907"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstSwitchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2908"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$switch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2909"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$switch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2910"><br/></div><div id="line2911"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$switch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2912"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2913"><br/></div><div id="line2914"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2915"><pre><span class="token T_DOC_COMMENT">     * Parses the body of a switch statement.</span></pre></div><div id="line2916"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2917"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTSwitchStatement $switch The parent switch stmt.</span></pre></div><div id="line2918"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2919"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSwitchStatement</span></pre></div><div id="line2920"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line2921"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2922"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSwitchStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTSwitchStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$switch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2923"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2924"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2925"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2926"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2927"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2928"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2929"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2930"><br/></div><div id="line2931"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2932"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2933"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2934"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2935"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2936"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDSWITCH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2937"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseAlternativeScopeTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDSWITCH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2938"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$switch</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2939"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2940"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2941"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$switch</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2942"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CASE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2943"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$switch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchLabel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2944"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2945"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEFAULT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2946"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$switch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchLabelDefault</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2947"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2948"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2949"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2950"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2951"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2952"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line2953"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2954"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2955"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2956"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line2957"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line2958"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2959"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2960"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2961"><br/></div><div id="line2962"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2963"><pre><span class="token T_DOC_COMMENT">     * This method parses a case label of a switch statement.</span></pre></div><div id="line2964"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2965"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSwitchLabel</span></pre></div><div id="line2966"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line2967"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2968"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSwitchLabel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2969"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2970"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2971"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CASE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2972"><br/></div><div id="line2973"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$label</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstSwitchLabel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2974"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$label</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2975"><br/></div><div id="line2976"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2977"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2978"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2979"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2980"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2981"><br/></div><div id="line2982"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchLabelBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2983"><br/></div><div id="line2984"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2985"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line2986"><br/></div><div id="line2987"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line2988"><pre><span class="token T_DOC_COMMENT">     * This method parses the default label of a switch statement.</span></pre></div><div id="line2989"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line2990"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSwitchLabel</span></pre></div><div id="line2991"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line2992"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line2993"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSwitchLabelDefault</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line2994"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line2995"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2996"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEFAULT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2997"><br/></div><div id="line2998"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line2999"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3000"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3001"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3002"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3003"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3004"><br/></div><div id="line3005"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$label</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstSwitchLabel</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3006"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$label</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setDefault</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3007"><br/></div><div id="line3008"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchLabelBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3009"><br/></div><div id="line3010"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3011"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3012"><br/></div><div id="line3013"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3014"><pre><span class="token T_DOC_COMMENT">     * Parses the body of an switch label node.</span></pre></div><div id="line3015"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3016"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTSwitchLabel $label The context switch label.</span></pre></div><div id="line3017"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSwitchLabel</span></pre></div><div id="line3018"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3019"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSwitchLabelBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTSwitchLabel</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3020"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3021"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$curlyBraceCount</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3022"><br/></div><div id="line3023"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3024"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3025"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3026"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3027"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3028"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_INC">++</span><span class="token T_VARIABLE">$curlyBraceCount</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3029"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3030"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3031"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$curlyBraceCount</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3032"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3033"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3034"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3035"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_DEC">--</span><span class="token T_VARIABLE">$curlyBraceCount</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3036"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3037"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3038"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3039"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3040"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CASE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3041"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DEFAULT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3042"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDSWITCH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3043"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$label</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3044"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3045"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$statement</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3046"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$statement</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3047"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3048"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$statement</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3049"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$label</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$statement</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3050"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3051"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// TODO: Change the &lt;else if&gt; into and &lt;else&gt; when the ast</span></pre></div><div id="line3052"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">//       implementation is finished.</span></pre></div><div id="line3053"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3054"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3055"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3056"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3057"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3058"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3059"><br/></div><div id="line3060"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3061"><pre><span class="token T_DOC_COMMENT">     * Parses the termination token for a statement. This termination token can</span></pre></div><div id="line3062"><pre><span class="token T_DOC_COMMENT">     * be a semicolon or a closing php tag.</span></pre></div><div id="line3063"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3064"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line3065"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3066"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3067"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3068"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3069"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3070"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3071"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3072"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3073"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3074"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3075"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3076"><br/></div><div id="line3077"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3078"><pre><span class="token T_DOC_COMMENT">     * This method parses a try-statement + associated catch-statements.</span></pre></div><div id="line3079"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3080"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTryStatement</span></pre></div><div id="line3081"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3082"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3083"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTryStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3084"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3085"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3086"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRY</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3087"><br/></div><div id="line3088"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTryStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3089"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3090"><br/></div><div id="line3091"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3092"><br/></div><div id="line3093"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">in_array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CATCH</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINALLY</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3094"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3095"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line3096"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3097"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3098"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3099"><br/></div><div id="line3100"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CATCH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3101"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCatchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3102"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3103"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3104"><br/></div><div id="line3105"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINALLY</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3106"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFinallyStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3107"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3108"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3109"><br/></div><div id="line3110"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3111"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3112"><br/></div><div id="line3113"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3114"><pre><span class="token T_DOC_COMMENT">     * This method parses a throw-statement.</span></pre></div><div id="line3115"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3116"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTThrowStatement</span></pre></div><div id="line3117"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3118"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3119"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseThrowStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3120"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3121"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3122"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_THROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3123"><br/></div><div id="line3124"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstThrowStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3125"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3126"><br/></div><div id="line3127"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3128"><br/></div><div id="line3129"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3130"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3131"><br/></div><div id="line3132"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3133"><pre><span class="token T_DOC_COMMENT">     * This method parses a goto-statement.</span></pre></div><div id="line3134"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3135"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTGotoStatement</span></pre></div><div id="line3136"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3137"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3138"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseGotoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3139"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3140"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3141"><br/></div><div id="line3142"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GOTO</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3143"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3144"><br/></div><div id="line3145"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3146"><br/></div><div id="line3147"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3148"><br/></div><div id="line3149"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstGotoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3150"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3151"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3152"><br/></div><div id="line3153"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3154"><pre><span class="token T_DOC_COMMENT">     * This method parses a label-statement.</span></pre></div><div id="line3155"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3156"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLabelStatement</span></pre></div><div id="line3157"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3158"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3159"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLabelStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3160"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3161"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3162"><br/></div><div id="line3163"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3164"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3165"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3166"><br/></div><div id="line3167"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3168"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLabelStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3169"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3170"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3171"><br/></div><div id="line3172"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3173"><pre><span class="token T_DOC_COMMENT">     * This method parses a global-statement.</span></pre></div><div id="line3174"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3175"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTGlobalStatement</span></pre></div><div id="line3176"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3177"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3178"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseGlobalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3179"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3180"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3181"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GLOBAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3182"><br/></div><div id="line3183"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstGlobalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3184"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3185"><br/></div><div id="line3186"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3187"><br/></div><div id="line3188"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3189"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3190"><br/></div><div id="line3191"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3192"><pre><span class="token T_DOC_COMMENT">     * This method parses a unset-statement.</span></pre></div><div id="line3193"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3194"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTUnsetStatement</span></pre></div><div id="line3195"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3196"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3197"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseUnsetStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3198"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3199"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3200"><br/></div><div id="line3201"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_UNSET</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3202"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3203"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3204"><br/></div><div id="line3205"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstUnsetStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3206"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3207"><br/></div><div id="line3208"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3209"><br/></div><div id="line3210"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3211"><br/></div><div id="line3212"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3213"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3214"><br/></div><div id="line3215"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3216"><pre><span class="token T_DOC_COMMENT">     * This method parses a catch-statement.</span></pre></div><div id="line3217"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3218"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTCatchStatement</span></pre></div><div id="line3219"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3220"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3221"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCatchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3222"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3223"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3224"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3225"><br/></div><div id="line3226"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CATCH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3227"><br/></div><div id="line3228"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$catch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCatchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3229"><br/></div><div id="line3230"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3231"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3232"><br/></div><div id="line3233"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$catch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3234"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3235"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3236"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3237"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3238"><br/></div><div id="line3239"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3240"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$catch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3241"><br/></div><div id="line3242"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3243"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3244"><br/></div><div id="line3245"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$catch</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3246"><br/></div><div id="line3247"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$catch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3248"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3249"><br/></div><div id="line3250"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3251"><pre><span class="token T_DOC_COMMENT">     * This method parses a finally-statement.</span></pre></div><div id="line3252"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3253"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFinallyStatement</span></pre></div><div id="line3254"><pre><span class="token T_DOC_COMMENT">     * @since  2.0.0</span></pre></div><div id="line3255"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3256"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFinallyStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3257"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3258"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3259"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3260"><br/></div><div id="line3261"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINALLY</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3262"><br/></div><div id="line3263"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$finally</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstFinallyStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3264"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$finally</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3265"><br/></div><div id="line3266"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$finally</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3267"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3268"><br/></div><div id="line3269"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3270"><pre><span class="token T_DOC_COMMENT">     * This method parses a single if-statement node.</span></pre></div><div id="line3271"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3272"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTIfStatement</span></pre></div><div id="line3273"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3274"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3275"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3276"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3277"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3278"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3279"><br/></div><div id="line3280"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3281"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3282"><br/></div><div id="line3283"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3284"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalElseOrElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3285"><br/></div><div id="line3286"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3287"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3288"><br/></div><div id="line3289"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3290"><pre><span class="token T_DOC_COMMENT">     * This method parses a single elseif-statement node.</span></pre></div><div id="line3291"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3292"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTElseIfStatement</span></pre></div><div id="line3293"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3294"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3295"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3296"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3297"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3298"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSEIF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3299"><br/></div><div id="line3300"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3301"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3302"><br/></div><div id="line3303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3304"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalElseOrElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3305"><br/></div><div id="line3306"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3307"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3308"><br/></div><div id="line3309"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3310"><pre><span class="token T_DOC_COMMENT">     * This method parses an optional else-, else+if- or elseif-statement.</span></pre></div><div id="line3311"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3312"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTStatement $stmt The owning if/elseif statement.</span></pre></div><div id="line3313"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3314"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTStatement</span></pre></div><div id="line3315"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3316"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3317"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalElseOrElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3318"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3319"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3320"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3321"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3322"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3323"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3324"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3325"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3326"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3327"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3328"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3329"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3330"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSEIF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3331"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseElseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3332"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3333"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3334"><br/></div><div id="line3335"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3336"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3337"><br/></div><div id="line3338"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3339"><pre><span class="token T_DOC_COMMENT">     * This method parses a single for-statement node.</span></pre></div><div id="line3340"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3341"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTForStatement</span></pre></div><div id="line3342"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3343"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3344"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseForStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3345"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3346"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3347"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3348"><br/></div><div id="line3349"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3350"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3351"><br/></div><div id="line3352"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstForStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3353"><br/></div><div id="line3354"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$init</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseForInit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3355"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$init</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3356"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3357"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3358"><br/></div><div id="line3359"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseForExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3360"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3361"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3362"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3363"><br/></div><div id="line3364"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$update</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseForUpdate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3365"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$update</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3366"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3367"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3368"><br/></div><div id="line3369"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3370"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3371"><br/></div><div id="line3372"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3373"><pre><span class="token T_DOC_COMMENT">     * Parses the init part of a for-statement.</span></pre></div><div id="line3374"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3375"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3376"><pre><span class="token T_DOC_COMMENT">     *      ------------------------</span></pre></div><div id="line3377"><pre><span class="token T_DOC_COMMENT">     * for ($x = 0, $y = 23, $z = 42; $x &lt; $y; ++$x) {}</span></pre></div><div id="line3378"><pre><span class="token T_DOC_COMMENT">     *      ------------------------</span></pre></div><div id="line3379"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3380"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3381"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTForInit</span></pre></div><div id="line3382"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3383"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3384"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseForInit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3385"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3386"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3387"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3388"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3389"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3390"><br/></div><div id="line3391"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3392"><br/></div><div id="line3393"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$init</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstForInit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3394"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$init</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3395"><br/></div><div id="line3396"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$init</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3397"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3398"><br/></div><div id="line3399"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3400"><pre><span class="token T_DOC_COMMENT">     * Parses the expression part of a for-statement.</span></pre></div><div id="line3401"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3402"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression</span></pre></div><div id="line3403"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3404"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3405"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseForExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3406"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3407"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3408"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3409"><br/></div><div id="line3410"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3411"><pre><span class="token T_DOC_COMMENT">     * Parses the update part of a for-statement.</span></pre></div><div id="line3412"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3413"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3414"><pre><span class="token T_DOC_COMMENT">     *                                        -------------------------------</span></pre></div><div id="line3415"><pre><span class="token T_DOC_COMMENT">     * for ($x = 0, $y = 23, $z = 42; $x &lt; $y; ++$x, $y = $x + 1, $z = $x + 2) {}</span></pre></div><div id="line3416"><pre><span class="token T_DOC_COMMENT">     *                                        -------------------------------</span></pre></div><div id="line3417"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3418"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3419"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTForUpdate</span></pre></div><div id="line3420"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3421"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3422"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseForUpdate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3423"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3424"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3425"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3426"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3427"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3428"><br/></div><div id="line3429"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3430"><br/></div><div id="line3431"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$update</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstForUpdate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3432"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$update</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3433"><br/></div><div id="line3434"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$update</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3435"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3436"><br/></div><div id="line3437"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3438"><pre><span class="token T_DOC_COMMENT">     * This method parses a single foreach-statement node.</span></pre></div><div id="line3439"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3440"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTForeachStatement</span></pre></div><div id="line3441"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3442"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3443"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseForeachStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3444"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3445"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3446"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOREACH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3447"><br/></div><div id="line3448"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstForeachStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3449"><br/></div><div id="line3450"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3451"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3452"><br/></div><div id="line3453"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3454"><br/></div><div id="line3455"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3456"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3457"><br/></div><div id="line3458"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3459"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrMemberByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3460"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3461"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LIST</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3462"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3463"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3464"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3465"><br/></div><div id="line3466"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3467"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3468"><br/></div><div id="line3469"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LIST</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3470"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseListExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3471"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3472"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$foreach</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3473"><pre><span class="token T_WHITESPACE">                            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrMemberOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3474"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3475"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3476"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3477"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3478"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3479"><br/></div><div id="line3480"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3481"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3482"><br/></div><div id="line3483"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3484"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$foreach</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3485"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3486"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3487"><br/></div><div id="line3488"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3489"><pre><span class="token T_DOC_COMMENT">     * This method parses a single while-statement node.</span></pre></div><div id="line3490"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3491"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTWhileStatement</span></pre></div><div id="line3492"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3493"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3494"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3495"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3496"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3497"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_WHILE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3498"><br/></div><div id="line3499"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3500"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3501"><br/></div><div id="line3502"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3503"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3504"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3505"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3506"><br/></div><div id="line3507"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3508"><pre><span class="token T_DOC_COMMENT">     * This method parses a do/while-statement.</span></pre></div><div id="line3509"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3510"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTDoWhileStatement</span></pre></div><div id="line3511"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3512"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3513"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseDoWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3514"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3515"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3516"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DO</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3517"><br/></div><div id="line3518"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstDoWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3519"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3520"><br/></div><div id="line3521"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3522"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_WHILE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3523"><br/></div><div id="line3524"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3525"><br/></div><div id="line3526"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3527"><br/></div><div id="line3528"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3529"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3530"><br/></div><div id="line3531"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3532"><pre><span class="token T_DOC_COMMENT">     * This method parses a declare-statement.</span></pre></div><div id="line3533"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3534"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3535"><pre><span class="token T_DOC_COMMENT">     * -------------------------------</span></pre></div><div id="line3536"><pre><span class="token T_DOC_COMMENT">     * declare(encoding='ISO-8859-1');</span></pre></div><div id="line3537"><pre><span class="token T_DOC_COMMENT">     * -------------------------------</span></pre></div><div id="line3538"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3539"><pre><span class="token T_DOC_COMMENT">     * -------------------</span></pre></div><div id="line3540"><pre><span class="token T_DOC_COMMENT">     * declare(ticks=42) {</span></pre></div><div id="line3541"><pre><span class="token T_DOC_COMMENT">     *     // ...</span></pre></div><div id="line3542"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line3543"><pre><span class="token T_DOC_COMMENT">     * -</span></pre></div><div id="line3544"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3545"><pre><span class="token T_DOC_COMMENT">     * ------------------</span></pre></div><div id="line3546"><pre><span class="token T_DOC_COMMENT">     * declare(ticks=42):</span></pre></div><div id="line3547"><pre><span class="token T_DOC_COMMENT">     *     // ...</span></pre></div><div id="line3548"><pre><span class="token T_DOC_COMMENT">     * enddeclare;</span></pre></div><div id="line3549"><pre><span class="token T_DOC_COMMENT">     * -----------</span></pre></div><div id="line3550"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3551"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3552"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTDeclareStatement</span></pre></div><div id="line3553"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.0</span></pre></div><div id="line3554"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3555"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseDeclareStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3556"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3557"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3558"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DECLARE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3559"><br/></div><div id="line3560"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstDeclareStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3561"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseDeclareList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3562"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementBody</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3563"><br/></div><div id="line3564"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3565"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3566"><br/></div><div id="line3567"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3568"><pre><span class="token T_DOC_COMMENT">     * This method parses a list of declare values. A declare list value always</span></pre></div><div id="line3569"><pre><span class="token T_DOC_COMMENT">     * consists of a string token and a static scalar.</span></pre></div><div id="line3570"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3571"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTDeclareStatement $stmt The declare statement that</span></pre></div><div id="line3572"><pre><span class="token T_DOC_COMMENT">     *        is the owner of this list.</span></pre></div><div id="line3573"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTDeclareStatement</span></pre></div><div id="line3574"><pre><span class="token T_DOC_COMMENT">     * @since 0.10.0</span></pre></div><div id="line3575"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3576"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseDeclareList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTDeclareStatement</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3577"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3578"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3579"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3580"><br/></div><div id="line3581"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3582"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3583"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3584"><br/></div><div id="line3585"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3586"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EQUAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3587"><br/></div><div id="line3588"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3589"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$value</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3590"><br/></div><div id="line3591"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3592"><br/></div><div id="line3593"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3594"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3595"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3596"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONTINUE">continue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3597"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3598"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3599"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3600"><br/></div><div id="line3601"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3602"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3603"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3604"><br/></div><div id="line3605"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3606"><pre><span class="token T_DOC_COMMENT">     * This method parses a single return-statement node.</span></pre></div><div id="line3607"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3608"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTReturnStatement</span></pre></div><div id="line3609"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3610"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3611"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseReturnStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3612"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3613"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3614"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_RETURN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3615"><br/></div><div id="line3616"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstReturnStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3617"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3618"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3619"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3620"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3621"><br/></div><div id="line3622"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3623"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3624"><br/></div><div id="line3625"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3626"><pre><span class="token T_DOC_COMMENT">     * This method parses a break-statement node.</span></pre></div><div id="line3627"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3628"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTBreakStatement</span></pre></div><div id="line3629"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3630"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3631"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseBreakStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3632"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3633"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3634"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BREAK</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3635"><br/></div><div id="line3636"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstBreakStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3637"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3638"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3639"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3640"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3641"><br/></div><div id="line3642"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3643"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3644"><br/></div><div id="line3645"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3646"><pre><span class="token T_DOC_COMMENT">     * This method parses a continue-statement node.</span></pre></div><div id="line3647"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3648"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTContinueStatement</span></pre></div><div id="line3649"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3650"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3651"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseContinueStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3652"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3653"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3654"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONTINUE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3655"><br/></div><div id="line3656"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstContinueStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3657"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3658"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3659"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3660"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3661"><br/></div><div id="line3662"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3663"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3664"><br/></div><div id="line3665"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3666"><pre><span class="token T_DOC_COMMENT">     * This method parses a echo-statement node.</span></pre></div><div id="line3667"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3668"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTEchoStatement</span></pre></div><div id="line3669"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line3670"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3671"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseEchoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3672"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3673"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3674"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ECHO</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3675"><br/></div><div id="line3676"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3677"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstEchoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3678"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3679"><br/></div><div id="line3680"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3681"><br/></div><div id="line3682"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3683"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3684"><br/></div><div id="line3685"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3686"><pre><span class="token T_DOC_COMMENT">     * Parses a simple parenthesis expression or a direct object access, which</span></pre></div><div id="line3687"><pre><span class="token T_DOC_COMMENT">     * was introduced with PHP 5.4.0:</span></pre></div><div id="line3688"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3689"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3690"><pre><span class="token T_DOC_COMMENT">     * (new MyClass())-&gt;bar();</span></pre></div><div id="line3691"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3692"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3693"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3694"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line3695"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3696"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseParenthesisExpressionOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3697"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3698"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3699"><br/></div><div id="line3700"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3701"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OBJECT_OPERATOR</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3702"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3703"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3704"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3705"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3706"><br/></div><div id="line3707"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3708"><pre><span class="token T_DOC_COMMENT">     * Parses any expression that is surrounded by an opening and a closing</span></pre></div><div id="line3709"><pre><span class="token T_DOC_COMMENT">     * parenthesis</span></pre></div><div id="line3710"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3711"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTExpression</span></pre></div><div id="line3712"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line3713"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3714"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseParenthesisExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3715"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3716"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3717"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3718"><br/></div><div id="line3719"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3720"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3721"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line3722"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line3723"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span></pre></div><div id="line3724"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3725"><br/></div><div id="line3726"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3727"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3728"><br/></div><div id="line3729"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3730"><pre><span class="token T_DOC_COMMENT">     * This method parses a member primary prefix expression or a function</span></pre></div><div id="line3731"><pre><span class="token T_DOC_COMMENT">     * postfix expression node.</span></pre></div><div id="line3732"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3733"><pre><span class="token T_DOC_COMMENT">     * A member primary prefix can be a method call:</span></pre></div><div id="line3734"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3735"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3736"><pre><span class="token T_DOC_COMMENT">     * $object-&gt;foo();</span></pre></div><div id="line3737"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3738"><pre><span class="token T_DOC_COMMENT">     * clazz::foo();</span></pre></div><div id="line3739"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3740"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3741"><pre><span class="token T_DOC_COMMENT">     * a property access:</span></pre></div><div id="line3742"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3743"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3744"><pre><span class="token T_DOC_COMMENT">     * $object-&gt;foo;</span></pre></div><div id="line3745"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3746"><pre><span class="token T_DOC_COMMENT">     * clazz::$foo;</span></pre></div><div id="line3747"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3748"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3749"><pre><span class="token T_DOC_COMMENT">     * or a class constant access:</span></pre></div><div id="line3750"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3751"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3752"><pre><span class="token T_DOC_COMMENT">     * clazz::FOO;</span></pre></div><div id="line3753"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3754"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3755"><pre><span class="token T_DOC_COMMENT">     * A function postfix represents any kind of function call:</span></pre></div><div id="line3756"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3757"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3758"><pre><span class="token T_DOC_COMMENT">     * $function();</span></pre></div><div id="line3759"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3760"><pre><span class="token T_DOC_COMMENT">     * func();</span></pre></div><div id="line3761"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3762"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3763"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3764"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line3765"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line3766"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3767"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMemberPrefixOrFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3768"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3769"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3770"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3771"><br/></div><div id="line3772"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3773"><br/></div><div id="line3774"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Remove comments</span></pre></div><div id="line3775"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3776"><br/></div><div id="line3777"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Get next token type</span></pre></div><div id="line3778"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3779"><br/></div><div id="line3780"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3781"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3782"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3783"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3784"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3785"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3786"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3787"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3788"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3789"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3790"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3791"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3792"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3793"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3794"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3795"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3796"><br/></div><div id="line3797"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3798"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3799"><br/></div><div id="line3800"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3801"><pre><span class="token T_DOC_COMMENT">     * This method will parse an optional function postfix.</span></pre></div><div id="line3802"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3803"><pre><span class="token T_DOC_COMMENT">     * If the next available token is an opening parenthesis, this method will</span></pre></div><div id="line3804"><pre><span class="token T_DOC_COMMENT">     * wrap the given &lt;b&gt;$node&lt;/b&gt; with a {@link \PDepend\Source\AST\ASTFunctionPostfix}</span></pre></div><div id="line3805"><pre><span class="token T_DOC_COMMENT">     * node.</span></pre></div><div id="line3806"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3807"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The previously parsed node.</span></pre></div><div id="line3808"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3809"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode The original input node or this node</span></pre></div><div id="line3810"><pre><span class="token T_DOC_COMMENT">     *         wrapped with a function postfix instance.</span></pre></div><div id="line3811"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line3812"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3813"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3814"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3815"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3816"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3817"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3818"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3819"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3820"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3821"><br/></div><div id="line3822"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3823"><pre><span class="token T_DOC_COMMENT">     * This method parses a function postfix expression. An object of type</span></pre></div><div id="line3824"><pre><span class="token T_DOC_COMMENT">     * {@link \PDepend\Source\AST\ASTFunctionPostfix} represents any valid php</span></pre></div><div id="line3825"><pre><span class="token T_DOC_COMMENT">     * function call.</span></pre></div><div id="line3826"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3827"><pre><span class="token T_DOC_COMMENT">     * This method will delegate the call to another method that returns a</span></pre></div><div id="line3828"><pre><span class="token T_DOC_COMMENT">     * member primary prefix object when the function postfix expression is</span></pre></div><div id="line3829"><pre><span class="token T_DOC_COMMENT">     * followed by an object operator.</span></pre></div><div id="line3830"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3831"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node This node represents the function</span></pre></div><div id="line3832"><pre><span class="token T_DOC_COMMENT">     *        identifier. An identifier can be a static string, a variable, a</span></pre></div><div id="line3833"><pre><span class="token T_DOC_COMMENT">     *        compound variable or any other valid php function identifier.</span></pre></div><div id="line3834"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3835"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line3836"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line3837"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3838"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3839"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3840"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">extractPostfixImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3841"><br/></div><div id="line3842"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3843"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3844"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$function</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3845"><br/></div><div id="line3846"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3847"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$function</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3848"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3849"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3850"><br/></div><div id="line3851"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3852"><pre><span class="token T_DOC_COMMENT">     * This method parses a PHP version specific identifier for method and</span></pre></div><div id="line3853"><pre><span class="token T_DOC_COMMENT">     * property postfix expressions.</span></pre></div><div id="line3854"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3855"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3856"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line3857"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3858"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePostfixIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3859"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3860"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3861"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3862"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3863"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3864"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3865"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrVariableVariableOrVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3866"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3867"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3868"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3869"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3870"><br/></div><div id="line3871"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3872"><pre><span class="token T_DOC_COMMENT">     * This method parses an optional member primary expression. It will parse</span></pre></div><div id="line3873"><pre><span class="token T_DOC_COMMENT">     * the primary expression when an object operator can be found at the actual</span></pre></div><div id="line3874"><pre><span class="token T_DOC_COMMENT">     * token stream position. Otherwise this method simply returns the input</span></pre></div><div id="line3875"><pre><span class="token T_DOC_COMMENT">     * {@link \PDepend\Source\AST\ASTNode} instance.</span></pre></div><div id="line3876"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3877"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node This node represents primary prefix</span></pre></div><div id="line3878"><pre><span class="token T_DOC_COMMENT">     *        left expression. It will be the first child of the parsed member</span></pre></div><div id="line3879"><pre><span class="token T_DOC_COMMENT">     *        primary expression.</span></pre></div><div id="line3880"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3881"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line3882"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line3883"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3884"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3885"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3886"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3887"><br/></div><div id="line3888"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OBJECT_OPERATOR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3889"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3890"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3891"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3892"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3893"><br/></div><div id="line3894"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3895"><pre><span class="token T_DOC_COMMENT">     * This method parses a dynamic or object bound member primary expression.</span></pre></div><div id="line3896"><pre><span class="token T_DOC_COMMENT">     * A member primary prefix can be a method call:</span></pre></div><div id="line3897"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3898"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3899"><pre><span class="token T_DOC_COMMENT">     * $object-&gt;foo();</span></pre></div><div id="line3900"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3901"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3902"><pre><span class="token T_DOC_COMMENT">     * or a property access:</span></pre></div><div id="line3903"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3904"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3905"><pre><span class="token T_DOC_COMMENT">     * $object-&gt;foo;</span></pre></div><div id="line3906"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3907"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3908"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node The left node in the parsed member</span></pre></div><div id="line3909"><pre><span class="token T_DOC_COMMENT">     *        primary expression.</span></pre></div><div id="line3910"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTMemberPrimaryPrefix</span></pre></div><div id="line3911"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line3912"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line3913"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3914"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3915"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3916"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume double colon and optional comments</span></pre></div><div id="line3917"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OBJECT_OPERATOR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3918"><br/></div><div id="line3919"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3920"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3921"><br/></div><div id="line3922"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3923"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3924"><br/></div><div id="line3925"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3926"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CALLABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3927"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">/* Fixme */</span></pre></div><div id="line3928"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3929"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3930"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3931"><br/></div><div id="line3932"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">// TODO: Move this in a separate method</span></pre></div><div id="line3933"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTIndexExpression</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3934"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3935"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3936"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3937"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$prefix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3938"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3939"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3940"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3941"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3942"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3943"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3944"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line3945"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$child</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrVariableVariableOrVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3946"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3947"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3948"><br/></div><div id="line3949"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3950"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodOrPropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3951"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$child</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3952"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3953"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3954"><br/></div><div id="line3955"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line3956"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$prefix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3957"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3958"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3959"><br/></div><div id="line3960"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3961"><pre><span class="token T_DOC_COMMENT">     * This method parses an optional member primary expression. It will parse</span></pre></div><div id="line3962"><pre><span class="token T_DOC_COMMENT">     * the primary expression when a double colon operator can be found at the</span></pre></div><div id="line3963"><pre><span class="token T_DOC_COMMENT">     * actual token stream position. Otherwise this method simply returns the</span></pre></div><div id="line3964"><pre><span class="token T_DOC_COMMENT">     * input {@link \PDepend\Source\AST\ASTNode} instance.</span></pre></div><div id="line3965"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3966"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node This node represents primary prefix</span></pre></div><div id="line3967"><pre><span class="token T_DOC_COMMENT">     *        left expression. It will be the first child of the parsed member</span></pre></div><div id="line3968"><pre><span class="token T_DOC_COMMENT">     *        primary expression.</span></pre></div><div id="line3969"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line3970"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line3971"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.1</span></pre></div><div id="line3972"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line3973"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line3974"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3975"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3976"><br/></div><div id="line3977"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line3978"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3979"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3980"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3981"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line3982"><br/></div><div id="line3983"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3984"><pre><span class="token T_DOC_COMMENT">     * This method parses a static member primary expression. The given node</span></pre></div><div id="line3985"><pre><span class="token T_DOC_COMMENT">     * contains the used static class or interface identifier. A static member</span></pre></div><div id="line3986"><pre><span class="token T_DOC_COMMENT">     * primary prefix can represent the following code expressions:</span></pre></div><div id="line3987"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3988"><pre><span class="token T_DOC_COMMENT">     * A static method class:</span></pre></div><div id="line3989"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3990"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3991"><pre><span class="token T_DOC_COMMENT">     * Foo::bar();</span></pre></div><div id="line3992"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3993"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3994"><pre><span class="token T_DOC_COMMENT">     * a static property access:</span></pre></div><div id="line3995"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line3996"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line3997"><pre><span class="token T_DOC_COMMENT">     * Foo::$bar;</span></pre></div><div id="line3998"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line3999"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4000"><pre><span class="token T_DOC_COMMENT">     * or a static constant access:</span></pre></div><div id="line4001"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4002"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4003"><pre><span class="token T_DOC_COMMENT">     * Foo::BAR;</span></pre></div><div id="line4004"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4005"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4006"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node The left node in the parsed member</span></pre></div><div id="line4007"><pre><span class="token T_DOC_COMMENT">     *        primary expression.</span></pre></div><div id="line4008"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTMemberPrimaryPrefix</span></pre></div><div id="line4009"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4010"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4011"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4012"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4013"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4014"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4015"><br/></div><div id="line4016"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4017"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4018"><br/></div><div id="line4019"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4020"><br/></div><div id="line4021"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4022"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4023"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodOrConstantPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4024"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4025"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_FQN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4026"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFullQualifiedClassNamePostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4027"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4028"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4029"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodOrPropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4030"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePostfixIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4031"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4032"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4033"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4034"><br/></div><div id="line4035"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$prefix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$postfix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4036"><br/></div><div id="line4037"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4038"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$prefix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4039"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4040"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4041"><br/></div><div id="line4042"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4043"><pre><span class="token T_DOC_COMMENT">     * This method parses a method- or constant-postfix expression. This expression</span></pre></div><div id="line4044"><pre><span class="token T_DOC_COMMENT">     * will contain an identifier node as nested child.</span></pre></div><div id="line4045"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4046"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4047"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4048"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4049"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4050"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMethodOrConstantPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4051"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4052"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4053"><br/></div><div id="line4054"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4055"><br/></div><div id="line4056"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4057"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4058"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4059"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4060"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstantPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4061"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4062"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4063"><br/></div><div id="line4064"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$postfix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4065"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4066"><br/></div><div id="line4067"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4068"><pre><span class="token T_DOC_COMMENT">     * This method parses a method- or property-postfix expression. This expression</span></pre></div><div id="line4069"><pre><span class="token T_DOC_COMMENT">     * will contain the given node as method or property identifier.</span></pre></div><div id="line4070"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4071"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The identifier for the parsed postfix</span></pre></div><div id="line4072"><pre><span class="token T_DOC_COMMENT">     *        expression node. This node will be the first child of the returned</span></pre></div><div id="line4073"><pre><span class="token T_DOC_COMMENT">     *        postfix node instance.</span></pre></div><div id="line4074"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4075"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4076"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4077"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4078"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4079"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMethodOrPropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4080"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4081"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Strip optional comments</span></pre></div><div id="line4082"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4083"><br/></div><div id="line4084"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4085"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4086"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMethodPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4087"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4088"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4089"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4090"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4091"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4092"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$postfix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4093"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4094"><br/></div><div id="line4095"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4096"><pre><span class="token T_DOC_COMMENT">     * Parses/Creates a property postfix node instance.</span></pre></div><div id="line4097"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4098"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node Node that represents the image of</span></pre></div><div id="line4099"><pre><span class="token T_DOC_COMMENT">     *        the property postfix node.</span></pre></div><div id="line4100"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4101"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTPropertyPostfix</span></pre></div><div id="line4102"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.2</span></pre></div><div id="line4103"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4104"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4105"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4106"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">extractPostfixImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4107"><br/></div><div id="line4108"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstPropertyPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4109"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4110"><br/></div><div id="line4111"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4112"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4113"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4114"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4115"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4116"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4117"><br/></div><div id="line4118"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$postfix</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4119"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4120"><br/></div><div id="line4121"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4122"><pre><span class="token T_DOC_COMMENT">     * Parses a full qualified class name postfix.</span></pre></div><div id="line4123"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4124"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClassFqnPostfix</span></pre></div><div id="line4125"><pre><span class="token T_DOC_COMMENT">     * @since  2.0.0</span></pre></div><div id="line4126"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4127"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFullQualifiedClassNamePostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4128"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4129"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4130"><br/></div><div id="line4131"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_FQN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4132"><br/></div><div id="line4133"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4134"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassFqnPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4135"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4136"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4137"><br/></div><div id="line4138"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4139"><pre><span class="token T_DOC_COMMENT">     * This method will extract the image/name of the real property/variable</span></pre></div><div id="line4140"><pre><span class="token T_DOC_COMMENT">     * that is wrapped by {@link \PDepend\Source\AST\ASTIndexExpression} nodes. If</span></pre></div><div id="line4141"><pre><span class="token T_DOC_COMMENT">     * the given node is now wrapped by index expressions, this method will</span></pre></div><div id="line4142"><pre><span class="token T_DOC_COMMENT">     * return the image of the entire &lt;b&gt;$node&lt;/b&gt;.</span></pre></div><div id="line4143"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4144"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The context node that may be wrapped</span></pre></div><div id="line4145"><pre><span class="token T_DOC_COMMENT">     *        by multiple array or string index expressions.</span></pre></div><div id="line4146"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4147"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line4148"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4149"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4150"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">extractPostfixImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4151"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4152"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTIndexExpression</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4153"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4154"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4155"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4156"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4157"><br/></div><div id="line4158"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4159"><pre><span class="token T_DOC_COMMENT">     * Parses a method postfix node instance.</span></pre></div><div id="line4160"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4161"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node Node that represents the image of</span></pre></div><div id="line4162"><pre><span class="token T_DOC_COMMENT">     *        the method postfix node.</span></pre></div><div id="line4163"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4164"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTMethodPostfix</span></pre></div><div id="line4165"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4166"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4167"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseMethodPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4168"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4169"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$args</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4170"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">extractPostfixImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4171"><br/></div><div id="line4172"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstMethodPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4173"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4174"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$args</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4175"><br/></div><div id="line4176"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$postfix</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4177"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4178"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$args</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4179"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4180"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$args</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4181"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4182"><br/></div><div id="line4183"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$postfix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4184"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4185"><br/></div><div id="line4186"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4187"><pre><span class="token T_DOC_COMMENT">     * This method parses the arguments passed to a function- or method-call.</span></pre></div><div id="line4188"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4189"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArguments</span></pre></div><div id="line4190"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4191"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4192"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4193"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4194"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4195"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4196"><br/></div><div id="line4197"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4198"><br/></div><div id="line4199"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$arguments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstArguments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4200"><br/></div><div id="line4201"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4202"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4203"><br/></div><div id="line4204"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4205"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$arguments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpressionList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$arguments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4206"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4207"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4208"><br/></div><div id="line4209"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$arguments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4210"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4211"><br/></div><div id="line4212"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4213"><pre><span class="token T_DOC_COMMENT">     * This method implements the parsing for various expression types like</span></pre></div><div id="line4214"><pre><span class="token T_DOC_COMMENT">     * variables, object/static method. All these expressions are valid in</span></pre></div><div id="line4215"><pre><span class="token T_DOC_COMMENT">     * several php language constructs like, isset, empty, unset etc.</span></pre></div><div id="line4216"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4217"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4218"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.12</span></pre></div><div id="line4219"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4220"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4221"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4222"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4223"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4224"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4225"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4226"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrFunctionPostfixOrMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4227"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4228"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4229"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantOrSelfMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4230"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4231"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4232"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantOrParentMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4233"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4234"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4235"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticVariableDeclarationOrMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4236"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4237"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4238"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4239"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4240"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMemberPrefixOrFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4241"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4242"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4243"><pre><span class="token T_WHITESPACE">                </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4244"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4245"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4246"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4247"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4248"><br/></div><div id="line4249"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4250"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4251"><br/></div><div id="line4252"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4253"><pre><span class="token T_DOC_COMMENT">     * This method parses any type of variable, function postfix expressions or</span></pre></div><div id="line4254"><pre><span class="token T_DOC_COMMENT">     * any kind of member primary prefix.</span></pre></div><div id="line4255"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4256"><pre><span class="token T_DOC_COMMENT">     * This method expects that the actual token represents any kind of valid</span></pre></div><div id="line4257"><pre><span class="token T_DOC_COMMENT">     * php variable: simple variable, compound variable or variable variable.</span></pre></div><div id="line4258"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4259"><pre><span class="token T_DOC_COMMENT">     * It will parse a function postfix or member primary expression when this</span></pre></div><div id="line4260"><pre><span class="token T_DOC_COMMENT">     * variable is followed by an object operator, double colon or opening</span></pre></div><div id="line4261"><pre><span class="token T_DOC_COMMENT">     * parenthesis.</span></pre></div><div id="line4262"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4263"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4264"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4265"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4266"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4267"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableOrFunctionPostfixOrMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4268"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4269"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4270"><br/></div><div id="line4271"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrVariableVariableOrVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4272"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalIndexExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4273"><br/></div><div id="line4274"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4275"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4276"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4277"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4278"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4279"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OBJECT_OPERATOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4280"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4281"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4282"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4283"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionPostfix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4284"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4285"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4286"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4287"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4288"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4289"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4290"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4291"><br/></div><div id="line4292"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4293"><pre><span class="token T_DOC_COMMENT">     * Parses an assingment expression node.</span></pre></div><div id="line4294"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4295"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $left The left part of the assignment</span></pre></div><div id="line4296"><pre><span class="token T_DOC_COMMENT">     *        expression that will be parsed by this method.</span></pre></div><div id="line4297"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4298"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTAssignmentExpression</span></pre></div><div id="line4299"><pre><span class="token T_DOC_COMMENT">     * @since 0.9.12</span></pre></div><div id="line4300"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4301"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseAssignmentExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$left</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4302"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4304"><br/></div><div id="line4305"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstAssignmentExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4306"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$left</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4307"><br/></div><div id="line4308"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// TODO: Change this into a mandatory expression in later versions</span></pre></div><div id="line4309"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4310"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4311"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4312"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$left</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4313"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4314"><br/></div><div id="line4315"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4316"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$left</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4317"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4318"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$left</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getStartColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4319"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getEndColumn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4320"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4321"><br/></div><div id="line4322"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4323"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4324"><br/></div><div id="line4325"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4326"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTStaticReference} node.</span></pre></div><div id="line4327"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4328"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $token The "static" keyword token.</span></pre></div><div id="line4329"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTStaticReference</span></pre></div><div id="line4330"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4331"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line4332"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4333"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4334"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4335"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4336"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Strip optional comments</span></pre></div><div id="line4337"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4338"><br/></div><div id="line4339"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4340"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4341"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4342"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING_CAST">(string)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4343"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'The keyword "static" was used outside of a class/method scope.'</span></pre></div><div id="line4344"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4345"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4346"><br/></div><div id="line4347"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstStaticReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4348"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4349"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4350"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4351"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4352"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4353"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4354"><br/></div><div id="line4355"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ref</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4356"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4357"><br/></div><div id="line4358"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4359"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTSelfReference} node.</span></pre></div><div id="line4360"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4361"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $token The "self" keyword token.</span></pre></div><div id="line4362"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSelfReference</span></pre></div><div id="line4363"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4364"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line4365"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4366"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4367"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSelfReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4368"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4369"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4370"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4371"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4372"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING_CAST">(string)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4373"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'The keyword "self" was used outside of a class/method scope.'</span></pre></div><div id="line4374"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4375"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4376"><br/></div><div id="line4377"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstSelfReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4378"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4379"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4380"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4381"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4382"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4383"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4384"><br/></div><div id="line4385"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ref</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4386"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4387"><br/></div><div id="line4388"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4389"><pre><span class="token T_DOC_COMMENT">     * Parses a simple PHP constant use and returns a corresponding node.</span></pre></div><div id="line4390"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4391"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4392"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line4393"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4394"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4395"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4396"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4397"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4398"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4399"><pre><span class="token T_WHITESPACE">                </span><span class="token T_COMMENT">// TODO: Separate node classes for magic constants</span></pre></div><div id="line4400"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DIR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4401"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4402"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LINE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4403"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4404"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNC_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4405"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4406"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_METHOD_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4407"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4408"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$const</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4409"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4410"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4411"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$const</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4412"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4413"><br/></div><div id="line4414"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4415"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTConstant} node or</span></pre></div><div id="line4416"><pre><span class="token T_DOC_COMMENT">     * an instance of {@link \PDepend\Source\AST\ASTSelfReference} as part of</span></pre></div><div id="line4417"><pre><span class="token T_DOC_COMMENT">     * a {@link \PDepend\Source\AST\ASTMemberPrimaryPrefix} that contains the</span></pre></div><div id="line4418"><pre><span class="token T_DOC_COMMENT">     * self reference as its first child when the self token is followed by a</span></pre></div><div id="line4419"><pre><span class="token T_DOC_COMMENT">     * double colon token.</span></pre></div><div id="line4420"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4421"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4422"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4423"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line4424"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4425"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4426"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstantOrSelfMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4427"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4428"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Read self token and strip optional comments</span></pre></div><div id="line4429"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4430"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4431"><br/></div><div id="line4432"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4433"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4434"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSelfReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4435"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4436"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4437"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4438"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4439"><br/></div><div id="line4440"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4441"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTParentReference} node.</span></pre></div><div id="line4442"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4443"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $token The "self" keyword token.</span></pre></div><div id="line4444"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4445"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4446"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line4447"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4448"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4449"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseParentReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4450"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4451"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4452"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4453"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4454"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING_CAST">(string)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4455"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'The keyword "parent" was used as type hint but the parameter '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span></pre></div><div id="line4456"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONSTANT_ENCAPSED_STRING">'declaration is not in a class scope.'</span></pre></div><div id="line4457"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4458"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4459"><br/></div><div id="line4460"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTTrait</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4461"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$classReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'__PDepend_TraitRuntimeReference'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4462"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4463"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$classReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getParentClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4464"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4465"><br/></div><div id="line4466"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classReference</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4467"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">InvalidStateException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4468"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4469"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING_CAST">(string)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4470"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">sprintf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4471"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_CONSTANT_ENCAPSED_STRING">'The keyword "parent" was used as type hint but the '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span></pre></div><div id="line4472"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_CONSTANT_ENCAPSED_STRING">'class "%s" does not declare a parent.'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4473"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">classOrInterface</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4474"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4475"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4476"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4477"><br/></div><div id="line4478"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstParentReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classReference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4479"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$ref</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4480"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4481"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4482"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4483"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4484"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4485"><br/></div><div id="line4486"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ref</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4487"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4488"><br/></div><div id="line4489"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4490"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTConstant} node or</span></pre></div><div id="line4491"><pre><span class="token T_DOC_COMMENT">     * an instance of {@link \PDepend\Source\AST\ASTParentReference} as part</span></pre></div><div id="line4492"><pre><span class="token T_DOC_COMMENT">     * of a {@link \PDepend\Source\AST\ASTMemberPrimaryPrefix} that contains</span></pre></div><div id="line4493"><pre><span class="token T_DOC_COMMENT">     * the parent reference as its first child when the self token is followed</span></pre></div><div id="line4494"><pre><span class="token T_DOC_COMMENT">     * by a double colon token.</span></pre></div><div id="line4495"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4496"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4497"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4498"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line4499"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4500"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4501"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstantOrParentMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4502"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4503"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume parent token and strip optional comments</span></pre></div><div id="line4504"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4505"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4506"><br/></div><div id="line4507"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4508"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4509"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParentReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4510"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4511"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4512"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstant</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4513"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4514"><br/></div><div id="line4515"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4516"><pre><span class="token T_DOC_COMMENT">     * Parses a variable or any other valid member expression that is optionally</span></pre></div><div id="line4517"><pre><span class="token T_DOC_COMMENT">     * prefixed with PHP's reference operator.</span></pre></div><div id="line4518"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4519"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4520"><pre><span class="token T_DOC_COMMENT">     * //                  -----------</span></pre></div><div id="line4521"><pre><span class="token T_DOC_COMMENT">     * foreach ( $array as &amp;$this-&gt;foo ) {}</span></pre></div><div id="line4522"><pre><span class="token T_DOC_COMMENT">     * //                  -----------</span></pre></div><div id="line4523"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4524"><pre><span class="token T_DOC_COMMENT">     * //     ----------</span></pre></div><div id="line4525"><pre><span class="token T_DOC_COMMENT">     * $foo = &amp;$bar-&gt;baz;</span></pre></div><div id="line4526"><pre><span class="token T_DOC_COMMENT">     * //     ----------</span></pre></div><div id="line4527"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4528"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4529"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTUnaryExpression</span></pre></div><div id="line4530"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.18</span></pre></div><div id="line4531"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4532"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableOrMemberOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4533"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4534"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4535"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4536"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrMemberByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4537"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4538"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4539"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4540"><br/></div><div id="line4541"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4542"><pre><span class="token T_DOC_COMMENT">     * Parses a variable or any other valid member expression that is prefixed</span></pre></div><div id="line4543"><pre><span class="token T_DOC_COMMENT">     * with PHP's reference operator.</span></pre></div><div id="line4544"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4545"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4546"><pre><span class="token T_DOC_COMMENT">     * //                  -----------</span></pre></div><div id="line4547"><pre><span class="token T_DOC_COMMENT">     * foreach ( $array as &amp;$this-&gt;foo ) {}</span></pre></div><div id="line4548"><pre><span class="token T_DOC_COMMENT">     * //                  -----------</span></pre></div><div id="line4549"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4550"><pre><span class="token T_DOC_COMMENT">     * //     ----------</span></pre></div><div id="line4551"><pre><span class="token T_DOC_COMMENT">     * $foo = &amp;$bar-&gt;baz;</span></pre></div><div id="line4552"><pre><span class="token T_DOC_COMMENT">     * //     ----------</span></pre></div><div id="line4553"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4554"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4555"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTUnaryExpression</span></pre></div><div id="line4556"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.18</span></pre></div><div id="line4557"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4558"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableOrMemberByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4559"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4560"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4561"><br/></div><div id="line4562"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4563"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4564"><br/></div><div id="line4565"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstUnaryExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4566"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$expr</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4567"><br/></div><div id="line4568"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4569"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4570"><br/></div><div id="line4571"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4572"><pre><span class="token T_DOC_COMMENT">     * This method parses a simple PHP variable.</span></pre></div><div id="line4573"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4574"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTVariable</span></pre></div><div id="line4575"><pre><span class="token T_DOC_COMMENT">     * @throws UnexpectedTokenException</span></pre></div><div id="line4576"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4577"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4578"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4579"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4580"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4581"><br/></div><div id="line4582"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4583"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$variable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4584"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4585"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4586"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4587"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4588"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4589"><br/></div><div id="line4590"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4591"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4592"><br/></div><div id="line4593"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4594"><pre><span class="token T_DOC_COMMENT">     * This method parses a comma separated list of valid php variables and/or</span></pre></div><div id="line4595"><pre><span class="token T_DOC_COMMENT">     * properties and adds them to the given node instance.</span></pre></div><div id="line4596"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4597"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $node The context parent node.</span></pre></div><div id="line4598"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4599"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode The prepared entire node.</span></pre></div><div id="line4600"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line4601"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4602"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableList</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4603"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4604"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4605"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4606"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableOrConstantOrPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4607"><br/></div><div id="line4608"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4609"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4610"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4611"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4612"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4613"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4614"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4615"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4616"><br/></div><div id="line4617"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4618"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4619"><br/></div><div id="line4620"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4621"><pre><span class="token T_DOC_COMMENT">     * This method is a decision point between the different variable types</span></pre></div><div id="line4622"><pre><span class="token T_DOC_COMMENT">     * availanle in PHP. It peeks the next token and then decides whether it is</span></pre></div><div id="line4623"><pre><span class="token T_DOC_COMMENT">     * a regular variable or when the next token is of type &lt;b&gt;T_DOLLAR&lt;/b&gt; a</span></pre></div><div id="line4624"><pre><span class="token T_DOC_COMMENT">     * compound- or variable-variable.</span></pre></div><div id="line4625"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4626"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4627"><pre><span class="token T_DOC_COMMENT">     * ----</span></pre></div><div id="line4628"><pre><span class="token T_DOC_COMMENT">     * $foo;</span></pre></div><div id="line4629"><pre><span class="token T_DOC_COMMENT">     * ----</span></pre></div><div id="line4630"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4631"><pre><span class="token T_DOC_COMMENT">     * -----</span></pre></div><div id="line4632"><pre><span class="token T_DOC_COMMENT">     * $$foo;</span></pre></div><div id="line4633"><pre><span class="token T_DOC_COMMENT">     * -----</span></pre></div><div id="line4634"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4635"><pre><span class="token T_DOC_COMMENT">     * ------</span></pre></div><div id="line4636"><pre><span class="token T_DOC_COMMENT">     * ${FOO};</span></pre></div><div id="line4637"><pre><span class="token T_DOC_COMMENT">     * ------</span></pre></div><div id="line4638"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4639"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4640"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4641"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4642"><pre><span class="token T_DOC_COMMENT">     * @throws UnexpectedTokenException</span></pre></div><div id="line4643"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4644"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4645"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundVariableOrVariableVariableOrVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4646"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4647"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4648"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrVariableVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4649"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4650"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4651"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4652"><br/></div><div id="line4653"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4654"><pre><span class="token T_DOC_COMMENT">     * Parses a PHP compound variable or a simple literal node.</span></pre></div><div id="line4655"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4656"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4657"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.19</span></pre></div><div id="line4658"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4659"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundVariableOrLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4660"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4661"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4662"><br/></div><div id="line4663"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Read the dollar token</span></pre></div><div id="line4664"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4665"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4666"><br/></div><div id="line4667"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Get next token type</span></pre></div><div id="line4668"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4669"><br/></div><div id="line4670"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4671"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4672"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCompoundVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4673"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4674"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4675"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4676"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4677"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4678"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4679"><br/></div><div id="line4680"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4681"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4682"><br/></div><div id="line4683"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4684"><pre><span class="token T_DOC_COMMENT">     * This method implements a decision point between compound-variables and</span></pre></div><div id="line4685"><pre><span class="token T_DOC_COMMENT">     * variable-variable. It expects that the next token in the token-stream is</span></pre></div><div id="line4686"><pre><span class="token T_DOC_COMMENT">     * of type &lt;b&gt;T_DOLLAR&lt;/b&gt; and removes it from the stream. Then this method</span></pre></div><div id="line4687"><pre><span class="token T_DOC_COMMENT">     * peeks the next available token when it is of type &lt;b&gt;T_CURLY_BRACE_OPEN&lt;/b&gt;</span></pre></div><div id="line4688"><pre><span class="token T_DOC_COMMENT">     * this is compound variable, otherwise it can be a variable-variable or a</span></pre></div><div id="line4689"><pre><span class="token T_DOC_COMMENT">     * compound-variable.</span></pre></div><div id="line4690"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4691"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4692"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4693"><pre><span class="token T_DOC_COMMENT">     * @throws UnexpectedTokenException</span></pre></div><div id="line4694"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4695"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4696"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundVariableOrVariableVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4697"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4698"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4699"><br/></div><div id="line4700"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Read the dollar token</span></pre></div><div id="line4701"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4702"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4703"><br/></div><div id="line4704"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Get next token type</span></pre></div><div id="line4705"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4706"><br/></div><div id="line4707"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// T_DOLLAR|T_VARIABLE === Variable variable,</span></pre></div><div id="line4708"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// T_CURLY_BRACE_OPEN === Compound variable</span></pre></div><div id="line4709"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4710"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4711"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4712"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstVariableVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4713"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4714"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrVariableVariableOrVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4715"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4716"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4717"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4718"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$variable</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4719"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4720"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4721"><br/></div><div id="line4722"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$variable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4723"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4724"><br/></div><div id="line4725"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4726"><pre><span class="token T_DOC_COMMENT">     * This method parses a compound variable like:</span></pre></div><div id="line4727"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4728"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4729"><pre><span class="token T_DOC_COMMENT">     * //     ----------------</span></pre></div><div id="line4730"><pre><span class="token T_DOC_COMMENT">     * return ${'Foo' . 'Bar'};</span></pre></div><div id="line4731"><pre><span class="token T_DOC_COMMENT">     * //     ----------------</span></pre></div><div id="line4732"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4733"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4734"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $token The dollar token.</span></pre></div><div id="line4735"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTCompoundVariable</span></pre></div><div id="line4736"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line4737"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4738"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4739"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4740"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4741"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCompoundVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4742"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4743"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span></pre></div><div id="line4744"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4745"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4746"><br/></div><div id="line4747"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4748"><pre><span class="token T_DOC_COMMENT">     * This method parses a compound expression like:</span></pre></div><div id="line4749"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4750"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4751"><pre><span class="token T_DOC_COMMENT">     * //      ------  ------</span></pre></div><div id="line4752"><pre><span class="token T_DOC_COMMENT">     * $foo = "{$bar}, {$baz}\n";</span></pre></div><div id="line4753"><pre><span class="token T_DOC_COMMENT">     * //      ------  ------</span></pre></div><div id="line4754"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4755"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4756"><pre><span class="token T_DOC_COMMENT">     * or a simple literal token:</span></pre></div><div id="line4757"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4758"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4759"><pre><span class="token T_DOC_COMMENT">     * //      -</span></pre></div><div id="line4760"><pre><span class="token T_DOC_COMMENT">     * $foo = "{{$bar}, {$baz}\n";</span></pre></div><div id="line4761"><pre><span class="token T_DOC_COMMENT">     * //      -</span></pre></div><div id="line4762"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4763"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4764"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4765"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line4766"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4767"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundExpressionOrLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4768"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4769"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4770"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4771"><br/></div><div id="line4772"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4773"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4774"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4775"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4776"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCompoundExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4777"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4778"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span></pre></div><div id="line4779"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4780"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4781"><br/></div><div id="line4782"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$literal</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4783"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$literal</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4784"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4785"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4786"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4787"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4788"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4789"><br/></div><div id="line4790"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$literal</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4791"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4792"><br/></div><div id="line4793"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4794"><pre><span class="token T_DOC_COMMENT">     * This method parses a compound expression node.</span></pre></div><div id="line4795"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4796"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line4797"><pre><span class="token T_DOC_COMMENT">     * ------------------</span></pre></div><div id="line4798"><pre><span class="token T_DOC_COMMENT">     * {'_' . foo . $bar}</span></pre></div><div id="line4799"><pre><span class="token T_DOC_COMMENT">     * ------------------</span></pre></div><div id="line4800"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line4801"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4802"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTCompoundExpression</span></pre></div><div id="line4803"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4804"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line4805"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line4806"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4807"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCompoundExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4808"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4809"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4810"><br/></div><div id="line4811"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBraceExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4812"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstCompoundExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4813"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4814"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span></pre></div><div id="line4815"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4816"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4817"><br/></div><div id="line4818"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4819"><pre><span class="token T_DOC_COMMENT">     * Parses a static identifier expression, as it is used for method and</span></pre></div><div id="line4820"><pre><span class="token T_DOC_COMMENT">     * function names.</span></pre></div><div id="line4821"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4822"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTIdentifier</span></pre></div><div id="line4823"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line4824"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4825"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4826"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4827"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4828"><br/></div><div id="line4829"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstIdentifier</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4830"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4831"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4832"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4833"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4834"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4835"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4836"><br/></div><div id="line4837"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4838"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4839"><br/></div><div id="line4840"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4841"><pre><span class="token T_DOC_COMMENT">     * This method parses a {@link \PDepend\Source\AST\ASTLiteral} node or an</span></pre></div><div id="line4842"><pre><span class="token T_DOC_COMMENT">     * instance of {@link \PDepend\Source\AST\ASTString} that represents a string</span></pre></div><div id="line4843"><pre><span class="token T_DOC_COMMENT">     * in double quotes or surrounded by backticks.</span></pre></div><div id="line4844"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4845"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line4846"><pre><span class="token T_DOC_COMMENT">     * @throws UnexpectedTokenException</span></pre></div><div id="line4847"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4848"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLiteralOrString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4849"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4850"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4851"><br/></div><div id="line4852"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4853"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4854"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4855"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4856"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4857"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONSTANT_ENCAPSED_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4858"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4859"><br/></div><div id="line4860"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$literal</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4861"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$literal</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4862"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4863"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4864"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4865"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4866"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4867"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$literal</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4868"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4869"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIntegerNumber</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4870"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line4871"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4872"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4873"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4874"><br/></div><div id="line4875"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4876"><pre><span class="token T_DOC_COMMENT">     * Parses an integer value.</span></pre></div><div id="line4877"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4878"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLiteral</span></pre></div><div id="line4879"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line4880"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4881"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseIntegerNumber</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4882"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4883"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LNUMBER</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4884"><br/></div><div id="line4885"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$literal</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4886"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$literal</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4887"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4888"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4889"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4890"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line4891"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4892"><br/></div><div id="line4893"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$literal</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4894"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4895"><br/></div><div id="line4896"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4897"><pre><span class="token T_DOC_COMMENT">     * Parses an array structure.</span></pre></div><div id="line4898"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4899"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArray</span></pre></div><div id="line4900"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line4901"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4902"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">doParseArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$static</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4903"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4904"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4905"><br/></div><div id="line4906"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4907"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4908"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4909"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$static</span></pre></div><div id="line4910"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4911"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4912"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4913"><br/></div><div id="line4914"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4915"><pre><span class="token T_DOC_COMMENT">     * Tests if the next token is a valid array start delimiter in the supported</span></pre></div><div id="line4916"><pre><span class="token T_DOC_COMMENT">     * PHP version.</span></pre></div><div id="line4917"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4918"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line4919"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4920"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4921"><pre><span class="token T_WHITESPACE">    </span><span class="token T_ABSTRACT">abstract</span><span class="token T_WHITESPACE"> </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isArrayStartDelimiter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4922"><br/></div><div id="line4923"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4924"><pre><span class="token T_DOC_COMMENT">     * Parses a php array declaration.</span></pre></div><div id="line4925"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4926"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTArray $array</span></pre></div><div id="line4927"><pre><span class="token T_DOC_COMMENT">     * @param boolean                      $static</span></pre></div><div id="line4928"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4929"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArray</span></pre></div><div id="line4930"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4931"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4932"><pre><span class="token T_WHITESPACE">    </span><span class="token T_ABSTRACT">abstract</span><span class="token T_WHITESPACE"> </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTArray</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$array</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$static</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4933"><br/></div><div id="line4934"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4935"><pre><span class="token T_DOC_COMMENT">     * Parses all elements in an array.</span></pre></div><div id="line4936"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4937"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTArray $array</span></pre></div><div id="line4938"><pre><span class="token T_DOC_COMMENT">     * @param  integer                      $endDelimiter</span></pre></div><div id="line4939"><pre><span class="token T_DOC_COMMENT">     * @param  boolean                      $static</span></pre></div><div id="line4940"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArray</span></pre></div><div id="line4941"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4942"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4943"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArrayElements</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTArray</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$array</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$endDelimiter</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$static</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4944"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4945"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4946"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$endDelimiter</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4947"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$array</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArrayElement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$static</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4948"><br/></div><div id="line4949"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4950"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4951"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4952"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4953"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4954"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4955"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$array</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4956"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4957"><br/></div><div id="line4958"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4959"><pre><span class="token T_DOC_COMMENT">     * Parses a single array element.</span></pre></div><div id="line4960"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4961"><pre><span class="token T_DOC_COMMENT">     * An array element can have a simple value, a key/value pair, a value by</span></pre></div><div id="line4962"><pre><span class="token T_DOC_COMMENT">     * reference or a key/value pair with a referenced value.</span></pre></div><div id="line4963"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line4964"><pre><span class="token T_DOC_COMMENT">     * @param  boolean $static</span></pre></div><div id="line4965"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTArrayElement</span></pre></div><div id="line4966"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line4967"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line4968"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArrayElement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$static</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4969"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4970"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4971"><br/></div><div id="line4972"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4973"><br/></div><div id="line4974"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$element</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstArrayElement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4975"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4976"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$static</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4977"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$tokens</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4978"><br/></div><div id="line4979"><pre><span class="token T_WHITESPACE">                </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4980"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokens</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4981"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4982"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4983"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4984"><br/></div><div id="line4985"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$element</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4986"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4987"><br/></div><div id="line4988"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4989"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isKeyword</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line4990"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line4991"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line4992"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line4993"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4994"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line4995"><br/></div><div id="line4996"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$element</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4997"><br/></div><div id="line4998"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4999"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5000"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5001"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5002"><br/></div><div id="line5003"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5004"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$element</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5005"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5006"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$element</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5007"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5008"><br/></div><div id="line5009"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$element</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5010"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5011"><br/></div><div id="line5012"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5013"><pre><span class="token T_DOC_COMMENT">     * Parses a here- or nowdoc string instance.</span></pre></div><div id="line5014"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5015"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTHeredoc</span></pre></div><div id="line5016"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line5017"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5018"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseHeredoc</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5019"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5020"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5021"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_START_HEREDOC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5022"><br/></div><div id="line5023"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$heredoc</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstHeredoc</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5024"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStringExpressions</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$heredoc</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_END_HEREDOC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5025"><br/></div><div id="line5026"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_END_HEREDOC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5027"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$heredoc</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setDelimiter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5028"><br/></div><div id="line5029"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$heredoc</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5030"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5031"><br/></div><div id="line5032"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5033"><pre><span class="token T_DOC_COMMENT">     * Parses a simple string sequence between two tokens of the same type.</span></pre></div><div id="line5034"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5035"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType The start/stop token type.</span></pre></div><div id="line5036"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5037"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line5038"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line5039"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5040"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStringSequence</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5041"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5042"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE">   </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5043"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5044"><br/></div><div id="line5045"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5046"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5047"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5048"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5049"><br/></div><div id="line5050"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5051"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5052"><br/></div><div id="line5053"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5054"><pre><span class="token T_DOC_COMMENT">     * This method parses a php string with all possible embedded expressions.</span></pre></div><div id="line5055"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5056"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5057"><pre><span class="token T_DOC_COMMENT">     * $string = "Manuel $Pichler &lt;{$email}&gt;";</span></pre></div><div id="line5058"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5059"><pre><span class="token T_DOC_COMMENT">     * // \PDepend\Source\AST\ASTSTring</span></pre></div><div id="line5060"><pre><span class="token T_DOC_COMMENT">     * // |-- ASTLiteral             -  "Manuel ")</span></pre></div><div id="line5061"><pre><span class="token T_DOC_COMMENT">     * // |-- ASTVariable            -  $Pichler</span></pre></div><div id="line5062"><pre><span class="token T_DOC_COMMENT">     * // |-- ASTLiteral             -  " &lt;"</span></pre></div><div id="line5063"><pre><span class="token T_DOC_COMMENT">     * // |-- ASTCompoundExpression  -  {...}</span></pre></div><div id="line5064"><pre><span class="token T_DOC_COMMENT">     * // |   |-- ASTVariable        -  $email</span></pre></div><div id="line5065"><pre><span class="token T_DOC_COMMENT">     * // |-- ASTLiteral             -  "&gt;"</span></pre></div><div id="line5066"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5067"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5068"><pre><span class="token T_DOC_COMMENT">     * @param integer $delimiterType The start/stop token type.</span></pre></div><div id="line5069"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5070"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTString</span></pre></div><div id="line5071"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line5072"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line5073"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5074"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$delimiterType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5075"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5076"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$delimiterType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5077"><br/></div><div id="line5078"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$string</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5079"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$startLine</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5080"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$startColumn</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5081"><br/></div><div id="line5082"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStringExpressions</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$string</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$delimiterType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5083"><br/></div><div id="line5084"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$delimiterType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5085"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$endLine</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5086"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$endColumn</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5087"><br/></div><div id="line5088"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$string</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5089"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5090"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5091"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5092"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$endColumn</span></pre></div><div id="line5093"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5094"><br/></div><div id="line5095"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$string</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5096"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5097"><br/></div><div id="line5098"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5099"><pre><span class="token T_DOC_COMMENT">     * This method parses the contents of a string or here-/now-doc node. It</span></pre></div><div id="line5100"><pre><span class="token T_DOC_COMMENT">     * will not consume the given stop token, so it is up to the calling method</span></pre></div><div id="line5101"><pre><span class="token T_DOC_COMMENT">     * to consume the stop token. The return value of this method is the prepared</span></pre></div><div id="line5102"><pre><span class="token T_DOC_COMMENT">     * input string node.</span></pre></div><div id="line5103"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5104"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTNode $node</span></pre></div><div id="line5105"><pre><span class="token T_DOC_COMMENT">     * @param  integer                     $stopToken</span></pre></div><div id="line5106"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line5107"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line5108"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5109"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStringExpressions</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTNode</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stopToken</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5110"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5111"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5112"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5113"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stopToken</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5114"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5115"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5116"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseEscapedAstLiteralString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5117"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5118"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOLLAR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5119"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundVariableOrLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5120"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5121"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5122"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5123"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5124"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5125"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCompoundExpressionOrLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5126"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5127"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5128"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5129"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5130"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5131"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5132"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5133"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5134"><br/></div><div id="line5135"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5136"><pre><span class="token T_DOC_COMMENT">     * This method parses an escaped sequence of literal tokens.</span></pre></div><div id="line5137"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5138"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLiteral</span></pre></div><div id="line5139"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line5140"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5141"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseEscapedAstLiteralString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5142"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5143"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5144"><br/></div><div id="line5145"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5146"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$escape</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5147"><br/></div><div id="line5148"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5149"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5150"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5151"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$escape</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$escape</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5152"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE">  </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5153"><br/></div><div id="line5154"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5155"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONTINUE">continue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5156"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5157"><br/></div><div id="line5158"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$escape</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5159"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5160"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5161"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5162"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5163"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5164"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5165"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5166"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5167"><br/></div><div id="line5168"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5169"><pre><span class="token T_DOC_COMMENT">     * This method parses a simple literal and configures the position</span></pre></div><div id="line5170"><pre><span class="token T_DOC_COMMENT">     * properties.</span></pre></div><div id="line5171"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5172"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTLiteral</span></pre></div><div id="line5173"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.10</span></pre></div><div id="line5174"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5175"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5176"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5177"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5178"><br/></div><div id="line5179"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstLiteral</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5180"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5181"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5182"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5183"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5184"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line5185"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5186"><br/></div><div id="line5187"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5188"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5189"><br/></div><div id="line5190"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5191"><pre><span class="token T_DOC_COMMENT">     * Extracts all dependencies from a callable signature.</span></pre></div><div id="line5192"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5193"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameters</span></pre></div><div id="line5194"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5195"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5196"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5197"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5198"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5199"><br/></div><div id="line5200"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5201"><br/></div><div id="line5202"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$formalParameters</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstFormalParameters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5203"><br/></div><div id="line5204"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5205"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5206"><br/></div><div id="line5207"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5208"><br/></div><div id="line5209"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Check for function without parameters</span></pre></div><div id="line5210"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5211"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5212"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$formalParameters</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5213"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5214"><br/></div><div id="line5215"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5216"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$formalParameters</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5217"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterOrTypeHintOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5218"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5219"><br/></div><div id="line5220"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5221"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5222"><br/></div><div id="line5223"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Check for following parameter</span></pre></div><div id="line5224"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5225"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5226"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5227"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5228"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5229"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5230"><br/></div><div id="line5231"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$formalParameters</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5232"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5233"><br/></div><div id="line5234"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5235"><pre><span class="token T_DOC_COMMENT">     * This method parses a formal parameter in all it's variations.</span></pre></div><div id="line5236"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5237"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5238"><pre><span class="token T_DOC_COMMENT">     * //                ------------</span></pre></div><div id="line5239"><pre><span class="token T_DOC_COMMENT">     * function traverse(Iterator $it) {}</span></pre></div><div id="line5240"><pre><span class="token T_DOC_COMMENT">     * //                ------------</span></pre></div><div id="line5241"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5242"><pre><span class="token T_DOC_COMMENT">     * //                ---------</span></pre></div><div id="line5243"><pre><span class="token T_DOC_COMMENT">     * function traverse(array $ar) {}</span></pre></div><div id="line5244"><pre><span class="token T_DOC_COMMENT">     * //                ---------</span></pre></div><div id="line5245"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5246"><pre><span class="token T_DOC_COMMENT">     * //                ---</span></pre></div><div id="line5247"><pre><span class="token T_DOC_COMMENT">     * function traverse(&amp;$x) {}</span></pre></div><div id="line5248"><pre><span class="token T_DOC_COMMENT">     * //                ---</span></pre></div><div id="line5249"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5250"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5251"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5252"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5253"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5254"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterOrTypeHintOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5255"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5256"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5257"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5258"><br/></div><div id="line5259"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5260"><br/></div><div id="line5261"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5262"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ARRAY</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5263"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndArrayTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5264"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5265"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5266"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5267"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5268"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5269"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndSelfTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5270"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5271"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5272"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndParentTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5273"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5274"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5275"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5276"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5277"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5278"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5279"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5280"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5281"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5282"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5283"><br/></div><div id="line5284"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5285"><pre><span class="token T_DOC_COMMENT">     * This method parses a formal parameter that has an array type hint.</span></pre></div><div id="line5286"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5287"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5288"><pre><span class="token T_DOC_COMMENT">     * //                ---------</span></pre></div><div id="line5289"><pre><span class="token T_DOC_COMMENT">     * function traverse(array $ar) {}</span></pre></div><div id="line5290"><pre><span class="token T_DOC_COMMENT">     * //                ---------</span></pre></div><div id="line5291"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5292"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5293"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5294"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5295"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5296"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterAndArrayTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5297"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5298"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseArrayType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5299"><br/></div><div id="line5300"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5301"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prependChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5302"><br/></div><div id="line5303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5304"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5305"><br/></div><div id="line5306"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5307"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTTypeArray</span></pre></div><div id="line5308"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5309"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseArrayType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5310"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5311"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ARRAY</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5312"><br/></div><div id="line5313"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTypeArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5314"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5315"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5316"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5317"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5318"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line5319"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5320"><br/></div><div id="line5321"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5322"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5323"><br/></div><div id="line5324"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5325"><pre><span class="token T_DOC_COMMENT">     * This method parses a formal parameter that has a regular class type hint.</span></pre></div><div id="line5326"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5327"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5328"><pre><span class="token T_DOC_COMMENT">     * //                ------------</span></pre></div><div id="line5329"><pre><span class="token T_DOC_COMMENT">     * function traverse(Iterator $it) {}</span></pre></div><div id="line5330"><pre><span class="token T_DOC_COMMENT">     * //                ------------</span></pre></div><div id="line5331"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5332"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5333"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5334"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5335"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5336"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterAndTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5337"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5338"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5339"><br/></div><div id="line5340"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$classReference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5341"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5342"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5343"><br/></div><div id="line5344"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5345"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prependChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$classReference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5346"><br/></div><div id="line5347"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5348"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5349"><br/></div><div id="line5350"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5351"><pre><span class="token T_DOC_COMMENT">     * This method will parse a formal parameter that has the keyword parent as</span></pre></div><div id="line5352"><pre><span class="token T_DOC_COMMENT">     * parameter type hint.</span></pre></div><div id="line5353"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5354"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5355"><pre><span class="token T_DOC_COMMENT">     * class Foo extends Bar</span></pre></div><div id="line5356"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line5357"><pre><span class="token T_DOC_COMMENT">     *     //                   ---------</span></pre></div><div id="line5358"><pre><span class="token T_DOC_COMMENT">     *     public function test(parent $o) {}</span></pre></div><div id="line5359"><pre><span class="token T_DOC_COMMENT">     *     //                   ---------</span></pre></div><div id="line5360"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line5361"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5362"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5363"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5364"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\InvalidStateException</span></pre></div><div id="line5365"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5366"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5367"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterAndParentTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5368"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5369"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$reference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParentType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5370"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5371"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prependChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5372"><br/></div><div id="line5373"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5374"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5375"><br/></div><div id="line5376"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5377"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTParentReference</span></pre></div><div id="line5378"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5379"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseParentType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5380"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5381"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseParentReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5382"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5383"><br/></div><div id="line5384"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5385"><pre><span class="token T_DOC_COMMENT">     * This method will parse a formal parameter that has the keyword self as</span></pre></div><div id="line5386"><pre><span class="token T_DOC_COMMENT">     * parameter type hint.</span></pre></div><div id="line5387"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5388"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5389"><pre><span class="token T_DOC_COMMENT">     * class Foo</span></pre></div><div id="line5390"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line5391"><pre><span class="token T_DOC_COMMENT">     *     //                   -------</span></pre></div><div id="line5392"><pre><span class="token T_DOC_COMMENT">     *     public function test(self $o) {}</span></pre></div><div id="line5393"><pre><span class="token T_DOC_COMMENT">     *     //                   -------</span></pre></div><div id="line5394"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line5395"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5396"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5397"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5398"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5399"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5400"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterAndSelfTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5401"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5402"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$self</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSelfType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5403"><br/></div><div id="line5404"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5405"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$self</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5406"><br/></div><div id="line5407"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5408"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5409"><br/></div><div id="line5410"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5411"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTSelfReference</span></pre></div><div id="line5412"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5413"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseSelfType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5414"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5415"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSelfReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5416"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5417"><br/></div><div id="line5418"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5419"><pre><span class="token T_DOC_COMMENT">     * This method will parse a formal parameter that can optionally be passed</span></pre></div><div id="line5420"><pre><span class="token T_DOC_COMMENT">     * by reference.</span></pre></div><div id="line5421"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5422"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5423"><pre><span class="token T_DOC_COMMENT">     * //                 ---  -------</span></pre></div><div id="line5424"><pre><span class="token T_DOC_COMMENT">     * function foo(array &amp;$x, $y = 42) {}</span></pre></div><div id="line5425"><pre><span class="token T_DOC_COMMENT">     * //                 ---  -------</span></pre></div><div id="line5426"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5427"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5428"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5429"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5430"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5431"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterOrByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5432"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5433"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5434"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5435"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameterAndByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5436"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5437"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5438"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5439"><br/></div><div id="line5440"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5441"><pre><span class="token T_DOC_COMMENT">     * This method will parse a formal parameter that is passed by reference.</span></pre></div><div id="line5442"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5443"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5444"><pre><span class="token T_DOC_COMMENT">     * //                 ---  --------</span></pre></div><div id="line5445"><pre><span class="token T_DOC_COMMENT">     * function foo(array &amp;$x, &amp;$y = 42) {}</span></pre></div><div id="line5446"><pre><span class="token T_DOC_COMMENT">     * //                 ---  --------</span></pre></div><div id="line5447"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5448"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5449"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5450"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5451"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5452"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameterAndByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5453"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5454"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5455"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5456"><br/></div><div id="line5457"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFormalParameter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5458"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setPassedByReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5459"><br/></div><div id="line5460"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5461"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5462"><br/></div><div id="line5463"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5464"><pre><span class="token T_DOC_COMMENT">     * This method will parse a formal parameter. A formal parameter is at least</span></pre></div><div id="line5465"><pre><span class="token T_DOC_COMMENT">     * a variable name, but can also contain a default parameter value.</span></pre></div><div id="line5466"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5467"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5468"><pre><span class="token T_DOC_COMMENT">     * //               --  -------</span></pre></div><div id="line5469"><pre><span class="token T_DOC_COMMENT">     * function foo(Bar $x, $y = 42) {}</span></pre></div><div id="line5470"><pre><span class="token T_DOC_COMMENT">     * //               --  -------</span></pre></div><div id="line5471"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5472"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5473"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTFormalParameter</span></pre></div><div id="line5474"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line5475"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5476"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFormalParameter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5477"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5478"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstFormalParameter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5479"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$parameter</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5480"><br/></div><div id="line5481"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$parameter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5482"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5483"><br/></div><div id="line5484"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5485"><pre><span class="token T_DOC_COMMENT">     * Tests if the given token type is a valid formal parameter in the supported</span></pre></div><div id="line5486"><pre><span class="token T_DOC_COMMENT">     * PHP version.</span></pre></div><div id="line5487"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5488"><pre><span class="token T_DOC_COMMENT">     * @param integer $tokenType</span></pre></div><div id="line5489"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line5490"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line5491"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5492"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5493"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5494"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5495"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5496"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5497"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5498"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5499"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5500"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5501"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5502"><br/></div><div id="line5503"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5504"><pre><span class="token T_DOC_COMMENT">     * Parses a type hint that is valid in the supported PHP version.</span></pre></div><div id="line5505"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5506"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line5507"><pre><span class="token T_DOC_COMMENT">     * @since 1.0.0</span></pre></div><div id="line5508"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5509"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseTypeHint</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5510"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5511"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5512"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5513"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5514"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5515"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5516"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5517"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5518"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5519"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5520"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5521"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5522"><br/></div><div id="line5523"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5524"><pre><span class="token T_DOC_COMMENT">     * Extracts all dependencies from a callable body.</span></pre></div><div id="line5525"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5526"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTScope</span></pre></div><div id="line5527"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line5528"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5529"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5530"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5531"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scope</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5532"><br/></div><div id="line5533"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5534"><br/></div><div id="line5535"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5536"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5537"><br/></div><div id="line5538"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5539"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// TODO: Remove if-statement once, we have translated functions and</span></pre></div><div id="line5540"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">//       closures into ast-nodes</span></pre></div><div id="line5541"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTNode</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5542"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$scope</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5543"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5544"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5545"><br/></div><div id="line5546"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5547"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5548"><br/></div><div id="line5549"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scope</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5550"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5551"><br/></div><div id="line5552"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5553"><pre><span class="token T_DOC_COMMENT">     * Parse a statement.</span></pre></div><div id="line5554"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5555"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line5556"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line5557"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\EndOfTokenStreamException</span></pre></div><div id="line5558"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line5559"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5560"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5561"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5562"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_object</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5563"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5564"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5565"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_object</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5566"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5567"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5568"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">EndOfTokenStreamException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFileName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5569"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5570"><br/></div><div id="line5571"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5572"><pre><span class="token T_DOC_COMMENT">     * Parses an optional statement or returns &lt;b&gt;null&lt;/b&gt;.</span></pre></div><div id="line5573"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5574"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNode</span></pre></div><div id="line5575"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line5576"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5577"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5578"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5579"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5580"><br/></div><div id="line5581"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5582"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ECHO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5583"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseEchoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5584"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SWITCH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5585"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseSwitchStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5586"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRY</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5587"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTryStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5588"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_THROW</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5589"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseThrowStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5590"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_IF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5591"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseIfStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5592"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5593"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseForStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5594"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FOREACH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5595"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseForeachStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5596"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5597"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseDoWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5598"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_WHILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5599"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseWhileStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5600"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_RETURN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5601"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseReturnStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5602"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BREAK</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5603"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBreakStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5604"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONTINUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5605"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseContinueStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5606"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GOTO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5607"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseGotoStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5608"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_GLOBAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5609"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseGlobalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5610"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_UNSET</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5611"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseUnsetStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5612"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5613"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peekNext</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5614"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseLabelStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5615"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5616"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5617"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5618"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantDefinition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5619"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5620"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFunctionOrClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5621"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5622"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseCommentWithOptionalInlineClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5623"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5624"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5625"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span></pre></div><div id="line5626"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5627"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5628"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseRegularScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5629"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DECLARE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5630"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseDeclareStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5631"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5632"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDIF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5633"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ELSEIF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5634"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDFOR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5635"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDWHILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5636"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDSWITCH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5637"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDDECLARE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5638"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ENDFOREACH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5639"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5640"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5641"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DECLARE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5642"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseDeclareStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5643"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5644"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5645"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5646"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5647"><br/></div><div id="line5648"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5649"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5650"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNamespaceOrPackage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5651"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$trait</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseTraitDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5652"><br/></div><div id="line5653"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">restoreTrait</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5654"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5655"><br/></div><div id="line5656"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$trait</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5657"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INTERFACE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5658"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNamespaceOrPackage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5659"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseInterfaceDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5660"><br/></div><div id="line5661"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">restoreInterface</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5662"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5663"><br/></div><div id="line5664"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$interface</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5665"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5666"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5667"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5668"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNamespaceOrPackage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5669"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5670"><br/></div><div id="line5671"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">restoreClass</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5672"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5673"><br/></div><div id="line5674"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5675"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_YIELD</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5676"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseYield</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5677"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5678"><br/></div><div id="line5679"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5680"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$stmt</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5681"><br/></div><div id="line5682"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5683"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$stmt</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5684"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5685"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5686"><br/></div><div id="line5687"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$stmt</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5688"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5689"><br/></div><div id="line5690"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5691"><pre><span class="token T_DOC_COMMENT">     * Parses a sequence of none php code tokens and returns the token type of</span></pre></div><div id="line5692"><pre><span class="token T_DOC_COMMENT">     * the next token.</span></pre></div><div id="line5693"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5694"><pre><span class="token T_DOC_COMMENT">     * @return integer</span></pre></div><div id="line5695"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.12</span></pre></div><div id="line5696"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5697"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseNonePhpCode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5698"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5699"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLOSE_TAG</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5700"><br/></div><div id="line5701"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5702"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5703"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5704"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OPEN_TAG</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5705"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OPEN_TAG_WITH_ECHO</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5706"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5707"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5708"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5709"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5710"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5711"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5712"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5713"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5714"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5715"><br/></div><div id="line5716"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5717"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5718"><br/></div><div id="line5719"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5720"><pre><span class="token T_DOC_COMMENT">     * Parses a comment and optionally an embedded class or interface type</span></pre></div><div id="line5721"><pre><span class="token T_DOC_COMMENT">     * annotation.</span></pre></div><div id="line5722"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5723"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTComment</span></pre></div><div id="line5724"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line5725"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5726"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseCommentWithOptionalInlineClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5727"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5728"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5729"><br/></div><div id="line5730"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$comment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5731"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">REGEXP_INLINE_TYPE</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5732"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$comment</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5733"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5734"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5735"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5736"><br/></div><div id="line5737"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$comment</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">configureLinesAndColumns</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5738"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5739"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endLine</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5740"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">startColumn</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line5741"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">endColumn</span></pre></div><div id="line5742"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5743"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5744"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5745"><br/></div><div id="line5746"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5747"><pre><span class="token T_DOC_COMMENT">     * Parses an optional set of bound closure variables.</span></pre></div><div id="line5748"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5749"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTClosure $closure The context closure instance.</span></pre></div><div id="line5750"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5751"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClosure</span></pre></div><div id="line5752"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line5753"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5754"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseOptionalBoundVariables</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line5755"><pre><span class="token T_WHITESPACE">        </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTClosure</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$closure</span></pre></div><div id="line5756"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5757"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5758"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5759"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseBoundVariables</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5760"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5761"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5762"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5763"><br/></div><div id="line5764"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5765"><pre><span class="token T_DOC_COMMENT">     * Parses a list of bound closure variables.</span></pre></div><div id="line5766"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5767"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTClosure $closure The parent closure instance.</span></pre></div><div id="line5768"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5769"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClosure</span></pre></div><div id="line5770"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5771"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5772"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseBoundVariables</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTClosure</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5773"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5774"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5775"><br/></div><div id="line5776"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5777"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5778"><br/></div><div id="line5779"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5780"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5781"><br/></div><div id="line5782"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5783"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BITWISE_AND</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5784"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5785"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5786"><br/></div><div id="line5787"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5788"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5789"><br/></div><div id="line5790"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5791"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5792"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONTINUE">continue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5793"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5794"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5795"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5796"><br/></div><div id="line5797"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5798"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5799"><br/></div><div id="line5800"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5801"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5802"><br/></div><div id="line5803"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5804"><pre><span class="token T_DOC_COMMENT">     * Parses a php class/method name chain.</span></pre></div><div id="line5805"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5806"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5807"><pre><span class="token T_DOC_COMMENT">     * PDepend\Source\Parser::parse();</span></pre></div><div id="line5808"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5809"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5810"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line5811"><pre><span class="token T_DOC_COMMENT">     * @link   http://php.net/manual/en/language.namespaces.importing.php</span></pre></div><div id="line5812"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5813"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5814"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5815"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$fragments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedNameRaw</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5816"><br/></div><div id="line5817"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Check for fully qualified name</span></pre></div><div id="line5818"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5819"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">join</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5820"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5821"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5822"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'int'</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5823"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'bool'</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5824"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'float'</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5825"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'string'</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5826"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'callable'</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line5827"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5828"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5829"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5830"><br/></div><div id="line5831"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Search for an use alias</span></pre></div><div id="line5832"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$mapsTo</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">lookup</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5833"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$mapsTo</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5834"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Remove alias and add real namespace</span></pre></div><div id="line5835"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">array_shift</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5836"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">array_unshift</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$mapsTo</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5837"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span></pre></div><div id="line5838"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespacePrefixReplaced</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span></pre></div><div id="line5839"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5840"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Prepend current namespace</span></pre></div><div id="line5841"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">array_unshift</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5842"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5843"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">join</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5844"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5845"><br/></div><div id="line5846"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5847"><pre><span class="token T_DOC_COMMENT">     * This method parses a qualified PHP 5.3 class, interface and namespace</span></pre></div><div id="line5848"><pre><span class="token T_DOC_COMMENT">     * identifier and returns the collected tokens as a string array.</span></pre></div><div id="line5849"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5850"><pre><span class="token T_DOC_COMMENT">     * @return array(string)</span></pre></div><div id="line5851"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5852"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5853"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseQualifiedNameRaw</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5854"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5855"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Reset namespace prefix flag</span></pre></div><div id="line5856"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespacePrefixReplaced</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5857"><br/></div><div id="line5858"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume comments and fetch first token type</span></pre></div><div id="line5859"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5860"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5861"><br/></div><div id="line5862"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5863"><br/></div><div id="line5864"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5865"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Consume namespace keyword</span></pre></div><div id="line5866"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5867"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5868"><br/></div><div id="line5869"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Add current namespace as first token</span></pre></div><div id="line5870"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING_CAST">(string)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5871"><br/></div><div id="line5872"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Set prefixed flag to true</span></pre></div><div id="line5873"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespacePrefixReplaced</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5874"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5875"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5876"><br/></div><div id="line5877"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5878"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5879"><br/></div><div id="line5880"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Stop here for simple identifier</span></pre></div><div id="line5881"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5882"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5883"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5884"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5885"><br/></div><div id="line5886"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5887"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Next token must be a namespace separator</span></pre></div><div id="line5888"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5889"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5890"><br/></div><div id="line5891"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Append to qualified name</span></pre></div><div id="line5892"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5893"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5894"><br/></div><div id="line5895"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5896"><br/></div><div id="line5897"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Get next token type</span></pre></div><div id="line5898"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5899"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5900"><br/></div><div id="line5901"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5902"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5903"><br/></div><div id="line5904"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5905"><pre><span class="token T_DOC_COMMENT">     * This method parses a PHP 5.3 namespace declaration.</span></pre></div><div id="line5906"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5907"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line5908"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5909"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5910"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseNamespaceDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5911"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5912"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume namespace keyword and strip optional comments</span></pre></div><div id="line5913"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NAMESPACE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5914"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5915"><br/></div><div id="line5916"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5917"><br/></div><div id="line5918"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Search for a namespace identifier</span></pre></div><div id="line5919"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5920"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Reset namespace property</span></pre></div><div id="line5921"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5922"><br/></div><div id="line5923"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5924"><br/></div><div id="line5925"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5926"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5927"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5928"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5929"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5930"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5931"><br/></div><div id="line5932"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Create a package for this namespace</span></pre></div><div id="line5933"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5934"><br/></div><div id="line5935"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">resetScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5936"><br/></div><div id="line5937"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5938"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Same namespace reference, something like:</span></pre></div><div id="line5939"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">//   new namespace\Foo();</span></pre></div><div id="line5940"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// or:</span></pre></div><div id="line5941"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">//   $x = namespace\foo::bar();</span></pre></div><div id="line5942"><br/></div><div id="line5943"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Now parse a qualified name</span></pre></div><div id="line5944"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedNameRaw</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5945"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5946"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Consume opening curly brace</span></pre></div><div id="line5947"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CURLY_BRACE_OPEN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5948"><br/></div><div id="line5949"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Create a package for this namespace</span></pre></div><div id="line5950"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5951"><br/></div><div id="line5952"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">resetScope</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5953"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5954"><br/></div><div id="line5955"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5956"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5957"><br/></div><div id="line5958"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5959"><pre><span class="token T_DOC_COMMENT">     * This method parses a list of PHP 5.3 use declarations and adds a mapping</span></pre></div><div id="line5960"><pre><span class="token T_DOC_COMMENT">     * between short name and full qualified name to the use symbol table.</span></pre></div><div id="line5961"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5962"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line5963"><pre><span class="token T_DOC_COMMENT">     * use \foo\bar as fb,</span></pre></div><div id="line5964"><pre><span class="token T_DOC_COMMENT">     *     \foobar\Bar;</span></pre></div><div id="line5965"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line5966"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5967"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line5968"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5969"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5970"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseUseDeclarations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5971"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5972"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume use keyword</span></pre></div><div id="line5973"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_USE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5974"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5975"><br/></div><div id="line5976"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Parse all use declarations</span></pre></div><div id="line5977"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseUseDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5978"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5979"><br/></div><div id="line5980"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume closing semicolon</span></pre></div><div id="line5981"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5982"><br/></div><div id="line5983"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Reset any previous state</span></pre></div><div id="line5984"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">reset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5985"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line5986"><br/></div><div id="line5987"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5988"><pre><span class="token T_DOC_COMMENT">     * This method parses a single use declaration and adds a mapping between</span></pre></div><div id="line5989"><pre><span class="token T_DOC_COMMENT">     * short name and full qualified name to the use symbol table.</span></pre></div><div id="line5990"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line5991"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line5992"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line5993"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line5994"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseUseDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line5995"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line5996"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$fragments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseQualifiedNameRaw</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5997"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line5998"><br/></div><div id="line5999"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Add leading backslash, because aliases must be full qualified</span></pre></div><div id="line6000"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// http://php.net/manual/en/language.namespaces.importing.php</span></pre></div><div id="line6001"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6002"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">array_unshift</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6003"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6004"><br/></div><div id="line6005"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6006"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_AS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6007"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6008"><br/></div><div id="line6009"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6010"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6011"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6012"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$image</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6013"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6014"><br/></div><div id="line6015"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Add mapping between image and qualified name to symbol table</span></pre></div><div id="line6016"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">useSymbolTable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">add</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$image</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">join</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fragments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6017"><br/></div><div id="line6018"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Check for a following use declaration</span></pre></div><div id="line6019"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6020"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Consume comma token and comments</span></pre></div><div id="line6021"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6022"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6023"><br/></div><div id="line6024"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseUseDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6025"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6026"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6027"><br/></div><div id="line6028"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6029"><pre><span class="token T_DOC_COMMENT">     * Parses a single constant definition with one or more constant declarators.</span></pre></div><div id="line6030"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6031"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6032"><pre><span class="token T_DOC_COMMENT">     * class Foo</span></pre></div><div id="line6033"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line6034"><pre><span class="token T_DOC_COMMENT">     * //  ------------------------</span></pre></div><div id="line6035"><pre><span class="token T_DOC_COMMENT">     *     const FOO = 42, BAR = 23;</span></pre></div><div id="line6036"><pre><span class="token T_DOC_COMMENT">     * //  ------------------------</span></pre></div><div id="line6037"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6038"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6039"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6040"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTConstantDefinition</span></pre></div><div id="line6041"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6042"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6043"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstantDefinition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6044"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6045"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6046"><br/></div><div id="line6047"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONST</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6048"><br/></div><div id="line6049"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$definition</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstantDefinition</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6050"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$definition</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6051"><br/></div><div id="line6052"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6053"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$definition</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6054"><br/></div><div id="line6055"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6056"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6057"><br/></div><div id="line6058"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6059"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6060"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6061"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6062"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6063"><br/></div><div id="line6064"><br/></div><div id="line6065"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$definition</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$definition</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6066"><br/></div><div id="line6067"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6068"><br/></div><div id="line6069"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$definition</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6070"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6071"><br/></div><div id="line6072"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6073"><pre><span class="token T_DOC_COMMENT">     * Parses a single constant declarator.</span></pre></div><div id="line6074"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6075"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6076"><pre><span class="token T_DOC_COMMENT">     * class Foo</span></pre></div><div id="line6077"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line6078"><pre><span class="token T_DOC_COMMENT">     *     //    --------</span></pre></div><div id="line6079"><pre><span class="token T_DOC_COMMENT">     *     const BAR = 42;</span></pre></div><div id="line6080"><pre><span class="token T_DOC_COMMENT">     *     //    --------</span></pre></div><div id="line6081"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6082"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6083"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6084"><pre><span class="token T_DOC_COMMENT">     * Or in a comma separated constant defintion:</span></pre></div><div id="line6085"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6086"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6087"><pre><span class="token T_DOC_COMMENT">     * class Foo</span></pre></div><div id="line6088"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line6089"><pre><span class="token T_DOC_COMMENT">     *     //    --------</span></pre></div><div id="line6090"><pre><span class="token T_DOC_COMMENT">     *     const BAR = 42,</span></pre></div><div id="line6091"><pre><span class="token T_DOC_COMMENT">     *     //    --------</span></pre></div><div id="line6092"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6093"><pre><span class="token T_DOC_COMMENT">     *     //    --------------</span></pre></div><div id="line6094"><pre><span class="token T_DOC_COMMENT">     *     const BAZ = 'Foobar',</span></pre></div><div id="line6095"><pre><span class="token T_DOC_COMMENT">     *     //    --------------</span></pre></div><div id="line6096"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6097"><pre><span class="token T_DOC_COMMENT">     *     //    ----------</span></pre></div><div id="line6098"><pre><span class="token T_DOC_COMMENT">     *     const FOO = 3.14;</span></pre></div><div id="line6099"><pre><span class="token T_DOC_COMMENT">     *     //    ----------</span></pre></div><div id="line6100"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6101"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6102"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6103"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTConstantDeclarator</span></pre></div><div id="line6104"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6105"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6106"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstantDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6107"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6108"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Remove leading comments and create a new token stack</span></pre></div><div id="line6109"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6110"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6111"><br/></div><div id="line6112"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6113"><br/></div><div id="line6114"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6115"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EQUAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6116"><br/></div><div id="line6117"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declarator</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstConstantDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6118"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declarator</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseConstantDeclaratorValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6119"><br/></div><div id="line6120"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$declarator</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6121"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6122"><br/></div><div id="line6123"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6124"><pre><span class="token T_DOC_COMMENT">     * Parses the value of a php constant. By default this can be only static</span></pre></div><div id="line6125"><pre><span class="token T_DOC_COMMENT">     * values that were allowed in the oldest supported PHP version.</span></pre></div><div id="line6126"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6127"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTValue</span></pre></div><div id="line6128"><pre><span class="token T_DOC_COMMENT">     * @since 2.2.x</span></pre></div><div id="line6129"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6130"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseConstantDeclaratorValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6131"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6132"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6133"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6134"><br/></div><div id="line6135"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6136"><pre><span class="token T_DOC_COMMENT">     * This method parses a static variable declaration list, a member primary</span></pre></div><div id="line6137"><pre><span class="token T_DOC_COMMENT">     * prefix invoked in the static context of a class or it parses a static</span></pre></div><div id="line6138"><pre><span class="token T_DOC_COMMENT">     * closure declaration.</span></pre></div><div id="line6139"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6140"><pre><span class="token T_DOC_COMMENT">     * Static variable:</span></pre></div><div id="line6141"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6142"><pre><span class="token T_DOC_COMMENT">     * function foo() {</span></pre></div><div id="line6143"><pre><span class="token T_DOC_COMMENT">     * //  ------------------------------</span></pre></div><div id="line6144"><pre><span class="token T_DOC_COMMENT">     *     static $foo, $bar, $baz = null;</span></pre></div><div id="line6145"><pre><span class="token T_DOC_COMMENT">     * //  ------------------------------</span></pre></div><div id="line6146"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6147"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6148"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6149"><pre><span class="token T_DOC_COMMENT">     * Static method invocation:</span></pre></div><div id="line6150"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6151"><pre><span class="token T_DOC_COMMENT">     * class Foo {</span></pre></div><div id="line6152"><pre><span class="token T_DOC_COMMENT">     *     public function baz() {</span></pre></div><div id="line6153"><pre><span class="token T_DOC_COMMENT">     * //      ----------------</span></pre></div><div id="line6154"><pre><span class="token T_DOC_COMMENT">     *         static::foobar();</span></pre></div><div id="line6155"><pre><span class="token T_DOC_COMMENT">     * //      ----------------</span></pre></div><div id="line6156"><pre><span class="token T_DOC_COMMENT">     *     }</span></pre></div><div id="line6157"><pre><span class="token T_DOC_COMMENT">     *     public function foobar() {}</span></pre></div><div id="line6158"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6159"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6160"><pre><span class="token T_DOC_COMMENT">     * class Bar extends Foo {</span></pre></div><div id="line6161"><pre><span class="token T_DOC_COMMENT">     *     public function foobar() {}</span></pre></div><div id="line6162"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6163"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6164"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6165"><pre><span class="token T_DOC_COMMENT">     * Static closure declaration:</span></pre></div><div id="line6166"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6167"><pre><span class="token T_DOC_COMMENT">     * $closure = static function($x, $y) {</span></pre></div><div id="line6168"><pre><span class="token T_DOC_COMMENT">     *     return ($x * $y);</span></pre></div><div id="line6169"><pre><span class="token T_DOC_COMMENT">     * };</span></pre></div><div id="line6170"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6171"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6172"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTConstant</span></pre></div><div id="line6173"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\ParserException</span></pre></div><div id="line6174"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line6175"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6176"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6177"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticVariableDeclarationOrMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6178"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6179"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6180"><br/></div><div id="line6181"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Consume static token and strip optional comments</span></pre></div><div id="line6182"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6183"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6184"><br/></div><div id="line6185"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Fetch next token type</span></pre></div><div id="line6186"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6187"><br/></div><div id="line6188"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_OPEN</span></pre></div><div id="line6189"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span></pre></div><div id="line6190"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6191"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$static</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6192"><br/></div><div id="line6193"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$prefix</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticMemberPrimaryPrefix</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$static</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6194"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$prefix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6195"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6196"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$closure</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseClosureDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6197"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$closure</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setStatic</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6198"><br/></div><div id="line6199"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$closure</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6200"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6201"><br/></div><div id="line6202"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declaration</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticVariableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6203"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$declaration</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6204"><br/></div><div id="line6205"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6206"><br/></div><div id="line6207"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6208"><pre><span class="token T_DOC_COMMENT">     * This method will parse a static variable declaration.</span></pre></div><div id="line6209"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6210"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6211"><pre><span class="token T_DOC_COMMENT">     * function foo()</span></pre></div><div id="line6212"><pre><span class="token T_DOC_COMMENT">     * {</span></pre></div><div id="line6213"><pre><span class="token T_DOC_COMMENT">     *     // First declaration</span></pre></div><div id="line6214"><pre><span class="token T_DOC_COMMENT">     *     static $foo;</span></pre></div><div id="line6215"><pre><span class="token T_DOC_COMMENT">     *     // Second declaration</span></pre></div><div id="line6216"><pre><span class="token T_DOC_COMMENT">     *     static $bar = array();</span></pre></div><div id="line6217"><pre><span class="token T_DOC_COMMENT">     *     // Third declaration</span></pre></div><div id="line6218"><pre><span class="token T_DOC_COMMENT">     *     static $baz    = array(),</span></pre></div><div id="line6219"><pre><span class="token T_DOC_COMMENT">     *            $foobar = null,</span></pre></div><div id="line6220"><pre><span class="token T_DOC_COMMENT">     *            $barbaz;</span></pre></div><div id="line6221"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6222"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6223"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6224"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\Tokenizer\Token $token Token with the "static" keyword.</span></pre></div><div id="line6225"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTStaticVariableDeclaration</span></pre></div><div id="line6226"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6227"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6228"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticVariableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Token</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6229"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6230"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$staticDeclaration</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstStaticVariableDeclaration</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6231"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span></pre></div><div id="line6232"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6233"><br/></div><div id="line6234"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Strip optional comments</span></pre></div><div id="line6235"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6236"><br/></div><div id="line6237"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Fetch next token type</span></pre></div><div id="line6238"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6239"><br/></div><div id="line6240"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6241"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$staticDeclaration</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVariableDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6242"><br/></div><div id="line6243"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6244"><br/></div><div id="line6245"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Semicolon terminates static declaration</span></pre></div><div id="line6246"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6247"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6248"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6249"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6250"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// We are here, so there must be a next declarator</span></pre></div><div id="line6251"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6252"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6253"><br/></div><div id="line6254"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$staticDeclaration</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6255"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6256"><br/></div><div id="line6257"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6258"><pre><span class="token T_DOC_COMMENT">     * This method will parse a variable declarator.</span></pre></div><div id="line6259"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6260"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line6261"><pre><span class="token T_DOC_COMMENT">     * // Parameter declarator</span></pre></div><div id="line6262"><pre><span class="token T_DOC_COMMENT">     * function foo($x = 23) {</span></pre></div><div id="line6263"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6264"><pre><span class="token T_DOC_COMMENT">     * // Property declarator</span></pre></div><div id="line6265"><pre><span class="token T_DOC_COMMENT">     * class Foo{</span></pre></div><div id="line6266"><pre><span class="token T_DOC_COMMENT">     *     protected $bar = 42;</span></pre></div><div id="line6267"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6268"><pre><span class="token T_DOC_COMMENT">     * // Static declarator</span></pre></div><div id="line6269"><pre><span class="token T_DOC_COMMENT">     * function baz() {</span></pre></div><div id="line6270"><pre><span class="token T_DOC_COMMENT">     *     static $foo;</span></pre></div><div id="line6271"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line6272"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line6273"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6274"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTVariableDeclarator</span></pre></div><div id="line6275"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6276"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6277"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVariableDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6278"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6279"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6280"><br/></div><div id="line6281"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_VARIABLE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6282"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6283"><br/></div><div id="line6284"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$declarator</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstVariableDeclarator</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6285"><br/></div><div id="line6286"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EQUAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6287"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EQUAL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6288"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$declarator</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticValueOrStaticArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6289"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6290"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$declarator</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6291"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6292"><br/></div><div id="line6293"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6294"><pre><span class="token T_DOC_COMMENT">     * This method will parse a static value or a static array as it is</span></pre></div><div id="line6295"><pre><span class="token T_DOC_COMMENT">     * used as default value for a parameter or property declaration.</span></pre></div><div id="line6296"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6297"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTValue</span></pre></div><div id="line6298"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6299"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6300"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticValueOrStaticArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6301"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6302"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isArrayStartDelimiter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6304"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// TODO: Use default value as value!</span></pre></div><div id="line6305"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">doParseArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6306"><br/></div><div id="line6307"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$value</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6308"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$value</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6309"><br/></div><div id="line6310"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6311"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6312"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6313"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6314"><br/></div><div id="line6315"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6316"><pre><span class="token T_DOC_COMMENT">     * This method will parse a static default value as it is used for a</span></pre></div><div id="line6317"><pre><span class="token T_DOC_COMMENT">     * parameter, property or constant declaration.</span></pre></div><div id="line6318"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6319"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTValue</span></pre></div><div id="line6320"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.5</span></pre></div><div id="line6321"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6322"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6323"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6324"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ASTValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6325"><br/></div><div id="line6326"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6327"><br/></div><div id="line6328"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// By default all parameters positive signed</span></pre></div><div id="line6329"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$signed</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6330"><br/></div><div id="line6331"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6332"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6333"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6334"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMA</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6335"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SEMICOLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6336"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6337"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isValueAvailable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6338"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6339"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6340"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">MissingValueException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6341"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6342"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NULL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6343"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6344"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6345"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6346"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRUE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6347"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6348"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6349"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6350"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FALSE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6351"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6352"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6353"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6354"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LNUMBER</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6355"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$signed</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MULT">*</span><span class="token T_WHITESPACE"> </span><span class="token T_INT_CAST">(int)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6356"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6357"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DNUMBER</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6358"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DNUMBER</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6359"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$signed</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MULT">*</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_CAST">(double)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6360"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6361"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONSTANT_ENCAPSED_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6362"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CONSTANT_ENCAPSED_STRING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6363"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6364"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6365"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6366"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_COLON</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6367"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6368"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_FQN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6369"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_FQN</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6370"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6371"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PLUS</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6372"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PLUS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6373"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6374"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MINUS</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6375"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_MINUS</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6376"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$signed</span><span class="token T_WHITESPACE"> </span><span class="token T_MUL_EQUAL">*=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6377"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6378"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_QUOTE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6379"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStringSequence</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6380"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6381"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DIR</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6382"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FILE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6383"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_LINE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6384"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SELF</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6385"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_NS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6386"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNC_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6387"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENT</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6388"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STRING</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6389"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_STATIC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6390"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6391"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_METHOD_C</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6392"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_BACKSLASH</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6393"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_OPEN</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6394"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_SQUARED_BRACKET_CLOSE</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6395"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_COMMENT">// There is a default value but we don't handle it at the moment.</span></pre></div><div id="line6396"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6397"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6398"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6399"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_START_HEREDOC</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6400"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6401"><pre><span class="token T_WHITESPACE">                        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseHeredoc</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getImage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6402"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6403"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6404"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line6405"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStaticValueVersionSpecific</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$defaultValue</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6406"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6407"><br/></div><div id="line6408"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6409"><br/></div><div id="line6410"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6411"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6412"><br/></div><div id="line6413"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// We should never reach this, so throw an exception</span></pre></div><div id="line6414"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6415"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6416"><br/></div><div id="line6417"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6418"><pre><span class="token T_DOC_COMMENT">     * Parses additional static values that are valid in the supported php version.</span></pre></div><div id="line6419"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6420"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\ASTValue $value</span></pre></div><div id="line6421"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTValue</span></pre></div><div id="line6422"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line6423"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6424"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseStaticValueVersionSpecific</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ASTValue</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6425"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6426"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6427"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6428"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6429"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6430"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6431"><br/></div><div id="line6432"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6433"><pre><span class="token T_DOC_COMMENT">     * Checks if the given expression is a read/write variable as defined in</span></pre></div><div id="line6434"><pre><span class="token T_DOC_COMMENT">     * the PHP zend_language_parser.y definition.</span></pre></div><div id="line6435"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6436"><pre><span class="token T_DOC_COMMENT">     * @param \PDepend\Source\AST\ASTNode $expr The context node instance.</span></pre></div><div id="line6437"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6438"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line6439"><pre><span class="token T_DOC_COMMENT">     * @since  0.10.0</span></pre></div><div id="line6440"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6441"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isReadWriteVariable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6442"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6443"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTVariable</span></pre></div><div id="line6444"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTFunctionPostfix</span></pre></div><div id="line6445"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTVariableVariable</span></pre></div><div id="line6446"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTCompoundVariable</span></pre></div><div id="line6447"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$expr</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">PDepend</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Source</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AST</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">ASTMemberPrimaryPrefix</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6448"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6449"><br/></div><div id="line6450"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6451"><pre><span class="token T_DOC_COMMENT">     * This method creates a qualified class or interface name based on the</span></pre></div><div id="line6452"><pre><span class="token T_DOC_COMMENT">     * current parser state. By default method uses the current namespace scope</span></pre></div><div id="line6453"><pre><span class="token T_DOC_COMMENT">     * as prefix for the given local name. And it will fallback to a previously</span></pre></div><div id="line6454"><pre><span class="token T_DOC_COMMENT">     * parsed package annotation, when no namespace declaration was parsed.</span></pre></div><div id="line6455"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6456"><pre><span class="token T_DOC_COMMENT">     * @param string $localName The local class or interface name.</span></pre></div><div id="line6457"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6458"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line6459"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6460"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">createQualifiedTypeName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$localName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6461"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6462"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ltrim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNamespaceOrPackageName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$localName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6463"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6464"><br/></div><div id="line6465"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6466"><pre><span class="token T_DOC_COMMENT">     * Returns the name of a declared names. When the parsed code is not namespaced</span></pre></div><div id="line6467"><pre><span class="token T_DOC_COMMENT">     * this method will return the name from the @package annotation.</span></pre></div><div id="line6468"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6469"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line6470"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.8</span></pre></div><div id="line6471"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6472"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getNamespaceOrPackageName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6473"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6474"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6475"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6476"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6477"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">namespaceName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6478"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6479"><br/></div><div id="line6480"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6481"><pre><span class="token T_DOC_COMMENT">     * Returns the currently active package or namespace.</span></pre></div><div id="line6482"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6483"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTNamespace</span></pre></div><div id="line6484"><pre><span class="token T_DOC_COMMENT">     * @since  1.0.0</span></pre></div><div id="line6485"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6486"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getNamespaceOrPackage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6487"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6488"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildNamespace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getNamespaceOrPackageName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6489"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6490"><br/></div><div id="line6491"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6492"><pre><span class="token T_DOC_COMMENT">     * Extracts the @package information from the given comment.</span></pre></div><div id="line6493"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6494"><pre><span class="token T_DOC_COMMENT">     * @param string $comment</span></pre></div><div id="line6495"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line6496"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6497"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parsePackageAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6498"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6499"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">getenv</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'DISMISS_PACKAGES'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6500"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6501"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">globalPackageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6502"><br/></div><div id="line6503"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6504"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6505"><br/></div><div id="line6506"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6507"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'#\*\s*@package\s+(\S+)#'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6508"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6509"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'#\*\s*@subpackage\s+(\S+)#'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6510"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$package</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'\\'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6511"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6512"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6513"><br/></div><div id="line6514"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Check for doc level comment</span></pre></div><div id="line6515"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">globalPackageName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Builder</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEFAULT_NAMESPACE</span></pre></div><div id="line6516"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">isFileComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span></pre></div><div id="line6517"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6518"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">globalPackageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$package</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6519"><br/></div><div id="line6520"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">compilationUnit</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6521"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6522"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$package</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6523"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6524"><br/></div><div id="line6525"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6526"><pre><span class="token T_DOC_COMMENT">     * Checks that the current token could be used as file comment.</span></pre></div><div id="line6527"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6528"><pre><span class="token T_DOC_COMMENT">     * This method checks that the previous token is an open tag and the following</span></pre></div><div id="line6529"><pre><span class="token T_DOC_COMMENT">     * token is not a class, a interface, final, abstract or a function.</span></pre></div><div id="line6530"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6531"><pre><span class="token T_DOC_COMMENT">     * @return boolean</span></pre></div><div id="line6532"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6533"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isFileComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6534"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6535"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">prev</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_OPEN_TAG</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6536"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6537"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6538"><br/></div><div id="line6539"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$notExpectedTags</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6540"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_CLASS</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6541"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FINAL</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6542"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_TRAIT</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6543"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_ABSTRACT</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6544"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_FUNCTION</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6545"><pre><span class="token T_WHITESPACE">            </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_INTERFACE</span></pre></div><div id="line6546"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6547"><br/></div><div id="line6548"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_STRING">in_array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$notExpectedTags</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6549"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6550"><br/></div><div id="line6551"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6552"><pre><span class="token T_DOC_COMMENT">     * Returns the class names of all &lt;b&gt;throws&lt;/b&gt; annotations with in the</span></pre></div><div id="line6553"><pre><span class="token T_DOC_COMMENT">     * given comment block.</span></pre></div><div id="line6554"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6555"><pre><span class="token T_DOC_COMMENT">     * @param string $comment The context doc comment block.</span></pre></div><div id="line6556"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6557"><pre><span class="token T_DOC_COMMENT">     * @return array</span></pre></div><div id="line6558"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6559"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseThrowsAnnotations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6560"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6561"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$throws</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6562"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match_all</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">REGEXP_THROWS_TYPE</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6563"><pre><span class="token T_WHITESPACE">            </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6564"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$throws</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6565"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6566"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6567"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$throws</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6568"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6569"><br/></div><div id="line6570"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6571"><pre><span class="token T_DOC_COMMENT">     * This method parses the given doc comment text for a return annotation and</span></pre></div><div id="line6572"><pre><span class="token T_DOC_COMMENT">     * it returns the found return type.</span></pre></div><div id="line6573"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6574"><pre><span class="token T_DOC_COMMENT">     * @param string $comment A doc comment text.</span></pre></div><div id="line6575"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6576"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line6577"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6578"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseReturnAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6579"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6580"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">REGEXP_RETURN_TYPE</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6581"><pre><span class="token T_WHITESPACE">            </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">explode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'|'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6582"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Type</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">isScalarType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6583"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6584"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6585"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6586"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6587"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6588"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6589"><br/></div><div id="line6590"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6591"><pre><span class="token T_DOC_COMMENT">     * This method parses the given doc comment text for a var annotation and</span></pre></div><div id="line6592"><pre><span class="token T_DOC_COMMENT">     * it returns the found property types.</span></pre></div><div id="line6593"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6594"><pre><span class="token T_DOC_COMMENT">     * @param  string $comment A doc comment text.</span></pre></div><div id="line6595"><pre><span class="token T_DOC_COMMENT">     * @return array(string)</span></pre></div><div id="line6596"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6597"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseVarAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6598"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6599"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">REGEXP_VAR_TYPE</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comment</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6600"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">array_map</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'trim'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">explode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'|'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">end</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$match</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6601"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6602"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6603"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6604"><br/></div><div id="line6605"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6606"><pre><span class="token T_DOC_COMMENT">     * This method will extract the type information of a property from it's</span></pre></div><div id="line6607"><pre><span class="token T_DOC_COMMENT">     * doc comment information. The returned value will be &lt;b&gt;null&lt;/b&gt; when no</span></pre></div><div id="line6608"><pre><span class="token T_DOC_COMMENT">     * type information exists.</span></pre></div><div id="line6609"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6610"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTType</span></pre></div><div id="line6611"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6612"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6613"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFieldDeclarationType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6614"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6615"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Skip, if ignore annotations is set</span></pre></div><div id="line6616"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">ignoreAnnotations</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6617"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6618"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6619"><br/></div><div id="line6620"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$reference</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseFieldDeclarationClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6621"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$reference</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6622"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$reference</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6623"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6624"><br/></div><div id="line6625"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$annotations</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVarAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6626"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotations</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6627"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Type</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">isPrimitiveType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6628"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstScalarType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6629"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_STRING">Type</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">getPrimitiveType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6630"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6631"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Type</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">isArrayType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6632"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstTypeArray</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6633"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6634"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6635"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6636"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6637"><br/></div><div id="line6638"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6639"><pre><span class="token T_DOC_COMMENT">     * Extracts non scalar types from a field doc comment and creates a</span></pre></div><div id="line6640"><pre><span class="token T_DOC_COMMENT">     * matching type instance.</span></pre></div><div id="line6641"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6642"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTClassOrInterfaceReference</span></pre></div><div id="line6643"><pre><span class="token T_DOC_COMMENT">     * @since  0.9.6</span></pre></div><div id="line6644"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6645"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseFieldDeclarationClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6646"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6647"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$annotations</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseVarAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6648"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotations</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6649"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Type</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">isScalarType</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$annotation</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6650"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6651"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$annotation</span></pre></div><div id="line6652"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6653"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6654"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6655"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6656"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6657"><br/></div><div id="line6658"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6659"><pre><span class="token T_DOC_COMMENT">     * This method parses a yield-statement node.</span></pre></div><div id="line6660"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6661"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\AST\ASTYieldStatmenet</span></pre></div><div id="line6662"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6663"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parseYield</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6664"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6665"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">push</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6666"><br/></div><div id="line6667"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_YIELD</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6668"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6669"><br/></div><div id="line6670"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$yield</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstYieldStatement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6671"><br/></div><div id="line6672"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$node</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6673"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6674"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$yield</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$node</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6675"><br/></div><div id="line6676"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6677"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOUBLE_ARROW</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6678"><br/></div><div id="line6679"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$yield</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addChild</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseOptionalExpression</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6680"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6681"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6682"><br/></div><div id="line6683"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6684"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_PARENTHESIS_CLOSE</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6685"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$yield</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6686"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6687"><br/></div><div id="line6688"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseStatementTermination</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6689"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setNodePositionsAndReturn</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$yield</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6690"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6691"><br/></div><div id="line6692"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6693"><pre><span class="token T_DOC_COMMENT">     * Extracts documented &lt;b&gt;throws&lt;/b&gt; and &lt;b&gt;return&lt;/b&gt; types and sets them</span></pre></div><div id="line6694"><pre><span class="token T_DOC_COMMENT">     * to the given &lt;b&gt;$callable&lt;/b&gt; instance.</span></pre></div><div id="line6695"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6696"><pre><span class="token T_DOC_COMMENT">     * @param  \PDepend\Source\AST\AbstractASTCallable $callable</span></pre></div><div id="line6697"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line6698"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6699"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">prepareCallable</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">AbstractASTCallable</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$callable</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6700"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6701"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Skip, if ignore annotations is set</span></pre></div><div id="line6702"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">ignoreAnnotations</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6703"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6704"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6705"><br/></div><div id="line6706"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Get all @throws Types</span></pre></div><div id="line6707"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$throws</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseThrowsAnnotations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6708"><pre><span class="token T_WHITESPACE">        </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$throws</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6709"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addExceptionClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6710"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6711"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6712"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6713"><br/></div><div id="line6714"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Stop here if return class already exists.</span></pre></div><div id="line6715"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">hasReturnClass</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6716"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6717"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6718"><br/></div><div id="line6719"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Get return annotation</span></pre></div><div id="line6720"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseReturnAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getComment</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6721"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6722"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$callable</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setReturnClassReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6723"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">builder</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">buildAstClassOrInterfaceReference</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$qualifiedName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6724"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6725"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6726"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6727"><br/></div><div id="line6728"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6729"><pre><span class="token T_DOC_COMMENT">     * This method will consume the next token in the token stream. It will</span></pre></div><div id="line6730"><pre><span class="token T_DOC_COMMENT">     * throw an exception if the type of this token is not identical with</span></pre></div><div id="line6731"><pre><span class="token T_DOC_COMMENT">     * &lt;b&gt;$tokenType&lt;/b&gt;.</span></pre></div><div id="line6732"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6733"><pre><span class="token T_DOC_COMMENT">     * @param  integer $tokenType The next expected token type.</span></pre></div><div id="line6734"><pre><span class="token T_DOC_COMMENT">     * @return \PDepend\Source\Tokenizer\Token</span></pre></div><div id="line6735"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\TokenStreamEndException</span></pre></div><div id="line6736"><pre><span class="token T_DOC_COMMENT">     * @throws \PDepend\Source\Parser\UnexpectedTokenException</span></pre></div><div id="line6737"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6738"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6739"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6740"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">next</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6741"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokenizer</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_EOF</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6742"><pre><span class="token T_WHITESPACE">            </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TokenStreamEndException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6743"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tokenType</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6744"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenStack</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">add</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6745"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6746"><br/></div><div id="line6747"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">UnexpectedTokenException</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line6748"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line6749"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getSourceFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6750"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6751"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6752"><br/></div><div id="line6753"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line6754"><pre><span class="token T_DOC_COMMENT">     * This method will consume all comment tokens from the token stream.</span></pre></div><div id="line6755"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line6756"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line6757"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line6758"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">consumeComments</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line6759"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6760"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6761"><pre><span class="token T_WHITESPACE">        </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_DOC_COMMENT</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6762"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$token</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">consumeToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6763"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$type</span><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">tokenizer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">peek</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6764"><br/></div><div id="line6765"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Tokens</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">T_COMMENT</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6766"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CONTINUE">continue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6767"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6768"><br/></div><div id="line6769"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">docComment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6770"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'(\s+@package\s+[^\s]+\s+)'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line6771"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">packageName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parsePackageAnnotation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$token</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">image</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6772"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6773"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6774"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6775"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line6776"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
