<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of random_bytes_dev_urandom.php</title><link rel="stylesheet" type="text/css" href="../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file random_bytes_dev_urandom.php</h1><p>
                        Size: 4,543 Bytes - Last Modified: 2016-08-13T21:27:24+00:00</p><section><h2><small>/home/codeur/git/test/test/libraries/vendor/paragonie/random_compat/lib/</small>random_bytes_dev_urandom.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Random_* Compatibility Library </span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * for using the new PHP 7 random_* API in PHP 5 projects</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * The MIT License (MIT)</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * Copyright (c) 2015 Paragon Initiative Enterprises</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * of this software and associated documentation files (the "Software"), to deal</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * in the Software without restriction, including without limitation the rights</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * copies of the Software, and to permit persons to whom the Software is</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * furnished to do so, subject to the following conditions:</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * The above copyright notice and this permission notice shall be included in</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * all copies or substantial portions of the Software.</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * SOFTWARE.</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line28"><br/></div><div id="line29"><pre><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'RANDOM_COMPAT_READ_BUFFER'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line30"><pre><span class="token T_WHITESPACE">    </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'RANDOM_COMPAT_READ_BUFFER'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">8</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line31"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * Unless open_basedir is enabled, use /dev/urandom for</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * random numbers in accordance with best practices</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * Why we use /dev/urandom and not /dev/random</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> * @ref http://sockpuppet.org/blog/2014/02/25/safely-generate-random-numbers</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * @param int $bytes</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT"> * @throws Exception</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT"> * @return string</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line46"><pre><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">random_bytes</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$bytes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line47"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">    </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fp</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">     * This block should only be run once</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">         * We use /dev/urandom if it is a char device.</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">         * We never fall back to /dev/random</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">         */</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$fp</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">fopen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/dev/urandom'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'rb'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$st</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">fstat</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$st</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'mode'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0170000</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">020000</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line61"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">fclose</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line62"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$fp</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line63"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line65"><br/></div><div id="line66"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">             * stream_set_read_buffer() does not exist in HHVM</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">             * </span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">             * If we don't set the stream's read buffer to 0, PHP will</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">             * internally buffer 8192 bytes, which can waste entropy</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">             * </span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">             * stream_set_read_buffer returns 0 on success</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">             */</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">function_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'stream_set_read_buffer'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">stream_set_read_buffer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RANDOM_COMPAT_READ_BUFFER</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">function_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'stream_set_chunk_size'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line79"><pre><span class="token T_WHITESPACE">                </span><span class="token T_STRING">stream_set_chunk_size</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RANDOM_COMPAT_READ_BUFFER</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line83"><br/></div><div id="line84"><pre><span class="token T_WHITESPACE">    </span><span class="token T_TRY">try</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$bytes</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RandomCompat_intval</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$bytes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_CATCH">catch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">TypeError</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ex</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line87"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TypeError</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'random_bytes(): $bytes must be an integer'</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line91"><br/></div><div id="line92"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$bytes</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_LT">&lt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">        </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Error</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Length must be greater than 0'</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line96"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line97"><br/></div><div id="line98"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     * This if() block only runs if we managed to open a file handle</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * </span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     * It does not belong in an else {} block, because the above </span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     * if (empty($fp)) line is logic that should only be run once per</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     * page load.</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line106"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$remaining</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$bytes</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line107"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$buf</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line108"><br/></div><div id="line109"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">         * We use fread() in a loop to protect against partial reads</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">         */</span></pre></div><div id="line112"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line113"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$read</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">fread</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$fp</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$remaining</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$read</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line116"><pre><span class="token T_DOC_COMMENT">                 * We cannot safely read from the file. Exit the</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">                 * do-while loop and trigger the exception condition</span></pre></div><div id="line118"><pre><span class="token T_DOC_COMMENT">                 */</span></pre></div><div id="line119"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$buf</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">                </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line123"><pre><span class="token T_DOC_COMMENT">             * Decrease the number of bytes returned from remaining</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">             */</span></pre></div><div id="line125"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$remaining</span><span class="token T_WHITESPACE"> </span><span class="token T_MINUS_EQUAL">-=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RandomCompat_strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$read</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line126"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$buf</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$read</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$remaining</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">        </span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">        </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line130"><pre><span class="token T_DOC_COMMENT">         * Is our result valid?</span></pre></div><div id="line131"><pre><span class="token T_DOC_COMMENT">         */</span></pre></div><div id="line132"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$buf</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line133"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">RandomCompat_strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$buf</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$bytes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line134"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">                 * Return our random entropy buffer here:</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">                 */</span></pre></div><div id="line137"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$buf</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line138"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line139"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line140"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line141"><br/></div><div id="line142"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">     * If we reach here, PHP has failed us.</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line145"><pre><span class="token T_WHITESPACE">    </span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Exception</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line146"><pre><span class="token T_WHITESPACE">        </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Error reading from source device'</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line148"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line149"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
