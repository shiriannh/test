<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of interface.php</title><link rel="stylesheet" type="text/css" href="../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../classes.xhtml">Classes</a></li><li><a href="../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file interface.php</h1><p>
                        Size: 2,071 Bytes - Last Modified: 2016-08-13T21:27:24+00:00</p><section><h2><small>/home/codeur/git/test/test/libraries/joomla/observer/</small>interface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * @package     Joomla.Platform</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * @subpackage  Observer</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * @license     GNU General Public License version 2 or later; see LICENSE</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line9"><br/></div><div id="line10"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'JPATH_PLATFORM'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_LOGICAL_OR">or</span><span class="token T_WHITESPACE"> </span><span class="token T_EXIT">die</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * Observer pattern interface for Joomla</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * A class that wants to observe another class must:</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * 1) Add: implements JObserverInterface</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *    to its class</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * 2) Implement a constructor, that can look like this:</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * 	public function __construct(JObservableInterface $observableObject)</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * 	{</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * 	    $observableObject-&gt;attachObserver($this);</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> *  	$this-&gt;observableObject = $observableObject;</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * 	}</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * 3) and must implement the instanciator function createObserver() below, e.g. as follows:</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * 	public static function createObserver(JObservableInterface $observableObject, $params = array())</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * 	{</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * 	    $observer = new self($observableObject);</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> *      $observer-&gt;... = $params['...']; ...</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> * 	    return $observer;</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * 	}</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * 4) Then add functions corresponding to the events to be observed,</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> *    E.g. to respond to event: $this-&gt;_observers-&gt;update('onBeforeLoad', array($keys, $reset));</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> *    following function is needed in the obser:</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> *  public function onBeforeLoad($keys, $reset) { ... }</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * 5) Finally, the binding is made outside the observable and observer classes, using:</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> * JObserverMapper::addObserverClassToClass('ObserverClassname', 'ObservableClassname', array('paramName' =&gt; 'paramValue'));</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT"> * where the last array will be provided to the observer instanciator function createObserver.</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT"> * @since  3.1.2</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line46"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">JObserverInterface</span></pre></div><div id="line47"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">	 * Creates the associated observer instance and attaches it to the $observableObject</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">	 * @param   JObservableInterface  $observableObject  The observable subject object</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">	 * @param   array                 $params            Params for this observer</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">	 * @return  JObserverInterface</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">	 * @since   3.1.2</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">createObserver</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">JObservableInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$observableObject</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$params</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line60"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
