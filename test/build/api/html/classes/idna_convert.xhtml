<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - idna_convert</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">idna_convert</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/libraries/idna_convert/idna_convert.class.php.xhtml#line53">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>idna_convert</h1>
        <h4>Encode/decode Internationalized Domain Names.</h4>
        <p>The class allows to convert internationalized domain names<br/>(see RFC 3490 for details) as they can be used with various registries worldwide<br/>to be translated between their original (localized) form and their encoded form<br/>as it will be used in the DNS (Domain Name System).<br/>The class provides two public methods, encode() and decode(), which do exactly<br/>what you would expect them to do. You are allowed to use complete domain names,<br/>simple strings and complete email addresses as well. That means, that you might<br/>use any of the following notations:<br/>- www.nörgler.com<br/>- xn--nrgler-wxa<br/>- xn--brse-5qa.xn--knrz-1ra.info<br/>Unicode input might be given as either UTF-8 string, UCS-4 string or UCS-4 array.<br/>Unicode output is available in the same formats.<br/>You can select your preferred format via .<br/>ACE input and output is always expected to be ASCII.<br/></p>
        <ul>
          <li>Author: Matthias Sommerfeld &lt;mso@phlylabs.de&gt;</li>
          <li>Copyright: 2004-2011 phlyLabs Berlin, http://phlylabs.de</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class idna_convert
            {<br/><ul class="none"><li>// members</li><li>protected string <a href="#members">$_punycode_prefix</a> =
                        'xn--';
                    </li><li>protected integer <a href="#members">$_invalid_ucs</a> =
                        0x80000000;
                    </li><li>protected integer <a href="#members">$_max_ucs</a> =
                        0x10FFFF;
                    </li><li>protected integer <a href="#members">$_base</a> =
                        36;
                    </li><li>protected integer <a href="#members">$_tmin</a> =
                        1;
                    </li><li>protected integer <a href="#members">$_tmax</a> =
                        26;
                    </li><li>protected integer <a href="#members">$_skew</a> =
                        38;
                    </li><li>protected integer <a href="#members">$_damp</a> =
                        700;
                    </li><li>protected integer <a href="#members">$_initial_bias</a> =
                        72;
                    </li><li>protected integer <a href="#members">$_initial_n</a> =
                        0x80;
                    </li><li>protected integer <a href="#members">$_sbase</a> =
                        0xAC00;
                    </li><li>protected integer <a href="#members">$_lbase</a> =
                        0x1100;
                    </li><li>protected integer <a href="#members">$_vbase</a> =
                        0x1161;
                    </li><li>protected integer <a href="#members">$_tbase</a> =
                        0x11A7;
                    </li><li>protected integer <a href="#members">$_lcount</a> =
                        19;
                    </li><li>protected integer <a href="#members">$_vcount</a> =
                        21;
                    </li><li>protected integer <a href="#members">$_tcount</a> =
                        28;
                    </li><li>protected integer <a href="#members">$_ncount</a> =
                        588;
                    </li><li>protected integer <a href="#members">$_scount</a> =
                        11172;
                    </li><li>protected boolean <a href="#members">$_error</a> =
                        false;
                    </li><li>protected static <a href="#members">$_mb_string_overload</a> =
                        null;
                    </li><li>protected string <a href="#members">$_api_encoding</a> =
                        'utf8';
                    </li><li>protected boolean <a href="#members">$_allow_overlong</a> =
                        false;
                    </li><li>protected boolean <a href="#members">$_strict_mode</a> =
                        false;
                    </li><li>protected integer <a href="#members">$_idn_version</a> =
                        2003;
                    </li><li>protected static array <a href="#members">$NP</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public boolean <a title="idna_convert" href="../classes/idna_convert/__construct.xhtml">__construct</a>()
                    </li><li>public boolean <a title="idna_convert" href="../classes/idna_convert/set_parameter.xhtml">set_parameter</a>()
                    </li><li>public string <a title="idna_convert" href="../classes/idna_convert/decode.xhtml">decode</a>()
                    </li><li>public string <a title="idna_convert" href="../classes/idna_convert/encode.xhtml">encode</a>()
                    </li><li>public string <a title="idna_convert" href="../classes/idna_convert/encode_uri.xhtml">encode_uri</a>()
                    </li><li>public string <a title="idna_convert" href="../classes/idna_convert/get_last_error.xhtml">get_last_error</a>()
                    </li><li>protected mixed <a title="idna_convert" href="../classes/idna_convert/_decode.xhtml">_decode</a>()
                    </li><li>protected mixed <a title="idna_convert" href="../classes/idna_convert/_encode.xhtml">_encode</a>()
                    </li><li>protected int <a title="idna_convert" href="../classes/idna_convert/_adapt.xhtml">_adapt</a>()
                    </li><li>protected string <a title="idna_convert" href="../classes/idna_convert/_encode_digit.xhtml">_encode_digit</a>()
                    </li><li>protected int <a title="idna_convert" href="../classes/idna_convert/_decode_digit.xhtml">_decode_digit</a>()
                    </li><li>protected void <a title="idna_convert" href="../classes/idna_convert/_error.xhtml">_error</a>()
                    </li><li>protected string <a title="idna_convert" href="../classes/idna_convert/_nameprep.xhtml">_nameprep</a>()
                    </li><li>protected array <a title="idna_convert" href="../classes/idna_convert/_hangul_decompose.xhtml">_hangul_decompose</a>()
                    </li><li>protected array <a title="idna_convert" href="../classes/idna_convert/_hangul_compose.xhtml">_hangul_compose</a>()
                    </li><li>protected integer <a title="idna_convert" href="../classes/idna_convert/_get_combining_class.xhtml">_get_combining_class</a>()
                    </li><li>protected array <a title="idna_convert" href="../classes/idna_convert/_apply_cannonical_ordering.xhtml">_apply_cannonical_ordering</a>()
                    </li><li>protected array <a title="idna_convert" href="../classes/idna_convert/_combine.xhtml">_combine</a>()
                    </li><li>protected string <a title="idna_convert" href="../classes/idna_convert/_utf8_to_ucs4.xhtml">_utf8_to_ucs4</a>()
                    </li><li>protected string <a title="idna_convert" href="../classes/idna_convert/_ucs4_to_utf8.xhtml">_ucs4_to_utf8</a>()
                    </li><li>protected string <a title="idna_convert" href="../classes/idna_convert/_ucs4_to_ucs4_string.xhtml">_ucs4_to_ucs4_string</a>()
                    </li><li>protected array <a title="idna_convert" href="../classes/idna_convert/_ucs4_string_to_ucs4.xhtml">_ucs4_string_to_ucs4</a>()
                    </li><li>protected static integer <a title="idna_convert" href="../classes/idna_convert/byteLength.xhtml">byteLength</a>()
                    </li><li>public idna_convert <a title="idna_convert" href="../classes/idna_convert/getInstance.xhtml">getInstance</a>()
                    </li><li>public  <a title="idna_convert" href="../classes/idna_convert/singleton.xhtml">singleton</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="NP">
              <strong>$NP</strong>
              <br/>
              <span class="indent">Holds all relevant mapping tables See RFC3454 for details</span>
            </li>
            <li id="_allow_overlong">
              <strong>$_allow_overlong</strong>
            </li>
            <li id="_api_encoding">
              <strong>$_api_encoding</strong>
            </li>
            <li id="_base">
              <strong>$_base</strong>
            </li>
            <li id="_damp">
              <strong>$_damp</strong>
            </li>
            <li id="_error">
              <strong>$_error</strong>
            </li>
            <li id="_idn_version">
              <strong>$_idn_version</strong>
            </li>
            <li id="_initial_bias">
              <strong>$_initial_bias</strong>
            </li>
            <li id="_initial_n">
              <strong>$_initial_n</strong>
            </li>
            <li id="_invalid_ucs">
              <strong>$_invalid_ucs</strong>
            </li>
            <li id="_lbase">
              <strong>$_lbase</strong>
            </li>
            <li id="_lcount">
              <strong>$_lcount</strong>
            </li>
            <li id="_max_ucs">
              <strong>$_max_ucs</strong>
            </li>
            <li id="_mb_string_overload">
              <strong>$_mb_string_overload</strong>
            </li>
            <li id="_ncount">
              <strong>$_ncount</strong>
            </li>
            <li id="_punycode_prefix">
              <strong>$_punycode_prefix</strong>
            </li>
            <li id="_sbase">
              <strong>$_sbase</strong>
            </li>
            <li id="_scount">
              <strong>$_scount</strong>
            </li>
            <li id="_skew">
              <strong>$_skew</strong>
            </li>
            <li id="_strict_mode">
              <strong>$_strict_mode</strong>
            </li>
            <li id="_tbase">
              <strong>$_tbase</strong>
            </li>
            <li id="_tcount">
              <strong>$_tcount</strong>
            </li>
            <li id="_tmax">
              <strong>$_tmax</strong>
            </li>
            <li id="_tmin">
              <strong>$_tmin</strong>
            </li>
            <li id="_vbase">
              <strong>$_vbase</strong>
            </li>
            <li id="_vcount">
              <strong>$_vcount</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="_adapt"><a title="idna_convert" href="../classes/idna_convert/_adapt.xhtml">_adapt()</a>
                — Adapt the bias according to the current code point and position</li>
            <li id="_apply_cannonical_ordering"><a title="idna_convert" href="../classes/idna_convert/_apply_cannonical_ordering.xhtml">_apply_cannonical_ordering()</a>
                — Applies the cannonical ordering of a decomposed UCS4 sequence</li>
            <li id="_combine"><a title="idna_convert" href="../classes/idna_convert/_combine.xhtml">_combine()</a>
                — Do composition of a sequence of starter and non-starter</li>
            <li id="_decode"><a title="idna_convert" href="../classes/idna_convert/_decode.xhtml">_decode()</a>
                — The actual decoding algorithm</li>
            <li id="_decode_digit"><a title="idna_convert" href="../classes/idna_convert/_decode_digit.xhtml">_decode_digit()</a>
                — Decode a certain digit</li>
            <li id="_encode"><a title="idna_convert" href="../classes/idna_convert/_encode.xhtml">_encode()</a>
                — The actual encoding algorithm</li>
            <li id="_encode_digit"><a title="idna_convert" href="../classes/idna_convert/_encode_digit.xhtml">_encode_digit()</a>
                — Encoding a certain digit</li>
            <li id="_error"><a title="idna_convert" href="../classes/idna_convert/_error.xhtml">_error()</a>
                — Internal error handling method</li>
            <li id="_get_combining_class"><a title="idna_convert" href="../classes/idna_convert/_get_combining_class.xhtml">_get_combining_class()</a>
                — Returns the combining class of a certain wide char</li>
            <li id="_hangul_compose"><a title="idna_convert" href="../classes/idna_convert/_hangul_compose.xhtml">_hangul_compose()</a>
                — Ccomposes a Hangul syllable (see http://www.unicode.org/unicode/reports/tr15/#Hangul</li>
            <li id="_hangul_decompose"><a title="idna_convert" href="../classes/idna_convert/_hangul_decompose.xhtml">_hangul_decompose()</a>
                — Decomposes a Hangul syllable (see http://www.unicode.org/unicode/reports/tr15/#Hangul</li>
            <li id="_nameprep"><a title="idna_convert" href="../classes/idna_convert/_nameprep.xhtml">_nameprep()</a>
                — Do Nameprep according to RFC3491 and RFC3454</li>
            <li id="_ucs4_string_to_ucs4"><a title="idna_convert" href="../classes/idna_convert/_ucs4_string_to_ucs4.xhtml">_ucs4_string_to_ucs4()</a>
                — Convert UCS-4 strin into UCS-4 garray</li>
            <li id="_ucs4_to_ucs4_string"><a title="idna_convert" href="../classes/idna_convert/_ucs4_to_ucs4_string.xhtml">_ucs4_to_ucs4_string()</a>
                — Convert UCS-4 array into UCS-4 string</li>
            <li id="_ucs4_to_utf8"><a title="idna_convert" href="../classes/idna_convert/_ucs4_to_utf8.xhtml">_ucs4_to_utf8()</a>
                — Convert UCS-4 string into UTF-8 string See _utf8_to_ucs4() for details</li>
            <li id="_utf8_to_ucs4"><a title="idna_convert" href="../classes/idna_convert/_utf8_to_ucs4.xhtml">_utf8_to_ucs4()</a>
                — This converts an UTF-8 encoded string to its UCS-4 representation By talking about UCS-4 "strings" we mean arrays of 32bit integers representing each of the "chars". This is due to PHP not being able to handle strings with bit depth different from 8. This apllies to the reverse method _ucs4_to_utf8(), too.</li>
            <li id="byteLength"><a title="idna_convert" href="../classes/idna_convert/byteLength.xhtml">byteLength()</a>
                — Gets the length of a string in bytes even if mbstring function overloading is turned on</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="idna_convert" href="../classes/idna_convert/__construct.xhtml">__construct()</a>
                — the constructor</li>
            <li id="decode"><a title="idna_convert" href="../classes/idna_convert/decode.xhtml">decode()</a>
                — Decode a given ACE domain name</li>
            <li id="encode"><a title="idna_convert" href="../classes/idna_convert/encode.xhtml">encode()</a>
                — Encode a given UTF-8 domain name</li>
            <li id="encode_uri"><a title="idna_convert" href="../classes/idna_convert/encode_uri.xhtml">encode_uri()</a>
                — Removes a weakness of encode(), which cannot properly handle URIs but instead encodes their path or query components, too.</li>
            <li id="getInstance"><a title="idna_convert" href="../classes/idna_convert/getInstance.xhtml">getInstance()</a>
                — Attempts to return a concrete IDNA instance.</li>
            <li id="get_last_error"><a title="idna_convert" href="../classes/idna_convert/get_last_error.xhtml">get_last_error()</a>
                — Use this method to get the last error ocurred</li>
            <li id="set_parameter"><a title="idna_convert" href="../classes/idna_convert/set_parameter.xhtml">set_parameter()</a>
                — Sets a new option value. Available options and values: [encoding - Use either UTF-8, UCS4 as array or UCS4 as string as input ('utf8' for UTF-8,         'ucs4_string' and 'ucs4_array' respectively for UCS4); The output is always UTF-8] [overlong - Unicode does not allow unnecessarily long encodings of chars,             to allow this, set this parameter to true, else to false;             default is false.] [strict - true: strict mode, good for registration purposes - Causes errors           on failures; false: loose mode, ideal for "wildlife" applications           by silently ignoring errors and returning the original input instead</li>
            <li id="singleton"><a title="idna_convert" href="../classes/idna_convert/singleton.xhtml">singleton()</a>
                — Attempts to return a concrete IDNA instance for either php4 or php5, only creating a new instance if no IDNA instance with the same parameters currently exists.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
