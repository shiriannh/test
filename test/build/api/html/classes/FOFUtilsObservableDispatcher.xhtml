<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - FOFUtilsObservableDispatcher</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">FOFUtilsObservableDispatcher</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/libraries/fof/utils/observable/dispatcher.php.xhtml#line19">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>FOFUtilsObservableDispatcher</h1>
        <h4>Class to handle dispatching of events.</h4>
        <p>This is the Observable part of the Observer design pattern<br/>for the event architecture.<br/><br/>This class is based on JEventDispatcher as found in Joomla! 3.2.0</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class FOFUtilsObservableDispatcher
                extends <a title="FOFUtilsObject" href="../classes/FOFUtilsObject.xhtml">FOFUtilsObject</a>
            {<br/><ul class="none"><li>// members</li><li>protected array <a href="#members">$_observers</a> =
                        ;
                    </li><li>protected mixed <a href="#members">$_state</a> =
                        null;
                    </li><li>protected array <a href="#members">$_methods</a> =
                        ;
                    </li><li>protected static <span title="FOFUtilsObservableDispatcher">FOFUtilsObservableDispatcher</span> <a href="#members">$instance</a> =
                        null;
                    </li></ul><ul class="none"><li>// methods</li><li>public static FOFUtilsObservableDispatcher <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/getInstance.xhtml">getInstance</a>()
                    </li><li>public mixed <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/getState.xhtml">getState</a>()
                    </li><li>public void <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/register.xhtml">register</a>()
                    </li><li>public array <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/trigger.xhtml">trigger</a>()
                    </li><li>public void <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/attach.xhtml">attach</a>()
                    </li><li>public boolean <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/detach.xhtml">detach</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="FOFUtilsObject" href="../classes/FOFUtilsObject.xhtml">FOFUtilsObject</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="_methods"><strong>$_methods</strong>
                —
                array<br/><span class="indent">A multi dimensional array of [function][] = key for observers</span></li>
            <li id="_observers"><strong>$_observers</strong>
                —
                array<br/><span class="indent">An array of Observer objects to notify</span></li>
            <li id="_state"><strong>$_state</strong>
                —
                mixed<br/><span class="indent">The state of the observable object</span></li>
            <li id="instance"><strong>$instance</strong>
                —
                <a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher.xhtml">FOFUtilsObservableDispatcher</a><br/><span class="indent">Stores the singleton instance of the dispatcher.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="attach"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/attach.xhtml">attach()</a>
                — Attach an observer object</li>
            <li id="detach"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/detach.xhtml">detach()</a>
                — Detach an observer object</li>
            <li id="getInstance"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/getInstance.xhtml">getInstance()</a>
                — Returns the global Event Dispatcher object, only creating it if it doesn't already exist.</li>
            <li id="getState"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/getState.xhtml">getState()</a>
                — Get the state of the FOFUtilsObservableDispatcher object</li>
            <li id="register"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/register.xhtml">register()</a>
                — Registers an event handler to the event dispatcher</li>
            <li id="trigger"><a title="FOFUtilsObservableDispatcher" href="../classes/FOFUtilsObservableDispatcher/trigger.xhtml">trigger()</a>
                — Triggers an event by dispatching arguments to all observers that handle the event and returning their return values.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
