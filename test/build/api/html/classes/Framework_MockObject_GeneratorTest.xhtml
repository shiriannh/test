<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Framework_MockObject_GeneratorTest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">Framework_MockObject_GeneratorTest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/phpunit/phpunit-mock-objects/tests/GeneratorTest.php.xhtml#line2">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>Framework_MockObject_GeneratorTest</h1>
        <h4/>
        <p/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Framework_MockObject_GeneratorTest
                extends <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase.xhtml">PHPUnit_Framework_TestCase</a>
            {<br/><ul class="none"><li>// members</li><li>protected <span title="PHPUnit_Framework_MockObject_Generator">PHPUnit_Framework_MockObject_Generator</span> <a href="#members">$generator</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>protected void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/setUp.xhtml">setUp</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock.xhtml">testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockCanCreateNonExistingFunctions.xhtml">testGetMockCanCreateNonExistingFunctions</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockGeneratorFails.xhtml">testGetMockGeneratorFails</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockBlacklistedMethodNamesPhp7.xhtml">testGetMockBlacklistedMethodNamesPhp7</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces.xhtml">testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassStubbingAbstractClass.xhtml">testGetMockForAbstractClassStubbingAbstractClass</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassWithNonExistentMethods.xhtml">testGetMockForAbstractClassWithNonExistentMethods</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed.xhtml">testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassExpectingInvalidArgumentException.xhtml">testGetMockForAbstractClassExpectingInvalidArgumentException</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassAbstractClassDoesNotExist.xhtml">testGetMockForAbstractClassAbstractClassDoesNotExist</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider.xhtml">getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods.xhtml">testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForTraitStubbingAbstractMethod.xhtml">testGetMockForTraitStubbingAbstractMethod</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForSingletonWithReflectionSuccess.xhtml">testGetMockForSingletonWithReflectionSuccess</a>()
                    </li><li>public void <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testExceptionIsRaisedForMutuallyExclusiveOptions.xhtml">testExceptionIsRaisedForMutuallyExclusiveOptions</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase.xhtml">PHPUnit_Framework_TestCase</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="generator"><strong>$generator</strong>
                —
                <a title="PHPUnit_Framework_MockObject_Generator" href="../classes/PHPUnit_Framework_MockObject_Generator.xhtml">PHPUnit_Framework_MockObject_Generator</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="setUp">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/setUp.xhtml">setUp()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider.xhtml">getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider()</a>
            </li>
            <li id="testExceptionIsRaisedForMutuallyExclusiveOptions">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testExceptionIsRaisedForMutuallyExclusiveOptions.xhtml">testExceptionIsRaisedForMutuallyExclusiveOptions()</a>
            </li>
            <li id="testGetMockBlacklistedMethodNamesPhp7">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockBlacklistedMethodNamesPhp7.xhtml">testGetMockBlacklistedMethodNamesPhp7()</a>
            </li>
            <li id="testGetMockCanCreateNonExistingFunctions">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockCanCreateNonExistingFunctions.xhtml">testGetMockCanCreateNonExistingFunctions()</a>
            </li>
            <li id="testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock.xhtml">testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock()</a>
            </li>
            <li id="testGetMockForAbstractClassAbstractClassDoesNotExist">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassAbstractClassDoesNotExist.xhtml">testGetMockForAbstractClassAbstractClassDoesNotExist()</a>
            </li>
            <li id="testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces.xhtml">testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces()</a>
            </li>
            <li id="testGetMockForAbstractClassExpectingInvalidArgumentException">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassExpectingInvalidArgumentException.xhtml">testGetMockForAbstractClassExpectingInvalidArgumentException()</a>
            </li>
            <li id="testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed.xhtml">testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed()</a>
            </li>
            <li id="testGetMockForAbstractClassStubbingAbstractClass">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassStubbingAbstractClass.xhtml">testGetMockForAbstractClassStubbingAbstractClass()</a>
            </li>
            <li id="testGetMockForAbstractClassWithNonExistentMethods">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForAbstractClassWithNonExistentMethods.xhtml">testGetMockForAbstractClassWithNonExistentMethods()</a>
            </li>
            <li id="testGetMockForSingletonWithReflectionSuccess">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForSingletonWithReflectionSuccess.xhtml">testGetMockForSingletonWithReflectionSuccess()</a>
            </li>
            <li id="testGetMockForTraitStubbingAbstractMethod">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForTraitStubbingAbstractMethod.xhtml">testGetMockForTraitStubbingAbstractMethod()</a>
            </li>
            <li id="testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods.xhtml">testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods()</a>
            </li>
            <li id="testGetMockGeneratorFails">
              <a title="Framework_MockObject_GeneratorTest" href="../classes/Framework_MockObject_GeneratorTest/testGetMockGeneratorFails.xhtml">testGetMockGeneratorFails()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
