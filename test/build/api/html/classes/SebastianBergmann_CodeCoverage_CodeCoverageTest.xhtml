<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - SebastianBergmann\CodeCoverage\CodeCoverageTest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#SebastianBergmann_CodeCoverage">SebastianBergmann\CodeCoverage</a>
          </li>
          <li class="separator">CodeCoverageTest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/phpunit/php-code-coverage/tests/tests/CodeCoverageTest.php.xhtml#line19">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>SebastianBergmann\CodeCoverage\</small>CodeCoverageTest</h1>
        <h4/>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class CodeCoverageTest
                extends <a title="SebastianBergmann\CodeCoverage\TestCase" href="../classes/SebastianBergmann_CodeCoverage_TestCase.xhtml">TestCase</a>
            {<br/><ul class="none"><li>// members</li><li>private <span title="SebastianBergmann\CodeCoverage\CodeCoverage">CodeCoverage</span> <a href="#members">$coverage</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>protected void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/setUp.xhtml">setUp</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForXdebugWithoutGivenFilterObject.xhtml">testCanBeConstructedForXdebugWithoutGivenFilterObject</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForXdebugWithGivenFilterObject.xhtml">testCanBeConstructedForXdebugWithGivenFilterObject</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForPhpdbgWithoutGivenFilterObject.xhtml">testCanBeConstructedForPhpdbgWithoutGivenFilterObject</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForPhpdbgWithGivenFilterObject.xhtml">testCanBeConstructedForPhpdbgWithGivenFilterObject</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStartWithInvalidArgument.xhtml">testCannotStartWithInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStopWithInvalidFirstArgument.xhtml">testCannotStopWithInvalidFirstArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStopWithInvalidSecondArgument.xhtml">testCannotStopWithInvalidSecondArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotAppendWithInvalidArgument.xhtml">testCannotAppendWithInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCacheTokensThrowsExceptionForInvalidArgument.xhtml">testSetCacheTokensThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCacheTokens.xhtml">testSetCacheTokens</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnintentionallyCoveredCodeThrowsExceptionForInvalidArgument.xhtml">testSetCheckForUnintentionallyCoveredCodeThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnintentionallyCoveredCode.xhtml">testSetCheckForUnintentionallyCoveredCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetForceCoversAnnotationThrowsExceptionForInvalidArgument.xhtml">testSetForceCoversAnnotationThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForMissingCoversAnnotation.xhtml">testSetCheckForMissingCoversAnnotation</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForMissingCoversAnnotationThrowsExceptionForInvalidArgument.xhtml">testSetCheckForMissingCoversAnnotationThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetForceCoversAnnotation.xhtml">testSetForceCoversAnnotation</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnexecutedCoveredCodeThrowsExceptionForInvalidArgument.xhtml">testSetCheckForUnexecutedCoveredCodeThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnexecutedCoveredCode.xhtml">testSetCheckForUnexecutedCoveredCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetAddUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument.xhtml">testSetAddUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetAddUncoveredFilesFromWhitelist.xhtml">testSetAddUncoveredFilesFromWhitelist</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetProcessUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument.xhtml">testSetProcessUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetProcessUncoveredFilesFromWhitelist.xhtml">testSetProcessUncoveredFilesFromWhitelist</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetIgnoreDeprecatedCode.xhtml">testSetIgnoreDeprecatedCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetIgnoreDeprecatedCodeThrowsExceptionForInvalidArgument.xhtml">testSetIgnoreDeprecatedCodeThrowsExceptionForInvalidArgument</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testClear.xhtml">testClear</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCollect.xhtml">testCollect</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testMerge.xhtml">testMerge</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testMerge2.xhtml">testMerge2</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored.xhtml">testGetLinesToBeIgnored</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored2.xhtml">testGetLinesToBeIgnored2</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored3.xhtml">testGetLinesToBeIgnored3</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnoredOneLineAnnotations.xhtml">testGetLinesToBeIgnoredOneLineAnnotations</a>()
                    </li><li>private ReflectionMethod <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/getLinesToBeIgnored.xhtml">getLinesToBeIgnored</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnoredWhenIgnoreIsDisabled.xhtml">testGetLinesToBeIgnoredWhenIgnoreIsDisabled</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testAppendThrowsExceptionIfCoveredCodeWasNotExecuted.xhtml">testAppendThrowsExceptionIfCoveredCodeWasNotExecuted</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testAppendThrowsExceptionIfUsedCodeWasNotExecuted.xhtml">testAppendThrowsExceptionIfUsedCodeWasNotExecuted</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="SebastianBergmann\CodeCoverage\TestCase" href="../classes/SebastianBergmann_CodeCoverage_TestCase.xhtml">SebastianBergmann\CodeCoverage\TestCase</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="coverage"><strong>$coverage</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage.xhtml">SebastianBergmann\CodeCoverage\CodeCoverage</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getLinesToBeIgnored">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/getLinesToBeIgnored.xhtml">getLinesToBeIgnored()</a>
            </li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="setUp">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/setUp.xhtml">setUp()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="testAppendThrowsExceptionIfCoveredCodeWasNotExecuted">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testAppendThrowsExceptionIfCoveredCodeWasNotExecuted.xhtml">testAppendThrowsExceptionIfCoveredCodeWasNotExecuted()</a>
            </li>
            <li id="testAppendThrowsExceptionIfUsedCodeWasNotExecuted">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testAppendThrowsExceptionIfUsedCodeWasNotExecuted.xhtml">testAppendThrowsExceptionIfUsedCodeWasNotExecuted()</a>
            </li>
            <li id="testCanBeConstructedForPhpdbgWithGivenFilterObject">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForPhpdbgWithGivenFilterObject.xhtml">testCanBeConstructedForPhpdbgWithGivenFilterObject()</a>
            </li>
            <li id="testCanBeConstructedForPhpdbgWithoutGivenFilterObject">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForPhpdbgWithoutGivenFilterObject.xhtml">testCanBeConstructedForPhpdbgWithoutGivenFilterObject()</a>
            </li>
            <li id="testCanBeConstructedForXdebugWithGivenFilterObject">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForXdebugWithGivenFilterObject.xhtml">testCanBeConstructedForXdebugWithGivenFilterObject()</a>
            </li>
            <li id="testCanBeConstructedForXdebugWithoutGivenFilterObject">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCanBeConstructedForXdebugWithoutGivenFilterObject.xhtml">testCanBeConstructedForXdebugWithoutGivenFilterObject()</a>
            </li>
            <li id="testCannotAppendWithInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotAppendWithInvalidArgument.xhtml">testCannotAppendWithInvalidArgument()</a>
            </li>
            <li id="testCannotStartWithInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStartWithInvalidArgument.xhtml">testCannotStartWithInvalidArgument()</a>
            </li>
            <li id="testCannotStopWithInvalidFirstArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStopWithInvalidFirstArgument.xhtml">testCannotStopWithInvalidFirstArgument()</a>
            </li>
            <li id="testCannotStopWithInvalidSecondArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCannotStopWithInvalidSecondArgument.xhtml">testCannotStopWithInvalidSecondArgument()</a>
            </li>
            <li id="testClear">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testClear.xhtml">testClear()</a>
            </li>
            <li id="testCollect">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testCollect.xhtml">testCollect()</a>
            </li>
            <li id="testGetLinesToBeIgnored">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored.xhtml">testGetLinesToBeIgnored()</a>
            </li>
            <li id="testGetLinesToBeIgnored2">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored2.xhtml">testGetLinesToBeIgnored2()</a>
            </li>
            <li id="testGetLinesToBeIgnored3">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnored3.xhtml">testGetLinesToBeIgnored3()</a>
            </li>
            <li id="testGetLinesToBeIgnoredOneLineAnnotations">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnoredOneLineAnnotations.xhtml">testGetLinesToBeIgnoredOneLineAnnotations()</a>
            </li>
            <li id="testGetLinesToBeIgnoredWhenIgnoreIsDisabled">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testGetLinesToBeIgnoredWhenIgnoreIsDisabled.xhtml">testGetLinesToBeIgnoredWhenIgnoreIsDisabled()</a>
            </li>
            <li id="testMerge">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testMerge.xhtml">testMerge()</a>
            </li>
            <li id="testMerge2">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testMerge2.xhtml">testMerge2()</a>
            </li>
            <li id="testSetAddUncoveredFilesFromWhitelist">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetAddUncoveredFilesFromWhitelist.xhtml">testSetAddUncoveredFilesFromWhitelist()</a>
            </li>
            <li id="testSetAddUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetAddUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument.xhtml">testSetAddUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetCacheTokens">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCacheTokens.xhtml">testSetCacheTokens()</a>
            </li>
            <li id="testSetCacheTokensThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCacheTokensThrowsExceptionForInvalidArgument.xhtml">testSetCacheTokensThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetCheckForMissingCoversAnnotation">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForMissingCoversAnnotation.xhtml">testSetCheckForMissingCoversAnnotation()</a>
            </li>
            <li id="testSetCheckForMissingCoversAnnotationThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForMissingCoversAnnotationThrowsExceptionForInvalidArgument.xhtml">testSetCheckForMissingCoversAnnotationThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetCheckForUnexecutedCoveredCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnexecutedCoveredCode.xhtml">testSetCheckForUnexecutedCoveredCode()</a>
            </li>
            <li id="testSetCheckForUnexecutedCoveredCodeThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnexecutedCoveredCodeThrowsExceptionForInvalidArgument.xhtml">testSetCheckForUnexecutedCoveredCodeThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetCheckForUnintentionallyCoveredCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnintentionallyCoveredCode.xhtml">testSetCheckForUnintentionallyCoveredCode()</a>
            </li>
            <li id="testSetCheckForUnintentionallyCoveredCodeThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetCheckForUnintentionallyCoveredCodeThrowsExceptionForInvalidArgument.xhtml">testSetCheckForUnintentionallyCoveredCodeThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetForceCoversAnnotation">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetForceCoversAnnotation.xhtml">testSetForceCoversAnnotation()</a>
            </li>
            <li id="testSetForceCoversAnnotationThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetForceCoversAnnotationThrowsExceptionForInvalidArgument.xhtml">testSetForceCoversAnnotationThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetIgnoreDeprecatedCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetIgnoreDeprecatedCode.xhtml">testSetIgnoreDeprecatedCode()</a>
            </li>
            <li id="testSetIgnoreDeprecatedCodeThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetIgnoreDeprecatedCodeThrowsExceptionForInvalidArgument.xhtml">testSetIgnoreDeprecatedCodeThrowsExceptionForInvalidArgument()</a>
            </li>
            <li id="testSetProcessUncoveredFilesFromWhitelist">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetProcessUncoveredFilesFromWhitelist.xhtml">testSetProcessUncoveredFilesFromWhitelist()</a>
            </li>
            <li id="testSetProcessUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverageTest" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverageTest/testSetProcessUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument.xhtml">testSetProcessUncoveredFilesFromWhitelistThrowsExceptionForInvalidArgument()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
