<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PDepend\Source\Language\PHP\AbstractPHPParser</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PDepend_Source_Language_PHP">PDepend\Source\Language\PHP</a>
          </li>
          <li class="separator">AbstractPHPParser</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/pdepend/pdepend/src/main/php/PDepend/Source/Language/PHP/AbstractPHPParser.php.xhtml#line98">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PDepend\Source\Language\PHP\</small>AbstractPHPParser</h1>
        <h4>The php source parser.</h4>
        <p>With the default settings the parser includes annotations, better known as<br/>doc comment tags, in the generated result. This means it extracts the type<br/>information of @var tags for properties, and types in @return + @throws tags<br/>of functions and methods. The current implementation tries to ignore all<br/>scalar types from &lt;b&gt;boolean&lt;/b&gt; to &lt;b&gt;void&lt;/b&gt;. You should disable this<br/>feature for project that have more or less invalid doc comments, because it<br/>could produce invalid results.<br/><br/>&lt;code&gt;<br/>$parser-&gt;setIgnoreAnnotations();<br/>&lt;/code&gt;<br/><br/>&lt;b&gt;Note&lt;/b&gt;: Due to the fact that it is possible to use the same name for<br/>multiple classes and interfaces, and there is no way to determine to which<br/>package it belongs, while the parser handles class, interface or method<br/>signatures, the parser could/will create a code tree that doesn't reflect the<br/>real source structure.</p>
        <ul>
          <li>Copyright: 2008-2015 Manuel Pichler. All rights reserved.</li>
          <li>License: http://www.opensource.org/licenses/bsd-license.php BSD License</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class AbstractPHPParser
            {<br/><ul class="none"><li>// constants</li><li>const REGEXP_INLINE_TYPE = '(^\s*/\*\s*
                                 @var\s+
                                   \$[a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff]*\s+
                                   (.*?)
                                \s*\*/\s*$)ix';</li><li>const REGEXP_THROWS_TYPE = '(\*\s*
                             @throws\s+
                               ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\\\\]*)
                            )ix';</li><li>const REGEXP_RETURN_TYPE = '(\*\s*
                     @return\s+
                      (array\(\s*
                        (\w+\s*=&gt;\s*)?
                        ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*
                      \)
                      |
                      ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+
                      |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]
                    )ix';</li><li>const REGEXP_VAR_TYPE = '(\*\s*
                      @var\s+
                       (array\(\s*
                         (\w+\s*=&gt;\s*)?
                         ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*
                       \)
                       |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+
                       |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]\s+
                       |
                       (array)\(\s*\)\s+
                     )ix';</li></ul><ul class="none"><li>// members</li><li>private boolean <a href="#members">$namespacePrefixReplaced</a> =
                        false;
                    </li><li>private  <a href="#members">$namespaceName</a>;
                    </li><li>private string <a href="#members">$packageName</a> =
                        Builder::DEFAULT_NAMESPACE;
                    </li><li>private string <a href="#members">$globalPackageName</a> =
                        Builder::DEFAULT_NAMESPACE;
                    </li><li>protected <span title="PDepend\Source\Builder\Builder">Builder</span> <a href="#members">$builder</a>;
                    </li><li>protected <span title="\PDepend\Source\AST\ASTCompilationUnit">ASTCompilationUnit</span> <a href="#members">$compilationUnit</a>;
                    </li><li>private <span title="\PDepend\Source\Parser\SymbolTable">SymbolTable</span> <a href="#members">$useSymbolTable</a>;
                    </li><li>private  <a href="#members">$docComment</a>;
                    </li><li>private integer <a href="#members">$modifiers</a> =
                        0;
                    </li><li>private <span title="\PDepend\Source\AST\AbstractASTClassOrInterface">AbstractASTClassOrInterface</span> <a href="#members">$classOrInterface</a>;
                    </li><li>private boolean <a href="#members">$ignoreAnnotations</a> =
                        false;
                    </li><li>private <span title="\PDepend\Source\Tokenizer\TokenStack">TokenStack</span> <a href="#members">$tokenStack</a>;
                    </li><li>private <span title="\PDepend\Util\IdBuilder">IdBuilder</span> <a href="#members">$idBuilder</a> =
                        null;
                    </li><li>private integer <a href="#members">$maxNestingLevel</a> =
                        1024;
                    </li><li>protected <span title="\PDepend\Util\Cache\CacheDriver">CacheDriver</span> <a href="#members">$cache</a>;
                    </li><li>protected  <a href="#members">$tokenizer</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setIgnoreAnnotations.xhtml">setIgnoreAnnotations</a>()
                    </li><li>public void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setMaxNestingLevel.xhtml">setMaxNestingLevel</a>()
                    </li><li>protected integer <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getMaxNestingLevel.xhtml">getMaxNestingLevel</a>()
                    </li><li>public void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parse.xhtml">parse</a>()
                    </li><li>protected void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setUpEnvironment.xhtml">setUpEnvironment</a>()
                    </li><li>protected void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/tearDownEnvironment.xhtml">tearDownEnvironment</a>()
                    </li><li>protected void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reset.xhtml">reset</a>()
                    </li><li>protected abstract boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isKeyword.xhtml">isKeyword</a>()
                    </li><li>protected string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassName.xhtml">parseClassName</a>()
                    </li><li>protected boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isClassName.xhtml">isClassName</a>()
                    </li><li>protected string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionName.xhtml">parseFunctionName</a>()
                    </li><li>protected boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isFunctionName.xhtml">isFunctionName</a>()
                    </li><li>private ASTTrait <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitDeclaration.xhtml">parseTraitDeclaration</a>()
                    </li><li>private ASTTrait <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitSignature.xhtml">parseTraitSignature</a>()
                    </li><li>private ASTInterface <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceDeclaration.xhtml">parseInterfaceDeclaration</a>()
                    </li><li>private ASTInterface <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceSignature.xhtml">parseInterfaceSignature</a>()
                    </li><li>private ASTInterface <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExtendsList.xhtml">parseOptionalExtendsList</a>()
                    </li><li>private ASTClass <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassDeclaration.xhtml">parseClassDeclaration</a>()
                    </li><li>private ASTClass <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassSignature.xhtml">parseClassSignature</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassModifiers.xhtml">parseClassModifiers</a>()
                    </li><li>protected ASTClass <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassExtends.xhtml">parseClassExtends</a>()
                    </li><li>protected void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceList.xhtml">parseInterfaceList</a>()
                    </li><li>private AbstractASTType <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTypeBody.xhtml">parseTypeBody</a>()
                    </li><li>private ASTFieldDeclaration <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrFieldDeclaration.xhtml">parseMethodOrFieldDeclaration</a>()
                    </li><li>private ASTFieldDeclaration <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclaration.xhtml">parseFieldDeclaration</a>()
                    </li><li>private AbstractASTCallable <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionOrClosureDeclaration.xhtml">parseFunctionOrClosureDeclaration</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalByReference.xhtml">parseOptionalByReference</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenByReference.xhtml">isNextTokenByReference</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseByReference.xhtml">parseByReference</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenFormalParameterList.xhtml">isNextTokenFormalParameterList</a>()
                    </li><li>private ASTFunction <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionDeclaration.xhtml">parseFunctionDeclaration</a>()
                    </li><li>private ASTMethod <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodDeclaration.xhtml">parseMethodDeclaration</a>()
                    </li><li>private ASTClosure <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClosureDeclaration.xhtml">parseClosureDeclaration</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCallableDeclaration.xhtml">parseCallableDeclaration</a>()
                    </li><li>protected AbstractASTCallable <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCallableDeclarationAddition.xhtml">parseCallableDeclarationAddition</a>()
                    </li><li>private ASTTraitUseStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitUseStatement.xhtml">parseTraitUseStatement</a>()
                    </li><li>private ASTTraitReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitReference.xhtml">parseTraitReference</a>()
                    </li><li>private ASTTraitUseStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalTraitAdaptation.xhtml">parseOptionalTraitAdaptation</a>()
                    </li><li>private ASTTraitAdaptation <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptation.xhtml">parseTraitAdaptation</a>()
                    </li><li>private array <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitMethodReference.xhtml">parseTraitMethodReference</a>()
                    </li><li>private ASTTraitAdaptationAlias <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptationAliasStatement.xhtml">parseTraitAdaptationAliasStatement</a>()
                    </li><li>private ASTTraitAdaptationPrecedence <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptationPrecedenceStatement.xhtml">parseTraitAdaptationPrecedenceStatement</a>()
                    </li><li>private ASTAllocationExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAllocationExpression.xhtml">parseAllocationExpression</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAllocationExpressionTypeReference.xhtml">parseAllocationExpressionTypeReference</a>()
                    </li><li>private ASTEvalExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEvalExpression.xhtml">parseEvalExpression</a>()
                    </li><li>private ASTExitExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExitExpression.xhtml">parseExitExpression</a>()
                    </li><li>private ASTCloneExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCloneExpression.xhtml">parseCloneExpression</a>()
                    </li><li>private ASTListExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseListExpression.xhtml">parseListExpression</a>()
                    </li><li>private ASTIncludeExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncludeExpression.xhtml">parseIncludeExpression</a>()
                    </li><li>private ASTIncludeExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncludeOnceExpression.xhtml">parseIncludeOnceExpression</a>()
                    </li><li>private ASTRequireExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireExpression.xhtml">parseRequireExpression</a>()
                    </li><li>private ASTRequireExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireOnceExpression.xhtml">parseRequireOnceExpression</a>()
                    </li><li>private ASTExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireOrIncludeExpression.xhtml">parseRequireOrIncludeExpression</a>()
                    </li><li>protected ASTCaseExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCastExpression.xhtml">parseCastExpression</a>()
                    </li><li>private ASTExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncrementExpression.xhtml">parseIncrementExpression</a>()
                    </li><li>private ASTPostfixExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostIncrementExpression.xhtml">parsePostIncrementExpression</a>()
                    </li><li>private ASTPreIncrementExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePreIncrementExpression.xhtml">parsePreIncrementExpression</a>()
                    </li><li>private ASTExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDecrementExpression.xhtml">parseDecrementExpression</a>()
                    </li><li>private ASTPostfixExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostDecrementExpression.xhtml">parsePostDecrementExpression</a>()
                    </li><li>private ASTPreDecrementExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePreDecrementExpression.xhtml">parsePreDecrementExpression</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalIndexExpression.xhtml">parseOptionalIndexExpression</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIndexExpression.xhtml">parseIndexExpression</a>()
                    </li><li>private ASTArrayIndexExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayIndexExpression.xhtml">parseArrayIndexExpression</a>()
                    </li><li>private ASTStringIndexExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringIndexExpression.xhtml">parseStringIndexExpression</a>()
                    </li><li>protected boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenArguments.xhtml">isNextTokenArguments</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setNodePositionsAndReturn.xhtml">setNodePositionsAndReturn</a>()
                    </li><li>private array <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/stripTrailingComments.xhtml">stripTrailingComments</a>()
                    </li><li>private ASTInstanceOfExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInstanceOfExpression.xhtml">parseInstanceOfExpression</a>()
                    </li><li>private ASTIssetExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIssetExpression.xhtml">parseIssetExpression</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpressionTypeReference.xhtml">parseExpressionTypeReference</a>()
                    </li><li>protected ASTConditionalExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConditionalExpression.xhtml">parseConditionalExpression</a>()
                    </li><li>protected ASTShiftLeftExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseShiftLeftExpression.xhtml">parseShiftLeftExpression</a>()
                    </li><li>protected ASTShiftRightExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseShiftRightExpression.xhtml">parseShiftRightExpression</a>()
                    </li><li>protected ASTBooleanAndExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBooleanAndExpression.xhtml">parseBooleanAndExpression</a>()
                    </li><li>protected ASTBooleanOrExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBooleanOrExpression.xhtml">parseBooleanOrExpression</a>()
                    </li><li>protected ASTLogicalAndExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalAndExpression.xhtml">parseLogicalAndExpression</a>()
                    </li><li>protected ASTLogicalOrExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalOrExpression.xhtml">parseLogicalOrExpression</a>()
                    </li><li>protected ASTLogicalXorExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalXorExpression.xhtml">parseLogicalXorExpression</a>()
                    </li><li>private ASTClassOrInterfaceReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassOrInterfaceReference.xhtml">parseClassOrInterfaceReference</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBraceExpression.xhtml">parseBraceExpression</a>()
                    </li><li>private ASTStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatementBody.xhtml">parseStatementBody</a>()
                    </li><li>private ASTScope <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRegularScope.xhtml">parseRegularScope</a>()
                    </li><li>private ASTScopeStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAlternativeScope.xhtml">parseAlternativeScope</a>()
                    </li><li>private ASTScopeStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseScopeStatements.xhtml">parseScopeStatements</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalAlternativeScopeTermination.xhtml">parseOptionalAlternativeScopeTermination</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isAlternativeScopeTermination.xhtml">isAlternativeScopeTermination</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAlternativeScopeTermination.xhtml">parseAlternativeScopeTermination</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpressionList.xhtml">parseExpressionList</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpression.xhtml">parseExpression</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExpression.xhtml">parseOptionalExpression</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExpressionForVersion.xhtml">parseOptionalExpressionForVersion</a>()
                    </li><li>protected array <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reduce.xhtml">reduce</a>()
                    </li><li>private array <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reduceUnaryExpression.xhtml">reduceUnaryExpression</a>()
                    </li><li>private ASTSwitchStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchStatement.xhtml">parseSwitchStatement</a>()
                    </li><li>private ASTSwitchStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchStatementBody.xhtml">parseSwitchStatementBody</a>()
                    </li><li>private ASTSwitchLabel <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabel.xhtml">parseSwitchLabel</a>()
                    </li><li>private ASTSwitchLabel <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabelDefault.xhtml">parseSwitchLabelDefault</a>()
                    </li><li>private ASTSwitchLabel <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabelBody.xhtml">parseSwitchLabelBody</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatementTermination.xhtml">parseStatementTermination</a>()
                    </li><li>private ASTTryStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTryStatement.xhtml">parseTryStatement</a>()
                    </li><li>private ASTThrowStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseThrowStatement.xhtml">parseThrowStatement</a>()
                    </li><li>private ASTGotoStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseGotoStatement.xhtml">parseGotoStatement</a>()
                    </li><li>private ASTLabelStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLabelStatement.xhtml">parseLabelStatement</a>()
                    </li><li>private ASTGlobalStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseGlobalStatement.xhtml">parseGlobalStatement</a>()
                    </li><li>private ASTUnsetStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUnsetStatement.xhtml">parseUnsetStatement</a>()
                    </li><li>private ASTCatchStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCatchStatement.xhtml">parseCatchStatement</a>()
                    </li><li>private ASTFinallyStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFinallyStatement.xhtml">parseFinallyStatement</a>()
                    </li><li>private ASTIfStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIfStatement.xhtml">parseIfStatement</a>()
                    </li><li>private ASTElseIfStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseElseIfStatement.xhtml">parseElseIfStatement</a>()
                    </li><li>private ASTStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalElseOrElseIfStatement.xhtml">parseOptionalElseOrElseIfStatement</a>()
                    </li><li>private ASTForStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForStatement.xhtml">parseForStatement</a>()
                    </li><li>private ASTForInit <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForInit.xhtml">parseForInit</a>()
                    </li><li>private ASTExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForExpression.xhtml">parseForExpression</a>()
                    </li><li>private ASTForUpdate <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForUpdate.xhtml">parseForUpdate</a>()
                    </li><li>private ASTForeachStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForeachStatement.xhtml">parseForeachStatement</a>()
                    </li><li>private ASTWhileStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseWhileStatement.xhtml">parseWhileStatement</a>()
                    </li><li>private ASTDoWhileStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDoWhileStatement.xhtml">parseDoWhileStatement</a>()
                    </li><li>private ASTDeclareStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDeclareStatement.xhtml">parseDeclareStatement</a>()
                    </li><li>private ASTDeclareStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDeclareList.xhtml">parseDeclareList</a>()
                    </li><li>private ASTReturnStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseReturnStatement.xhtml">parseReturnStatement</a>()
                    </li><li>private ASTBreakStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBreakStatement.xhtml">parseBreakStatement</a>()
                    </li><li>private ASTContinueStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseContinueStatement.xhtml">parseContinueStatement</a>()
                    </li><li>private ASTEchoStatement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEchoStatement.xhtml">parseEchoStatement</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParenthesisExpressionOrPrimaryPrefix.xhtml">parseParenthesisExpressionOrPrimaryPrefix</a>()
                    </li><li>private ASTExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParenthesisExpression.xhtml">parseParenthesisExpression</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMemberPrefixOrFunctionPostfix.xhtml">parseMemberPrefixOrFunctionPostfix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalFunctionPostfix.xhtml">parseOptionalFunctionPostfix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionPostfix.xhtml">parseFunctionPostfix</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostfixIdentifier.xhtml">parsePostfixIdentifier</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalMemberPrimaryPrefix.xhtml">parseOptionalMemberPrimaryPrefix</a>()
                    </li><li>private ASTMemberPrimaryPrefix <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMemberPrimaryPrefix.xhtml">parseMemberPrimaryPrefix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalStaticMemberPrimaryPrefix.xhtml">parseOptionalStaticMemberPrimaryPrefix</a>()
                    </li><li>private ASTMemberPrimaryPrefix <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticMemberPrimaryPrefix.xhtml">parseStaticMemberPrimaryPrefix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrConstantPostfix.xhtml">parseMethodOrConstantPostfix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrPropertyPostfix.xhtml">parseMethodOrPropertyPostfix</a>()
                    </li><li>private ASTPropertyPostfix <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePropertyPostfix.xhtml">parsePropertyPostfix</a>()
                    </li><li>private ASTClassFqnPostfix <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFullQualifiedClassNamePostfix.xhtml">parseFullQualifiedClassNamePostfix</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/extractPostfixImage.xhtml">extractPostfixImage</a>()
                    </li><li>private ASTMethodPostfix <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodPostfix.xhtml">parseMethodPostfix</a>()
                    </li><li>protected ASTArguments <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArguments.xhtml">parseArguments</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrConstantOrPrimaryPrefix.xhtml">parseVariableOrConstantOrPrimaryPrefix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrFunctionPostfixOrMemberPrimaryPrefix.xhtml">parseVariableOrFunctionPostfixOrMemberPrimaryPrefix</a>()
                    </li><li>protected ASTAssignmentExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAssignmentExpression.xhtml">parseAssignmentExpression</a>()
                    </li><li>private ASTStaticReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticReference.xhtml">parseStaticReference</a>()
                    </li><li>protected ASTSelfReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSelfReference.xhtml">parseSelfReference</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstant.xhtml">parseConstant</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantOrSelfMemberPrimaryPrefix.xhtml">parseConstantOrSelfMemberPrimaryPrefix</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParentReference.xhtml">parseParentReference</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantOrParentMemberPrimaryPrefix.xhtml">parseConstantOrParentMemberPrimaryPrefix</a>()
                    </li><li>private ASTUnaryExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrMemberOptionalByReference.xhtml">parseVariableOrMemberOptionalByReference</a>()
                    </li><li>private ASTUnaryExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrMemberByReference.xhtml">parseVariableOrMemberByReference</a>()
                    </li><li>private ASTVariable <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariable.xhtml">parseVariable</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableList.xhtml">parseVariableList</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrVariableVariableOrVariable.xhtml">parseCompoundVariableOrVariableVariableOrVariable</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrLiteral.xhtml">parseCompoundVariableOrLiteral</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrVariableVariable.xhtml">parseCompoundVariableOrVariableVariable</a>()
                    </li><li>private ASTCompoundVariable <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariable.xhtml">parseCompoundVariable</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundExpressionOrLiteral.xhtml">parseCompoundExpressionOrLiteral</a>()
                    </li><li>protected ASTCompoundExpression <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundExpression.xhtml">parseCompoundExpression</a>()
                    </li><li>protected ASTIdentifier <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIdentifier.xhtml">parseIdentifier</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLiteralOrString.xhtml">parseLiteralOrString</a>()
                    </li><li>protected ASTLiteral <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIntegerNumber.xhtml">parseIntegerNumber</a>()
                    </li><li>protected ASTArray <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/doParseArray.xhtml">doParseArray</a>()
                    </li><li>protected abstract boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isArrayStartDelimiter.xhtml">isArrayStartDelimiter</a>()
                    </li><li>protected abstract ASTArray <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArray.xhtml">parseArray</a>()
                    </li><li>protected ASTArray <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayElements.xhtml">parseArrayElements</a>()
                    </li><li>protected ASTArrayElement <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayElement.xhtml">parseArrayElement</a>()
                    </li><li>protected ASTHeredoc <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseHeredoc.xhtml">parseHeredoc</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringSequence.xhtml">parseStringSequence</a>()
                    </li><li>private ASTString <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseString.xhtml">parseString</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringExpressions.xhtml">parseStringExpressions</a>()
                    </li><li>private ASTLiteral <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEscapedAstLiteralString.xhtml">parseEscapedAstLiteralString</a>()
                    </li><li>protected ASTLiteral <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLiteral.xhtml">parseLiteral</a>()
                    </li><li>private ASTFormalParameters <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameters.xhtml">parseFormalParameters</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterOrTypeHintOrByReference.xhtml">parseFormalParameterOrTypeHintOrByReference</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndArrayTypeHint.xhtml">parseFormalParameterAndArrayTypeHint</a>()
                    </li><li>protected ASTTypeArray <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayType.xhtml">parseArrayType</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndTypeHint.xhtml">parseFormalParameterAndTypeHint</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndParentTypeHint.xhtml">parseFormalParameterAndParentTypeHint</a>()
                    </li><li>protected ASTParentReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParentType.xhtml">parseParentType</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndSelfTypeHint.xhtml">parseFormalParameterAndSelfTypeHint</a>()
                    </li><li>protected ASTSelfReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSelfType.xhtml">parseSelfType</a>()
                    </li><li>protected ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterOrByReference.xhtml">parseFormalParameterOrByReference</a>()
                    </li><li>private ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndByReference.xhtml">parseFormalParameterAndByReference</a>()
                    </li><li>protected ASTFormalParameter <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameter.xhtml">parseFormalParameter</a>()
                    </li><li>protected boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isTypeHint.xhtml">isTypeHint</a>()
                    </li><li>protected ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTypeHint.xhtml">parseTypeHint</a>()
                    </li><li>private ASTScope <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseScope.xhtml">parseScope</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatement.xhtml">parseStatement</a>()
                    </li><li>private ASTNode <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalStatement.xhtml">parseOptionalStatement</a>()
                    </li><li>private integer <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseNonePhpCode.xhtml">parseNonePhpCode</a>()
                    </li><li>private ASTComment <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCommentWithOptionalInlineClassOrInterfaceReference.xhtml">parseCommentWithOptionalInlineClassOrInterfaceReference</a>()
                    </li><li>private ASTClosure <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalBoundVariables.xhtml">parseOptionalBoundVariables</a>()
                    </li><li>private ASTClosure <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBoundVariables.xhtml">parseBoundVariables</a>()
                    </li><li>protected string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseQualifiedName.xhtml">parseQualifiedName</a>()
                    </li><li>private array(string) <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseQualifiedNameRaw.xhtml">parseQualifiedNameRaw</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseNamespaceDeclaration.xhtml">parseNamespaceDeclaration</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUseDeclarations.xhtml">parseUseDeclarations</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUseDeclaration.xhtml">parseUseDeclaration</a>()
                    </li><li>private ASTConstantDefinition <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDefinition.xhtml">parseConstantDefinition</a>()
                    </li><li>protected ASTConstantDeclarator <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDeclarator.xhtml">parseConstantDeclarator</a>()
                    </li><li>protected ASTValue <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDeclaratorValue.xhtml">parseConstantDeclaratorValue</a>()
                    </li><li>private ASTConstant <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticVariableDeclarationOrMemberPrimaryPrefix.xhtml">parseStaticVariableDeclarationOrMemberPrimaryPrefix</a>()
                    </li><li>private ASTStaticVariableDeclaration <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticVariableDeclaration.xhtml">parseStaticVariableDeclaration</a>()
                    </li><li>protected ASTVariableDeclarator <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableDeclarator.xhtml">parseVariableDeclarator</a>()
                    </li><li>protected ASTValue <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValueOrStaticArray.xhtml">parseStaticValueOrStaticArray</a>()
                    </li><li>protected ASTValue <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValue.xhtml">parseStaticValue</a>()
                    </li><li>protected ASTValue <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValueVersionSpecific.xhtml">parseStaticValueVersionSpecific</a>()
                    </li><li>private boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isReadWriteVariable.xhtml">isReadWriteVariable</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/createQualifiedTypeName.xhtml">createQualifiedTypeName</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getNamespaceOrPackageName.xhtml">getNamespaceOrPackageName</a>()
                    </li><li>private ASTNamespace <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getNamespaceOrPackage.xhtml">getNamespaceOrPackage</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePackageAnnotation.xhtml">parsePackageAnnotation</a>()
                    </li><li>protected boolean <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isFileComment.xhtml">isFileComment</a>()
                    </li><li>private array <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseThrowsAnnotations.xhtml">parseThrowsAnnotations</a>()
                    </li><li>private string <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseReturnAnnotation.xhtml">parseReturnAnnotation</a>()
                    </li><li>private array(string) <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVarAnnotation.xhtml">parseVarAnnotation</a>()
                    </li><li>private ASTType <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclarationType.xhtml">parseFieldDeclarationType</a>()
                    </li><li>private ASTClassOrInterfaceReference <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclarationClassOrInterfaceReference.xhtml">parseFieldDeclarationClassOrInterfaceReference</a>()
                    </li><li>private ASTYieldStatmenet <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseYield.xhtml">parseYield</a>()
                    </li><li>private void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/prepareCallable.xhtml">prepareCallable</a>()
                    </li><li>protected Token <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/consumeToken.xhtml">consumeToken</a>()
                    </li><li>protected void <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/consumeComments.xhtml">consumeComments</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">4308</td>
            <td>Change this into a mandatory expression in later versions</td>
          </tr>
        </table>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="REGEXP_INLINE_TYPE">REGEXP_INLINE_TYPE</td>
              <td>'(^\s*/\*\s*
                                 @var\s+
                                   \$[a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff]*\s+
                                   (.*?)
                                \s*\*/\s*$)ix'</td>
            </tr>
            <tr>
              <td id="REGEXP_THROWS_TYPE">REGEXP_THROWS_TYPE</td>
              <td>'(\*\s*
                             @throws\s+
                               ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\\\\]*)
                            )ix'</td>
            </tr>
            <tr>
              <td id="REGEXP_RETURN_TYPE">REGEXP_RETURN_TYPE</td>
              <td>'(\*\s*
                     @return\s+
                      (array\(\s*
                        (\w+\s*=&gt;\s*)?
                        ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*
                      \)
                      |
                      ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+
                      |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]
                    )ix'</td>
            </tr>
            <tr>
              <td id="REGEXP_VAR_TYPE">REGEXP_VAR_TYPE</td>
              <td>'(\*\s*
                      @var\s+
                       (array\(\s*
                         (\w+\s*=&gt;\s*)?
                         ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\s*
                       \)
                       |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*))\s+
                       |
                       ([a-zA-Z_\x7f-\xff\\\\][a-zA-Z0-9_\x7f-\xff\|\\\\]*)\[\]\s+
                       |
                       (array)\(\s*\)\s+
                     )ix'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="classOrInterface"><strong>$classOrInterface</strong>
                —
                <a title="\PDepend\Source\AST\AbstractASTClassOrInterface" href="../classes/_PDepend_Source_AST_AbstractASTClassOrInterface.xhtml">\PDepend\Source\AST\AbstractASTClassOrInterface</a><br/><span class="indent">The actually parsed class or interface instance.</span></li>
            <li id="docComment"><strong>$docComment</strong>
                —
                string<br/><span class="indent">The last parsed doc comment or &lt;b&gt;null&lt;/b&gt;.</span></li>
            <li id="globalPackageName"><strong>$globalPackageName</strong>
                —
                string<br/><span class="indent">The package defined in the file level comment.</span></li>
            <li id="idBuilder"><strong>$idBuilder</strong>
                —
                <a title="\PDepend\Util\IdBuilder" href="../classes/_PDepend_Util_IdBuilder.xhtml">\PDepend\Util\IdBuilder</a><br/><span class="indent">Used identifier builder instance.</span></li>
            <li id="ignoreAnnotations"><strong>$ignoreAnnotations</strong>
                —
                boolean<br/><span class="indent">If this property is set to &lt;b&gt;true&lt;/b&gt; the parser will ignore all doc comment annotations.</span></li>
            <li id="maxNestingLevel"><strong>$maxNestingLevel</strong>
                —
                integer<br/><span class="indent">The maximum valid nesting level allowed.</span></li>
            <li id="modifiers"><strong>$modifiers</strong>
                —
                integer<br/><span class="indent">Bitfield of last parsed modifiers.</span></li>
            <li id="namespaceName"><strong>$namespaceName</strong>
                —
                string<br/><span class="indent">The name of the last detected namespace.</span></li>
            <li id="namespacePrefixReplaced"><strong>$namespacePrefixReplaced</strong>
                —
                boolean<br/><span class="indent">Internal state flag, that will be set to &lt;b&gt;true&lt;/b&gt; when the parser has prefixed a qualified name with the actual namespace.</span></li>
            <li id="packageName"><strong>$packageName</strong>
                —
                string<br/><span class="indent">Last parsed package tag.</span></li>
            <li id="tokenStack"><strong>$tokenStack</strong>
                —
                <a title="\PDepend\Source\Tokenizer\TokenStack" href="../classes/_PDepend_Source_Tokenizer_TokenStack.xhtml">\PDepend\Source\Tokenizer\TokenStack</a><br/><span class="indent">Stack with all active token scopes.</span></li>
            <li id="useSymbolTable"><strong>$useSymbolTable</strong>
                —
                <a title="\PDepend\Source\Parser\SymbolTable" href="../classes/_PDepend_Source_Parser_SymbolTable.xhtml">\PDepend\Source\Parser\SymbolTable</a><br/><span class="indent">The symbol table used to handle PHP 5.3 use statements.</span></li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="builder"><strong>$builder</strong>
                —
                <a title="PDepend\Source\Builder\Builder" href="../classes/PDepend_Source_Builder_Builder.xhtml">PDepend\Source\Builder\Builder</a><br/><span class="indent">The used data structure builder.</span></li>
            <li id="cache"><strong>$cache</strong>
                —
                <a title="\PDepend\Util\Cache\CacheDriver" href="../classes/_PDepend_Util_Cache_CacheDriver.xhtml">\PDepend\Util\Cache\CacheDriver</a></li>
            <li id="compilationUnit"><strong>$compilationUnit</strong>
                —
                <a title="\PDepend\Source\AST\ASTCompilationUnit" href="../classes/_PDepend_Source_AST_ASTCompilationUnit.xhtml">\PDepend\Source\AST\ASTCompilationUnit</a><br/><span class="indent">The currently parsed file instance.</span></li>
            <li id="tokenizer">
              <strong>$tokenizer</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="createQualifiedTypeName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/createQualifiedTypeName.xhtml">createQualifiedTypeName()</a>
                — This method creates a qualified class or interface name based on the current parser state. By default method uses the current namespace scope as prefix for the given local name. And it will fallback to a previously parsed package annotation, when no namespace declaration was parsed.</li>
            <li id="extractPostfixImage"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/extractPostfixImage.xhtml">extractPostfixImage()</a>
                — This method will extract the image/name of the real property/variable that is wrapped by {@link \PDepend\Source\AST\ASTIndexExpression} nodes. If the given node is now wrapped by index expressions, this method will return the image of the entire &lt;b&gt;$node&lt;/b&gt;.</li>
            <li id="getNamespaceOrPackage"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getNamespaceOrPackage.xhtml">getNamespaceOrPackage()</a>
                — Returns the currently active package or namespace.</li>
            <li id="getNamespaceOrPackageName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getNamespaceOrPackageName.xhtml">getNamespaceOrPackageName()</a>
                — Returns the name of a declared names. When the parsed code is not namespaced this method will return the name from the @package annotation.</li>
            <li id="isAlternativeScopeTermination"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isAlternativeScopeTermination.xhtml">isAlternativeScopeTermination()</a>
                — This method returns &lt;b&gt;true&lt;/b&gt; when the given token identifier represents the end token of a alternative scope termination symbol. Otherwise this method will return &lt;b&gt;false&lt;/b&gt;.</li>
            <li id="isNextTokenByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenByReference.xhtml">isNextTokenByReference()</a>
                — Tests that the next available token is the returns by reference token.</li>
            <li id="isNextTokenFormalParameterList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenFormalParameterList.xhtml">isNextTokenFormalParameterList()</a>
                — Tests that the next available token is an opening parenthesis.</li>
            <li id="isReadWriteVariable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isReadWriteVariable.xhtml">isReadWriteVariable()</a>
                — Checks if the given expression is a read/write variable as defined in the PHP zend_language_parser.y definition.</li>
            <li id="parseAllocationExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAllocationExpression.xhtml">parseAllocationExpression()</a>
                — Parses an allocation expression.</li>
            <li id="parseAlternativeScope"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAlternativeScope.xhtml">parseAlternativeScope()</a>
                — Parses the scope of a statement that is surrounded with PHP's alternative syntax for statements.</li>
            <li id="parseAlternativeScopeTermination"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAlternativeScopeTermination.xhtml">parseAlternativeScopeTermination()</a>
                — Parses a series of tokens that represent an alternative scope termination.</li>
            <li id="parseArrayIndexExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayIndexExpression.xhtml">parseArrayIndexExpression()</a>
                — Parses a mandatory array index expression.</li>
            <li id="parseBoundVariables"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBoundVariables.xhtml">parseBoundVariables()</a>
                — Parses a list of bound closure variables.</li>
            <li id="parseBraceExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBraceExpression.xhtml">parseBraceExpression()</a>
                — This method parses a brace expression and adds all parsed node instances to the given {@link \PDepend\Source\AST\ASTNode} object. Finally it returns the prepared input node.</li>
            <li id="parseBreakStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBreakStatement.xhtml">parseBreakStatement()</a>
                — This method parses a break-statement node.</li>
            <li id="parseByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseByReference.xhtml">parseByReference()</a>
                — This method parses a returns by reference token and returns &lt;b&gt;true&lt;/b&gt;.</li>
            <li id="parseCallableDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCallableDeclaration.xhtml">parseCallableDeclaration()</a>
                — Parses a function or a method and adds it to the parent context node.</li>
            <li id="parseCatchStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCatchStatement.xhtml">parseCatchStatement()</a>
                — This method parses a catch-statement.</li>
            <li id="parseClassDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassDeclaration.xhtml">parseClassDeclaration()</a>
                — Parses the dependencies in a class signature.</li>
            <li id="parseClassModifiers"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassModifiers.xhtml">parseClassModifiers()</a>
                — This method parses an optional class modifier. Valid class modifiers are &lt;b&gt;final&lt;/b&gt; or &lt;b&gt;abstract&lt;/b&gt;.</li>
            <li id="parseClassOrInterfaceReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassOrInterfaceReference.xhtml">parseClassOrInterfaceReference()</a>
                — Parses a class or interface reference node.</li>
            <li id="parseClassSignature"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassSignature.xhtml">parseClassSignature()</a>
                — Parses the signature of a class.</li>
            <li id="parseCloneExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCloneExpression.xhtml">parseCloneExpression()</a>
                — Parses a clone-expression node.</li>
            <li id="parseClosureDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClosureDeclaration.xhtml">parseClosureDeclaration()</a>
                — This method parses a PHP 5.3 closure or lambda function.</li>
            <li id="parseCommentWithOptionalInlineClassOrInterfaceReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCommentWithOptionalInlineClassOrInterfaceReference.xhtml">parseCommentWithOptionalInlineClassOrInterfaceReference()</a>
                — Parses a comment and optionally an embedded class or interface type annotation.</li>
            <li id="parseCompoundExpressionOrLiteral"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundExpressionOrLiteral.xhtml">parseCompoundExpressionOrLiteral()</a>
                — This method parses a compound expression like:</li>
            <li id="parseCompoundVariable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariable.xhtml">parseCompoundVariable()</a>
                — This method parses a compound variable like:</li>
            <li id="parseCompoundVariableOrLiteral"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrLiteral.xhtml">parseCompoundVariableOrLiteral()</a>
                — Parses a PHP compound variable or a simple literal node.</li>
            <li id="parseCompoundVariableOrVariableVariable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrVariableVariable.xhtml">parseCompoundVariableOrVariableVariable()</a>
                — This method implements a decision point between compound-variables and variable-variable. It expects that the next token in the token-stream is of type &lt;b&gt;T_DOLLAR&lt;/b&gt; and removes it from the stream. Then this method peeks the next available token when it is of type &lt;b&gt;T_CURLY_BRACE_OPEN&lt;/b&gt; this is compound variable, otherwise it can be a variable-variable or a compound-variable.</li>
            <li id="parseConstantDefinition"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDefinition.xhtml">parseConstantDefinition()</a>
                — Parses a single constant definition with one or more constant declarators.</li>
            <li id="parseConstantOrParentMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantOrParentMemberPrimaryPrefix.xhtml">parseConstantOrParentMemberPrimaryPrefix()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTConstant} node or an instance of {@link \PDepend\Source\AST\ASTParentReference} as part of a {@link \PDepend\Source\AST\ASTMemberPrimaryPrefix} that contains the parent reference as its first child when the self token is followed by a double colon token.</li>
            <li id="parseConstantOrSelfMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantOrSelfMemberPrimaryPrefix.xhtml">parseConstantOrSelfMemberPrimaryPrefix()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTConstant} node or an instance of {@link \PDepend\Source\AST\ASTSelfReference} as part of a {@link \PDepend\Source\AST\ASTMemberPrimaryPrefix} that contains the self reference as its first child when the self token is followed by a double colon token.</li>
            <li id="parseContinueStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseContinueStatement.xhtml">parseContinueStatement()</a>
                — This method parses a continue-statement node.</li>
            <li id="parseDeclareList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDeclareList.xhtml">parseDeclareList()</a>
                — This method parses a list of declare values. A declare list value always consists of a string token and a static scalar.</li>
            <li id="parseDeclareStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDeclareStatement.xhtml">parseDeclareStatement()</a>
                — This method parses a declare-statement.</li>
            <li id="parseDecrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDecrementExpression.xhtml">parseDecrementExpression()</a>
                — This method will parse an decrement-expression. Depending on the previous node this can be a {@link \PDepend\Source\AST\ASTPostDecrementExpression} or {@link \PDepend\Source\AST\ASTPostfixExpression}.</li>
            <li id="parseDoWhileStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseDoWhileStatement.xhtml">parseDoWhileStatement()</a>
                — This method parses a do/while-statement.</li>
            <li id="parseEchoStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEchoStatement.xhtml">parseEchoStatement()</a>
                — This method parses a echo-statement node.</li>
            <li id="parseElseIfStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseElseIfStatement.xhtml">parseElseIfStatement()</a>
                — This method parses a single elseif-statement node.</li>
            <li id="parseEscapedAstLiteralString"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEscapedAstLiteralString.xhtml">parseEscapedAstLiteralString()</a>
                — This method parses an escaped sequence of literal tokens.</li>
            <li id="parseEvalExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseEvalExpression.xhtml">parseEvalExpression()</a>
                — Parses a eval-expression node.</li>
            <li id="parseExitExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExitExpression.xhtml">parseExitExpression()</a>
                — This method parses an exit-expression.</li>
            <li id="parseExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpression.xhtml">parseExpression()</a>
                — This method parses an expression node and returns it. When no expression was found this method will throw an InvalidStateException.</li>
            <li id="parseExpressionList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpressionList.xhtml">parseExpressionList()</a>
                — This method parses multiple expressions and adds them as children to the given &lt;b&gt;$exprList&lt;/b&gt; node.</li>
            <li id="parseFieldDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclaration.xhtml">parseFieldDeclaration()</a>
                — This method will parse a class field declaration with all it's variables.</li>
            <li id="parseFieldDeclarationClassOrInterfaceReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclarationClassOrInterfaceReference.xhtml">parseFieldDeclarationClassOrInterfaceReference()</a>
                — Extracts non scalar types from a field doc comment and creates a matching type instance.</li>
            <li id="parseFieldDeclarationType"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFieldDeclarationType.xhtml">parseFieldDeclarationType()</a>
                — This method will extract the type information of a property from it's doc comment information. The returned value will be &lt;b&gt;null&lt;/b&gt; when no type information exists.</li>
            <li id="parseFinallyStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFinallyStatement.xhtml">parseFinallyStatement()</a>
                — This method parses a finally-statement.</li>
            <li id="parseForExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForExpression.xhtml">parseForExpression()</a>
                — Parses the expression part of a for-statement.</li>
            <li id="parseForInit"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForInit.xhtml">parseForInit()</a>
                — Parses the init part of a for-statement.</li>
            <li id="parseForStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForStatement.xhtml">parseForStatement()</a>
                — This method parses a single for-statement node.</li>
            <li id="parseForUpdate"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForUpdate.xhtml">parseForUpdate()</a>
                — Parses the update part of a for-statement.</li>
            <li id="parseForeachStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseForeachStatement.xhtml">parseForeachStatement()</a>
                — This method parses a single foreach-statement node.</li>
            <li id="parseFormalParameterAndArrayTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndArrayTypeHint.xhtml">parseFormalParameterAndArrayTypeHint()</a>
                — This method parses a formal parameter that has an array type hint.</li>
            <li id="parseFormalParameterAndByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndByReference.xhtml">parseFormalParameterAndByReference()</a>
                — This method will parse a formal parameter that is passed by reference.</li>
            <li id="parseFormalParameterAndParentTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndParentTypeHint.xhtml">parseFormalParameterAndParentTypeHint()</a>
                — This method will parse a formal parameter that has the keyword parent as parameter type hint.</li>
            <li id="parseFormalParameterAndSelfTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndSelfTypeHint.xhtml">parseFormalParameterAndSelfTypeHint()</a>
                — This method will parse a formal parameter that has the keyword self as parameter type hint.</li>
            <li id="parseFormalParameterAndTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterAndTypeHint.xhtml">parseFormalParameterAndTypeHint()</a>
                — This method parses a formal parameter that has a regular class type hint.</li>
            <li id="parseFormalParameterOrTypeHintOrByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterOrTypeHintOrByReference.xhtml">parseFormalParameterOrTypeHintOrByReference()</a>
                — This method parses a formal parameter in all it's variations.</li>
            <li id="parseFormalParameters"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameters.xhtml">parseFormalParameters()</a>
                — Extracts all dependencies from a callable signature.</li>
            <li id="parseFullQualifiedClassNamePostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFullQualifiedClassNamePostfix.xhtml">parseFullQualifiedClassNamePostfix()</a>
                — Parses a full qualified class name postfix.</li>
            <li id="parseFunctionDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionDeclaration.xhtml">parseFunctionDeclaration()</a>
                — This method parses a function declaration.</li>
            <li id="parseFunctionOrClosureDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionOrClosureDeclaration.xhtml">parseFunctionOrClosureDeclaration()</a>
                — This method parses a simple function or a PHP 5.3 lambda function or closure.</li>
            <li id="parseFunctionPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionPostfix.xhtml">parseFunctionPostfix()</a>
                — This method parses a function postfix expression. An object of type {@link \PDepend\Source\AST\ASTFunctionPostfix} represents any valid php function call.</li>
            <li id="parseGlobalStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseGlobalStatement.xhtml">parseGlobalStatement()</a>
                — This method parses a global-statement.</li>
            <li id="parseGotoStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseGotoStatement.xhtml">parseGotoStatement()</a>
                — This method parses a goto-statement.</li>
            <li id="parseIfStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIfStatement.xhtml">parseIfStatement()</a>
                — This method parses a single if-statement node.</li>
            <li id="parseIncludeExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncludeExpression.xhtml">parseIncludeExpression()</a>
                — Parses a include-expression node.</li>
            <li id="parseIncludeOnceExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncludeOnceExpression.xhtml">parseIncludeOnceExpression()</a>
                — Parses a include_once-expression node.</li>
            <li id="parseIncrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIncrementExpression.xhtml">parseIncrementExpression()</a>
                — This method will parse an increment-expression. Depending on the previous node this can be a {@link \PDepend\Source\AST\ASTPostIncrementExpression} or {@link \PDepend\Source\AST\ASTPostfixExpression}.</li>
            <li id="parseIndexExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIndexExpression.xhtml">parseIndexExpression()</a>
                — Parses an index expression as it is valid to access elements in a php string or array.</li>
            <li id="parseInstanceOfExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInstanceOfExpression.xhtml">parseInstanceOfExpression()</a>
                — This method parse an instance of expression with its associated class or interface reference.</li>
            <li id="parseInterfaceDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceDeclaration.xhtml">parseInterfaceDeclaration()</a>
                — Parses the dependencies in a interface signature.</li>
            <li id="parseInterfaceSignature"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceSignature.xhtml">parseInterfaceSignature()</a>
                — Parses the signature of an interface and finally returns a configured interface instance.</li>
            <li id="parseIssetExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIssetExpression.xhtml">parseIssetExpression()</a>
                — Parses an isset-expression node.</li>
            <li id="parseLabelStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLabelStatement.xhtml">parseLabelStatement()</a>
                — This method parses a label-statement.</li>
            <li id="parseListExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseListExpression.xhtml">parseListExpression()</a>
                — This method parses a single list-statement node.</li>
            <li id="parseMemberPrefixOrFunctionPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMemberPrefixOrFunctionPostfix.xhtml">parseMemberPrefixOrFunctionPostfix()</a>
                — This method parses a member primary prefix expression or a function postfix expression node.</li>
            <li id="parseMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMemberPrimaryPrefix.xhtml">parseMemberPrimaryPrefix()</a>
                — This method parses a dynamic or object bound member primary expression.</li>
            <li id="parseMethodDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodDeclaration.xhtml">parseMethodDeclaration()</a>
                — This method parses a method declaration.</li>
            <li id="parseMethodOrConstantPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrConstantPostfix.xhtml">parseMethodOrConstantPostfix()</a>
                — This method parses a method- or constant-postfix expression. This expression will contain an identifier node as nested child.</li>
            <li id="parseMethodOrFieldDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrFieldDeclaration.xhtml">parseMethodOrFieldDeclaration()</a>
                — This method will parse a list of modifiers and a following property or method.</li>
            <li id="parseMethodOrPropertyPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodOrPropertyPostfix.xhtml">parseMethodOrPropertyPostfix()</a>
                — This method parses a method- or property-postfix expression. This expression will contain the given node as method or property identifier.</li>
            <li id="parseMethodPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseMethodPostfix.xhtml">parseMethodPostfix()</a>
                — Parses a method postfix node instance.</li>
            <li id="parseNamespaceDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseNamespaceDeclaration.xhtml">parseNamespaceDeclaration()</a>
                — This method parses a PHP 5.3 namespace declaration.</li>
            <li id="parseNonePhpCode"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseNonePhpCode.xhtml">parseNonePhpCode()</a>
                — Parses a sequence of none php code tokens and returns the token type of the next token.</li>
            <li id="parseOptionalAlternativeScopeTermination"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalAlternativeScopeTermination.xhtml">parseOptionalAlternativeScopeTermination()</a>
                — Parses the termination of a scope statement that uses PHP's laternative syntax format.</li>
            <li id="parseOptionalBoundVariables"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalBoundVariables.xhtml">parseOptionalBoundVariables()</a>
                — Parses an optional set of bound closure variables.</li>
            <li id="parseOptionalByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalByReference.xhtml">parseOptionalByReference()</a>
                — Parses an optional by reference token. The return value will be &lt;b&gt;true&lt;/b&gt; when a reference token was found, otherwise this method will return &lt;b&gt;false&lt;/b&gt;.</li>
            <li id="parseOptionalElseOrElseIfStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalElseOrElseIfStatement.xhtml">parseOptionalElseOrElseIfStatement()</a>
                — This method parses an optional else-, else+if- or elseif-statement.</li>
            <li id="parseOptionalExtendsList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExtendsList.xhtml">parseOptionalExtendsList()</a>
                — Parses an optional interface list of an interface declaration.</li>
            <li id="parseOptionalFunctionPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalFunctionPostfix.xhtml">parseOptionalFunctionPostfix()</a>
                — This method will parse an optional function postfix.</li>
            <li id="parseOptionalMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalMemberPrimaryPrefix.xhtml">parseOptionalMemberPrimaryPrefix()</a>
                — This method parses an optional member primary expression. It will parse the primary expression when an object operator can be found at the actual token stream position. Otherwise this method simply returns the input {@link \PDepend\Source\AST\ASTNode} instance.</li>
            <li id="parseOptionalStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalStatement.xhtml">parseOptionalStatement()</a>
                — Parses an optional statement or returns &lt;b&gt;null&lt;/b&gt;.</li>
            <li id="parseOptionalStaticMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalStaticMemberPrimaryPrefix.xhtml">parseOptionalStaticMemberPrimaryPrefix()</a>
                — This method parses an optional member primary expression. It will parse the primary expression when a double colon operator can be found at the actual token stream position. Otherwise this method simply returns the input {@link \PDepend\Source\AST\ASTNode} instance.</li>
            <li id="parseOptionalTraitAdaptation"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalTraitAdaptation.xhtml">parseOptionalTraitAdaptation()</a>
                — Parses the adaptation list of the given use statement or simply reads the terminating semicolon, when no adaptation list exists.</li>
            <li id="parsePackageAnnotation"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePackageAnnotation.xhtml">parsePackageAnnotation()</a>
                — Extracts the @package information from the given comment.</li>
            <li id="parseParentReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParentReference.xhtml">parseParentReference()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTParentReference} node.</li>
            <li id="parseParenthesisExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParenthesisExpression.xhtml">parseParenthesisExpression()</a>
                — Parses any expression that is surrounded by an opening and a closing parenthesis</li>
            <li id="parsePostDecrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostDecrementExpression.xhtml">parsePostDecrementExpression()</a>
                — Parses a post decrement-expression and adds the given child to that node.</li>
            <li id="parsePostIncrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostIncrementExpression.xhtml">parsePostIncrementExpression()</a>
                — Parses a post increment-expression and adds the given child to that node.</li>
            <li id="parsePreDecrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePreDecrementExpression.xhtml">parsePreDecrementExpression()</a>
                — Parses a pre decrement-expression and adds the given child to that node.</li>
            <li id="parsePreIncrementExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePreIncrementExpression.xhtml">parsePreIncrementExpression()</a>
                — Parses a pre increment-expression and adds the given child to that node.</li>
            <li id="parsePropertyPostfix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePropertyPostfix.xhtml">parsePropertyPostfix()</a>
                — Parses/Creates a property postfix node instance.</li>
            <li id="parseQualifiedNameRaw"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseQualifiedNameRaw.xhtml">parseQualifiedNameRaw()</a>
                — This method parses a qualified PHP 5.3 class, interface and namespace identifier and returns the collected tokens as a string array.</li>
            <li id="parseRegularScope"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRegularScope.xhtml">parseRegularScope()</a>
                — Parse a scope enclosed by curly braces.</li>
            <li id="parseRequireExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireExpression.xhtml">parseRequireExpression()</a>
                — Parses a require-expression node.</li>
            <li id="parseRequireOnceExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireOnceExpression.xhtml">parseRequireOnceExpression()</a>
                — Parses a require_once-expression node.</li>
            <li id="parseRequireOrIncludeExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseRequireOrIncludeExpression.xhtml">parseRequireOrIncludeExpression()</a>
                — Parses a &lt;b&gt;require_once&lt;/b&gt;-, &lt;b&gt;require&lt;/b&gt;-, &lt;b&gt;include_once&lt;/b&gt;- or &lt;b&gt;include&lt;/b&gt;-expression node.</li>
            <li id="parseReturnAnnotation"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseReturnAnnotation.xhtml">parseReturnAnnotation()</a>
                — This method parses the given doc comment text for a return annotation and it returns the found return type.</li>
            <li id="parseReturnStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseReturnStatement.xhtml">parseReturnStatement()</a>
                — This method parses a single return-statement node.</li>
            <li id="parseScope"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseScope.xhtml">parseScope()</a>
                — Extracts all dependencies from a callable body.</li>
            <li id="parseScopeStatements"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseScopeStatements.xhtml">parseScopeStatements()</a>
                — Parses all statements that exist in a scope an adds them to a scope instance.</li>
            <li id="parseStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatement.xhtml">parseStatement()</a>
                — Parse a statement.</li>
            <li id="parseStatementBody"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatementBody.xhtml">parseStatementBody()</a>
                — Parses the body of the given statement instance and adds all parsed nodes to that statement.</li>
            <li id="parseStatementTermination"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStatementTermination.xhtml">parseStatementTermination()</a>
                — Parses the termination token for a statement. This termination token can be a semicolon or a closing php tag.</li>
            <li id="parseStaticMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticMemberPrimaryPrefix.xhtml">parseStaticMemberPrimaryPrefix()</a>
                — This method parses a static member primary expression. The given node contains the used static class or interface identifier. A static member primary prefix can represent the following code expressions:</li>
            <li id="parseStaticReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticReference.xhtml">parseStaticReference()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTStaticReference} node.</li>
            <li id="parseStaticVariableDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticVariableDeclaration.xhtml">parseStaticVariableDeclaration()</a>
                — This method will parse a static variable declaration.</li>
            <li id="parseStaticVariableDeclarationOrMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticVariableDeclarationOrMemberPrimaryPrefix.xhtml">parseStaticVariableDeclarationOrMemberPrimaryPrefix()</a>
                — This method parses a static variable declaration list, a member primary prefix invoked in the static context of a class or it parses a static closure declaration.</li>
            <li id="parseString"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseString.xhtml">parseString()</a>
                — This method parses a php string with all possible embedded expressions.</li>
            <li id="parseStringExpressions"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringExpressions.xhtml">parseStringExpressions()</a>
                — This method parses the contents of a string or here-/now-doc node. It will not consume the given stop token, so it is up to the calling method to consume the stop token. The return value of this method is the prepared input string node.</li>
            <li id="parseStringIndexExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringIndexExpression.xhtml">parseStringIndexExpression()</a>
                — Parses a mandatory array index expression.</li>
            <li id="parseStringSequence"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStringSequence.xhtml">parseStringSequence()</a>
                — Parses a simple string sequence between two tokens of the same type.</li>
            <li id="parseSwitchLabel"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabel.xhtml">parseSwitchLabel()</a>
                — This method parses a case label of a switch statement.</li>
            <li id="parseSwitchLabelBody"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabelBody.xhtml">parseSwitchLabelBody()</a>
                — Parses the body of an switch label node.</li>
            <li id="parseSwitchLabelDefault"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchLabelDefault.xhtml">parseSwitchLabelDefault()</a>
                — This method parses the default label of a switch statement.</li>
            <li id="parseSwitchStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchStatement.xhtml">parseSwitchStatement()</a>
                — This method parses a switch statement.</li>
            <li id="parseSwitchStatementBody"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSwitchStatementBody.xhtml">parseSwitchStatementBody()</a>
                — Parses the body of a switch statement.</li>
            <li id="parseThrowStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseThrowStatement.xhtml">parseThrowStatement()</a>
                — This method parses a throw-statement.</li>
            <li id="parseThrowsAnnotations"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseThrowsAnnotations.xhtml">parseThrowsAnnotations()</a>
                — Returns the class names of all &lt;b&gt;throws&lt;/b&gt; annotations with in the given comment block.</li>
            <li id="parseTraitAdaptation"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptation.xhtml">parseTraitAdaptation()</a>
                — Parses the adaptation expression of a trait use statement.</li>
            <li id="parseTraitAdaptationAliasStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptationAliasStatement.xhtml">parseTraitAdaptationAliasStatement()</a>
                — Parses a trait adaptation alias statement.</li>
            <li id="parseTraitAdaptationPrecedenceStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitAdaptationPrecedenceStatement.xhtml">parseTraitAdaptationPrecedenceStatement()</a>
                — Parses a trait adaptation precedence statement.</li>
            <li id="parseTraitDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitDeclaration.xhtml">parseTraitDeclaration()</a>
                — Parses a trait declaration.</li>
            <li id="parseTraitMethodReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitMethodReference.xhtml">parseTraitMethodReference()</a>
                — Parses a trait method reference and returns the found reference as an &lt;b&gt;array&lt;/b&gt;.</li>
            <li id="parseTraitReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitReference.xhtml">parseTraitReference()</a>
                — Parses a trait reference instance.</li>
            <li id="parseTraitSignature"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitSignature.xhtml">parseTraitSignature()</a>
                — Parses the signature of a trait.</li>
            <li id="parseTraitUseStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTraitUseStatement.xhtml">parseTraitUseStatement()</a>
                — Parses a trait use statement.</li>
            <li id="parseTryStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTryStatement.xhtml">parseTryStatement()</a>
                — This method parses a try-statement + associated catch-statements.</li>
            <li id="parseTypeBody"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTypeBody.xhtml">parseTypeBody()</a>
                — Parses a class/interface/trait body.</li>
            <li id="parseUnsetStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUnsetStatement.xhtml">parseUnsetStatement()</a>
                — This method parses a unset-statement.</li>
            <li id="parseUseDeclaration"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUseDeclaration.xhtml">parseUseDeclaration()</a>
                — This method parses a single use declaration and adds a mapping between short name and full qualified name to the use symbol table.</li>
            <li id="parseUseDeclarations"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseUseDeclarations.xhtml">parseUseDeclarations()</a>
                — This method parses a list of PHP 5.3 use declarations and adds a mapping between short name and full qualified name to the use symbol table.</li>
            <li id="parseVarAnnotation"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVarAnnotation.xhtml">parseVarAnnotation()</a>
                — This method parses the given doc comment text for a var annotation and it returns the found property types.</li>
            <li id="parseVariable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariable.xhtml">parseVariable()</a>
                — This method parses a simple PHP variable.</li>
            <li id="parseVariableList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableList.xhtml">parseVariableList()</a>
                — This method parses a comma separated list of valid php variables and/or properties and adds them to the given node instance.</li>
            <li id="parseVariableOrFunctionPostfixOrMemberPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrFunctionPostfixOrMemberPrimaryPrefix.xhtml">parseVariableOrFunctionPostfixOrMemberPrimaryPrefix()</a>
                — This method parses any type of variable, function postfix expressions or any kind of member primary prefix.</li>
            <li id="parseVariableOrMemberByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrMemberByReference.xhtml">parseVariableOrMemberByReference()</a>
                — Parses a variable or any other valid member expression that is prefixed with PHP's reference operator.</li>
            <li id="parseVariableOrMemberOptionalByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrMemberOptionalByReference.xhtml">parseVariableOrMemberOptionalByReference()</a>
                — Parses a variable or any other valid member expression that is optionally prefixed with PHP's reference operator.</li>
            <li id="parseWhileStatement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseWhileStatement.xhtml">parseWhileStatement()</a>
                — This method parses a single while-statement node.</li>
            <li id="parseYield"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseYield.xhtml">parseYield()</a>
                — This method parses a yield-statement node.</li>
            <li id="prepareCallable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/prepareCallable.xhtml">prepareCallable()</a>
                — Extracts documented &lt;b&gt;throws&lt;/b&gt; and &lt;b&gt;return&lt;/b&gt; types and sets them to the given &lt;b&gt;$callable&lt;/b&gt; instance.</li>
            <li id="reduceUnaryExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reduceUnaryExpression.xhtml">reduceUnaryExpression()</a>
                — Reduces all unary-expressions in the given expression list.</li>
            <li id="setNodePositionsAndReturn"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setNodePositionsAndReturn.xhtml">setNodePositionsAndReturn()</a>
                — This method configures the given node with its start and end positions.</li>
            <li id="stripTrailingComments"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/stripTrailingComments.xhtml">stripTrailingComments()</a>
                — Strips all trailing comments from the given token stream.</li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="consumeComments"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/consumeComments.xhtml">consumeComments()</a>
                — This method will consume all comment tokens from the token stream.</li>
            <li id="consumeToken"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/consumeToken.xhtml">consumeToken()</a>
                — This method will consume the next token in the token stream. It will throw an exception if the type of this token is not identical with &lt;b&gt;$tokenType&lt;/b&gt;.</li>
            <li id="doParseArray"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/doParseArray.xhtml">doParseArray()</a>
                — Parses an array structure.</li>
            <li id="getMaxNestingLevel"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/getMaxNestingLevel.xhtml">getMaxNestingLevel()</a>
                — Returns the maximum allowed nesting/recursion level.</li>
            <li id="isArrayStartDelimiter"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isArrayStartDelimiter.xhtml">isArrayStartDelimiter()</a>
                — Tests if the next token is a valid array start delimiter in the supported PHP version.</li>
            <li id="isClassName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isClassName.xhtml">isClassName()</a>
                — Will return &lt;b&gt;true&lt;/b&gt; if the given &lt;b&gt;$tokenType&lt;/b&gt; is a valid class name part.</li>
            <li id="isFileComment"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isFileComment.xhtml">isFileComment()</a>
                — Checks that the current token could be used as file comment.</li>
            <li id="isFunctionName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isFunctionName.xhtml">isFunctionName()</a>
                — Tests if the give token is a valid function name in the supported PHP version.</li>
            <li id="isKeyword"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isKeyword.xhtml">isKeyword()</a>
                — Tests if the given token type is a reserved keyword in the supported PHP version.</li>
            <li id="isNextTokenArguments"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isNextTokenArguments.xhtml">isNextTokenArguments()</a>
                — This method checks if the next available token starts an arguments node.</li>
            <li id="isTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/isTypeHint.xhtml">isTypeHint()</a>
                — Tests if the given token type is a valid formal parameter in the supported PHP version.</li>
            <li id="parseAllocationExpressionTypeReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAllocationExpressionTypeReference.xhtml">parseAllocationExpressionTypeReference()</a>
                — Parse the type reference used in an allocation expression.</li>
            <li id="parseArguments"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArguments.xhtml">parseArguments()</a>
                — This method parses the arguments passed to a function- or method-call.</li>
            <li id="parseArray"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArray.xhtml">parseArray()</a>
                — Parses a php array declaration.</li>
            <li id="parseArrayElement"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayElement.xhtml">parseArrayElement()</a>
                — Parses a single array element.</li>
            <li id="parseArrayElements"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayElements.xhtml">parseArrayElements()</a>
                — Parses all elements in an array.</li>
            <li id="parseArrayType">
              <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseArrayType.xhtml">parseArrayType()</a>
            </li>
            <li id="parseAssignmentExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseAssignmentExpression.xhtml">parseAssignmentExpression()</a>
                — Parses an assingment expression node.</li>
            <li id="parseBooleanAndExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBooleanAndExpression.xhtml">parseBooleanAndExpression()</a>
                — This method parses a boolean and-expression.</li>
            <li id="parseBooleanOrExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseBooleanOrExpression.xhtml">parseBooleanOrExpression()</a>
                — This method parses a boolean or-expression.</li>
            <li id="parseCallableDeclarationAddition"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCallableDeclarationAddition.xhtml">parseCallableDeclarationAddition()</a>
                — Extension for version specific additions.</li>
            <li id="parseCastExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCastExpression.xhtml">parseCastExpression()</a>
                — Parses a cast-expression node.</li>
            <li id="parseClassExtends"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassExtends.xhtml">parseClassExtends()</a>
                — Parses a parent class declaration for the given &lt;b&gt;$class&lt;/b&gt;.</li>
            <li id="parseClassName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseClassName.xhtml">parseClassName()</a>
                — Parses a valid class or interface name and returns the image of the parsed token.</li>
            <li id="parseCompoundExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundExpression.xhtml">parseCompoundExpression()</a>
                — This method parses a compound expression node.</li>
            <li id="parseCompoundVariableOrVariableVariableOrVariable"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseCompoundVariableOrVariableVariableOrVariable.xhtml">parseCompoundVariableOrVariableVariableOrVariable()</a>
                — This method is a decision point between the different variable types availanle in PHP. It peeks the next token and then decides whether it is a regular variable or when the next token is of type &lt;b&gt;T_DOLLAR&lt;/b&gt; a compound- or variable-variable.</li>
            <li id="parseConditionalExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConditionalExpression.xhtml">parseConditionalExpression()</a>
                — This method parses a conditional-expression.</li>
            <li id="parseConstant"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstant.xhtml">parseConstant()</a>
                — Parses a simple PHP constant use and returns a corresponding node.</li>
            <li id="parseConstantDeclarator"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDeclarator.xhtml">parseConstantDeclarator()</a>
                — Parses a single constant declarator.</li>
            <li id="parseConstantDeclaratorValue"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseConstantDeclaratorValue.xhtml">parseConstantDeclaratorValue()</a>
                — Parses the value of a php constant. By default this can be only static values that were allowed in the oldest supported PHP version.</li>
            <li id="parseExpressionTypeReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseExpressionTypeReference.xhtml">parseExpressionTypeReference()</a>
                — This method parses a type identifier as it is used in expression nodes like {@link \PDepend\Source\AST\ASTInstanceOfExpression} or an object allocation node like {@link \PDepend\Source\AST\ASTAllocationExpression}.</li>
            <li id="parseFormalParameter"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameter.xhtml">parseFormalParameter()</a>
                — This method will parse a formal parameter. A formal parameter is at least a variable name, but can also contain a default parameter value.</li>
            <li id="parseFormalParameterOrByReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFormalParameterOrByReference.xhtml">parseFormalParameterOrByReference()</a>
                — This method will parse a formal parameter that can optionally be passed by reference.</li>
            <li id="parseFunctionName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseFunctionName.xhtml">parseFunctionName()</a>
                — Parses a function name from the given tokenizer and returns the string literal representing the function name. If no valid token exists in the token stream, this method will throw an exception.</li>
            <li id="parseHeredoc"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseHeredoc.xhtml">parseHeredoc()</a>
                — Parses a here- or nowdoc string instance.</li>
            <li id="parseIdentifier"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIdentifier.xhtml">parseIdentifier()</a>
                — Parses a static identifier expression, as it is used for method and function names.</li>
            <li id="parseIntegerNumber"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseIntegerNumber.xhtml">parseIntegerNumber()</a>
                — Parses an integer value.</li>
            <li id="parseInterfaceList"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseInterfaceList.xhtml">parseInterfaceList()</a>
                — This method parses a list of interface names as used in the &lt;b&gt;extends&lt;/b&gt; part of a interface declaration or in the &lt;b&gt;implements&lt;/b&gt; part of a class declaration.</li>
            <li id="parseLiteral"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLiteral.xhtml">parseLiteral()</a>
                — This method parses a simple literal and configures the position properties.</li>
            <li id="parseLiteralOrString"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLiteralOrString.xhtml">parseLiteralOrString()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTLiteral} node or an instance of {@link \PDepend\Source\AST\ASTString} that represents a string in double quotes or surrounded by backticks.</li>
            <li id="parseLogicalAndExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalAndExpression.xhtml">parseLogicalAndExpression()</a>
                — This method parses a logical &lt;b&gt;and&lt;/b&gt;-expression.</li>
            <li id="parseLogicalOrExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalOrExpression.xhtml">parseLogicalOrExpression()</a>
                — This method parses a logical &lt;b&gt;or&lt;/b&gt;-expression.</li>
            <li id="parseLogicalXorExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseLogicalXorExpression.xhtml">parseLogicalXorExpression()</a>
                — This method parses a logical &lt;b&gt;xor&lt;/b&gt;-expression.</li>
            <li id="parseOptionalExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExpression.xhtml">parseOptionalExpression()</a>
                — This method optionally parses an expression node and returns it. When no expression was found this method will return &lt;b&gt;null&lt;/b&gt;.</li>
            <li id="parseOptionalExpressionForVersion"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalExpressionForVersion.xhtml">parseOptionalExpressionForVersion()</a>
                — This method will be called when the base parser cannot handle an expression in the base version. In this method you can implement version specific expressions.</li>
            <li id="parseOptionalIndexExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseOptionalIndexExpression.xhtml">parseOptionalIndexExpression()</a>
                — Parses one or more optional php &lt;b&gt;array&lt;/b&gt; or &lt;b&gt;string&lt;/b&gt; expressions.</li>
            <li id="parseParentType">
              <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParentType.xhtml">parseParentType()</a>
            </li>
            <li id="parseParenthesisExpressionOrPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseParenthesisExpressionOrPrimaryPrefix.xhtml">parseParenthesisExpressionOrPrimaryPrefix()</a>
                — Parses a simple parenthesis expression or a direct object access, which was introduced with PHP 5.4.0:</li>
            <li id="parsePostfixIdentifier"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parsePostfixIdentifier.xhtml">parsePostfixIdentifier()</a>
                — This method parses a PHP version specific identifier for method and property postfix expressions.</li>
            <li id="parseQualifiedName"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseQualifiedName.xhtml">parseQualifiedName()</a>
                — Parses a php class/method name chain.</li>
            <li id="parseSelfReference"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSelfReference.xhtml">parseSelfReference()</a>
                — This method parses a {@link \PDepend\Source\AST\ASTSelfReference} node.</li>
            <li id="parseSelfType">
              <a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseSelfType.xhtml">parseSelfType()</a>
            </li>
            <li id="parseShiftLeftExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseShiftLeftExpression.xhtml">parseShiftLeftExpression()</a>
                — This method parses a shift left expression node.</li>
            <li id="parseShiftRightExpression"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseShiftRightExpression.xhtml">parseShiftRightExpression()</a>
                — This method parses a shift right expression node.</li>
            <li id="parseStaticValue"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValue.xhtml">parseStaticValue()</a>
                — This method will parse a static default value as it is used for a parameter, property or constant declaration.</li>
            <li id="parseStaticValueOrStaticArray"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValueOrStaticArray.xhtml">parseStaticValueOrStaticArray()</a>
                — This method will parse a static value or a static array as it is used as default value for a parameter or property declaration.</li>
            <li id="parseStaticValueVersionSpecific"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseStaticValueVersionSpecific.xhtml">parseStaticValueVersionSpecific()</a>
                — Parses additional static values that are valid in the supported php version.</li>
            <li id="parseTypeHint"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseTypeHint.xhtml">parseTypeHint()</a>
                — Parses a type hint that is valid in the supported PHP version.</li>
            <li id="parseVariableDeclarator"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableDeclarator.xhtml">parseVariableDeclarator()</a>
                — This method will parse a variable declarator.</li>
            <li id="parseVariableOrConstantOrPrimaryPrefix"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parseVariableOrConstantOrPrimaryPrefix.xhtml">parseVariableOrConstantOrPrimaryPrefix()</a>
                — This method implements the parsing for various expression types like variables, object/static method. All these expressions are valid in several php language constructs like, isset, empty, unset etc.</li>
            <li id="reduce"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reduce.xhtml">reduce()</a>
                — Applies all reduce rules against the given expression list.</li>
            <li id="reset"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/reset.xhtml">reset()</a>
                — Resets some object properties.</li>
            <li id="setUpEnvironment"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setUpEnvironment.xhtml">setUpEnvironment()</a>
                — Initializes the parser environment.</li>
            <li id="tearDownEnvironment"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/tearDownEnvironment.xhtml">tearDownEnvironment()</a>
                — Restores the parser environment back.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/__construct.xhtml">__construct()</a>
                — Constructs a new source parser.</li>
            <li id="parse"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/parse.xhtml">parse()</a>
                — Parses the contents of the tokenizer and generates a node tree based on the found tokens.</li>
            <li id="setIgnoreAnnotations"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setIgnoreAnnotations.xhtml">setIgnoreAnnotations()</a>
                — Sets the ignore annotations flag. This means that the parser will ignore doc comment annotations.</li>
            <li id="setMaxNestingLevel"><a title="PDepend\Source\Language\PHP\AbstractPHPParser" href="../classes/PDepend_Source_Language_PHP_AbstractPHPParser/setMaxNestingLevel.xhtml">setMaxNestingLevel()</a>
                — Configures the maximum allowed nesting level.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
