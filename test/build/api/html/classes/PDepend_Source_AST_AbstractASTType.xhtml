<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PDepend\Source\AST\AbstractASTType</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#PDepend_Source_AST">PDepend\Source\AST</a>
          </li>
          <li class="separator">AbstractASTType</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/pdepend/pdepend/src/main/php/PDepend/Source/AST/AbstractASTType.php.xhtml#line56">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>PDepend\Source\AST\</small>AbstractASTType</h1>
        <h4>Represents any valid complex php type.</h4>
        <p/>
        <ul>
          <li>Copyright: 2008-2015 Manuel Pichler. All rights reserved.</li>
          <li>License: http://www.opensource.org/licenses/bsd-license.php BSD License</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class AbstractASTType
                extends <a title="PDepend\Source\AST\AbstractASTArtifact" href="../classes/PDepend_Source_AST_AbstractASTArtifact.xhtml">AbstractASTArtifact</a>
            {<br/><ul class="none"><li>// members</li><li>protected <span title="\PDepend\Util\Cache\CacheDriver">CacheDriver</span> <a href="#members">$cache</a> =
                        null;
                    </li><li>protected <span title="\PDepend\Source\Builder\BuilderContext">BuilderContext</span> <a href="#members">$context</a> =
                        null;
                    </li><li>private <span title="\PDepend\Source\AST\ASTNamespace">ASTNamespace</span> <a href="#members">$namespace</a> =
                        null;
                    </li><li>protected <span title="PDepend\Source\AST\array(string=&gt;mixed)">array(string=&gt;mixed)</span> <a href="#members">$constants</a> =
                        null;
                    </li><li>protected boolean <a href="#members">$userDefined</a> =
                        false;
                    </li><li>protected array <a href="#members">$nodes</a> =
                        ;
                    </li><li>protected string <a href="#members">$namespaceName</a> =
                        null;
                    </li><li>protected integer <a href="#members">$modifiers</a> =
                        0;
                    </li><li>protected array <a href="#members">$methods</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public AbstractASTType <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setCache.xhtml">setCache</a>()
                    </li><li>public AbstractASTType <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setContext.xhtml">setContext</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/addChild.xhtml">addChild</a>()
                    </li><li>public ASTNode <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getChild.xhtml">getChild</a>()
                    </li><li>public array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getChildren.xhtml">getChildren</a>()
                    </li><li>public ASTNode <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getFirstChildOfType.xhtml">getFirstChildOfType</a>()
                    </li><li>public array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/findChildrenOfType.xhtml">findChildrenOfType</a>()
                    </li><li>public boolean <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isUserDefined.xhtml">isUserDefined</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setUserDefined.xhtml">setUserDefined</a>()
                    </li><li>public array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getMethods.xhtml">getMethods</a>()
                    </li><li>public ASTMethod <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/addMethod.xhtml">addMethod</a>()
                    </li><li>protected array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getTraitMethods.xhtml">getTraitMethods</a>()
                    </li><li>public array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getTokens.xhtml">getTokens</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setTokens.xhtml">setTokens</a>()
                    </li><li>public string <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getNamespaceName.xhtml">getNamespaceName</a>()
                    </li><li>public ASTNamespace <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getNamespace.xhtml">getNamespace</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setNamespace.xhtml">setNamespace</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/unsetNamespace.xhtml">unsetNamespace</a>()
                    </li><li>public boolean <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isCached.xhtml">isCached</a>()
                    </li><li>public abstract array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getAllMethods.xhtml">getAllMethods</a>()
                    </li><li>public abstract boolean <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isSubtypeOf.xhtml">isSubtypeOf</a>()
                    </li><li>public array <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/__sleep.xhtml">__sleep</a>()
                    </li><li>public void <a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/__wakeup.xhtml">__wakeup</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="PDepend\Source\AST\AbstractASTArtifact" href="../classes/PDepend_Source_AST_AbstractASTArtifact.xhtml">PDepend\Source\AST\AbstractASTArtifact</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">199+</td>
            <td>Refactor $_methods property to getAllMethods() when it exists.</td>
          </tr>
          <tr>
            <td class="nummeric">229+</td>
            <td>Refactor $_methods property to getAllMethods() when it exists.</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="namespace"><strong>$namespace</strong>
                —
                <a title="\PDepend\Source\AST\ASTNamespace" href="../classes/_PDepend_Source_AST_ASTNamespace.xhtml">\PDepend\Source\AST\ASTNamespace</a><br/><span class="indent">The parent namespace for this class.</span></li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="cache"><strong>$cache</strong>
                —
                <a title="\PDepend\Util\Cache\CacheDriver" href="../classes/_PDepend_Util_Cache_CacheDriver.xhtml">\PDepend\Util\Cache\CacheDriver</a><br/><span class="indent">The internal used cache instance.</span></li>
            <li id="constants"><strong>$constants</strong>
                —
                <a title="PDepend\Source\AST\array(string=&gt;mixed)" href="../classes/PDepend_Source_AST_array(string=&gt;mixed).xhtml">PDepend\Source\AST\array(string=&gt;mixed)</a><br/><span class="indent">An &lt;b&gt;array&lt;/b&gt; with all constants defined in this class or interface.</span></li>
            <li id="context"><strong>$context</strong>
                —
                <a title="\PDepend\Source\Builder\BuilderContext" href="../classes/_PDepend_Source_Builder_BuilderContext.xhtml">\PDepend\Source\Builder\BuilderContext</a><br/><span class="indent">The currently used builder context.</span></li>
            <li id="methods"><strong>$methods</strong>
                —
                array<br/><span class="indent">Temporary property that only holds methods during the parsing process.</span></li>
            <li id="modifiers"><strong>$modifiers</strong>
                —
                integer<br/><span class="indent">The modifiers for this class instance.</span></li>
            <li id="namespaceName"><strong>$namespaceName</strong>
                —
                string<br/><span class="indent">Name of the parent namespace for this class or interface instance. Or &lt;b&gt;NULL&lt;/b&gt; when no namespace was specified.</span></li>
            <li id="nodes"><strong>$nodes</strong>
                —
                array<br/><span class="indent">List of all parsed child nodes.</span></li>
            <li id="userDefined"><strong>$userDefined</strong>
                —
                boolean<br/><span class="indent">This property will indicate that the class or interface is user defined.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="getTraitMethods"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getTraitMethods.xhtml">getTraitMethods()</a>
                — Returns an array with {@link \PDepend\Source\AST\ASTMethod} objects that are imported through traits.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__sleep"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/__sleep.xhtml">__sleep()</a>
                — The magic sleep method is called by the PHP runtime environment before an instance of this class gets serialized. It returns an array with the names of all those properties that should be cached for this class or interface instance.</li>
            <li id="__wakeup"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/__wakeup.xhtml">__wakeup()</a>
                — The magic wakeup method is called by the PHP runtime environment when a serialized instance of this class gets unserialized and all properties are restored. This implementation of the &lt;b&gt;__wakeup()&lt;/b&gt; method sets a flag that this object was restored from the cache and it restores the dependency between this class or interface and it's child methods.</li>
            <li id="addChild"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/addChild.xhtml">addChild()</a>
                — Adds a parsed child node to this node.</li>
            <li id="addMethod"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/addMethod.xhtml">addMethod()</a>
                — Adds the given method to this type.</li>
            <li id="findChildrenOfType"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/findChildrenOfType.xhtml">findChildrenOfType()</a>
                — Will find all children for the given type.</li>
            <li id="getAllMethods"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getAllMethods.xhtml">getAllMethods()</a>
                — Returns a list of all methods provided by this type or one of its parents.</li>
            <li id="getChild"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getChild.xhtml">getChild()</a>
                — Returns the child at the given index.</li>
            <li id="getChildren"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getChildren.xhtml">getChildren()</a>
                — Returns all child nodes of this class.</li>
            <li id="getFirstChildOfType"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getFirstChildOfType.xhtml">getFirstChildOfType()</a>
                — This method will search recursive for the first child node that is an instance of the given &lt;b&gt;$targetType&lt;/b&gt;. The returned value will be &lt;b&gt;null&lt;/b&gt; if no child exists for that.</li>
            <li id="getMethods"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getMethods.xhtml">getMethods()</a>
                — Returns all {@link \PDepend\Source\AST\ASTMethod} objects in this type.</li>
            <li id="getNamespace"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getNamespace.xhtml">getNamespace()</a>
                — Returns the parent namespace for this class.</li>
            <li id="getNamespaceName"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getNamespaceName.xhtml">getNamespaceName()</a>
                — Returns the name of the parent namespace.</li>
            <li id="getTokens"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/getTokens.xhtml">getTokens()</a>
                — Returns an &lt;b&gt;array&lt;/b&gt; with all tokens within this type.</li>
            <li id="isCached"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isCached.xhtml">isCached()</a>
                — This method will return &lt;b&gt;true&lt;/b&gt; when this class or interface instance was restored from the cache and not currently parsed. Otherwise this method will return &lt;b&gt;false&lt;/b&gt;.</li>
            <li id="isSubtypeOf"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isSubtypeOf.xhtml">isSubtypeOf()</a>
                — Checks that this user type is a subtype of the given &lt;b&gt;$type&lt;/b&gt; instance.</li>
            <li id="isUserDefined"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/isUserDefined.xhtml">isUserDefined()</a>
                — This method will return &lt;b&gt;true&lt;/b&gt; when this type has a declaration in the analyzed source files.</li>
            <li id="setCache"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setCache.xhtml">setCache()</a>
                — Setter method for the currently used token cache, where this class or interface instance can store the associated tokens.</li>
            <li id="setContext"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setContext.xhtml">setContext()</a>
                — Sets the currently active builder context.</li>
            <li id="setNamespace"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setNamespace.xhtml">setNamespace()</a>
                — Sets the parent namespace for this type.</li>
            <li id="setTokens"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setTokens.xhtml">setTokens()</a>
                — Sets the tokens for this type.</li>
            <li id="setUserDefined"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/setUserDefined.xhtml">setUserDefined()</a>
                — This method can be used to mark a type as user defined. User defined means that the type has a valid declaration in the analyzed source files.</li>
            <li id="unsetNamespace"><a title="PDepend\Source\AST\AbstractASTType" href="../classes/PDepend_Source_AST_AbstractASTType/unsetNamespace.xhtml">unsetNamespace()</a>
                — Resets the associated namespace reference.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
