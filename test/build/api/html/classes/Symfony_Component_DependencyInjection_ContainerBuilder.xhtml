<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\DependencyInjection\ContainerBuilder</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_DependencyInjection">Symfony\Component\DependencyInjection</a>
          </li>
          <li class="separator">ContainerBuilder</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/symfony/dependency-injection/ContainerBuilder.php.xhtml#line36">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\DependencyInjection\</small>ContainerBuilder</h1>
        <h4>ContainerBuilder is a DI container that provides an API to easily describe services.</h4>
        <p/>
        <ul>
          <li>Author: Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ContainerBuilder
                extends <a title="Symfony\Component\DependencyInjection\Container" href="../classes/Symfony_Component_DependencyInjection_Container.xhtml">Container</a>
                implements
                <a title="Symfony\Component\DependencyInjection\TaggedContainerInterface" href="../interfaces/Symfony_Component_DependencyInjection_TaggedContainerInterface.xhtml">TaggedContainerInterface</a>
            {<br/><ul class="none"><li>// members</li><li>private array <a href="#members">$extensions</a> =
                        ;
                    </li><li>private array <a href="#members">$extensionsByNs</a> =
                        ;
                    </li><li>private array <a href="#members">$definitions</a> =
                        ;
                    </li><li>private array <a href="#members">$obsoleteDefinitions</a> =
                        ;
                    </li><li>private array <a href="#members">$aliasDefinitions</a> =
                        ;
                    </li><li>private array <a href="#members">$resources</a> =
                        ;
                    </li><li>private array <a href="#members">$extensionConfigs</a> =
                        ;
                    </li><li>private <span title="Symfony\Component\DependencyInjection\Compiler\Compiler">Compiler</span> <a href="#members">$compiler</a>;
                    </li><li>private boolean <a href="#members">$trackResources</a> =
                        true;
                    </li><li>private <span title="Symfony\Component\DependencyInjection\InstantiatorInterface|null">InstantiatorInterface|null</span> <a href="#members">$proxyInstantiator</a>;
                    </li><li>private <span title="Symfony\Component\DependencyInjection\ExpressionLanguage|null">ExpressionLanguage|null</span> <a href="#members">$expressionLanguage</a>;
                    </li><li>private array <a href="#members">$expressionLanguageProviders</a> =
                        ;
                    </li><li>private array <a href="#members">$usedTags</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setResourceTracking.xhtml">setResourceTracking</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/isTrackingResources.xhtml">isTrackingResources</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setProxyInstantiator.xhtml">setProxyInstantiator</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/registerExtension.xhtml">registerExtension</a>()
                    </li><li>public ExtensionInterface <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtension.xhtml">getExtension</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtensions.xhtml">getExtensions</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasExtension.xhtml">hasExtension</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getResources.xhtml">getResources</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addResource.xhtml">addResource</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setResources.xhtml">setResources</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addObjectResource.xhtml">addObjectResource</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addClassResource.xhtml">addClassResource</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/loadFromExtension.xhtml">loadFromExtension</a>()
                    </li><li>public ContainerBuilder <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addCompilerPass.xhtml">addCompilerPass</a>()
                    </li><li>public PassConfig <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getCompilerPassConfig.xhtml">getCompilerPassConfig</a>()
                    </li><li>public Compiler <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getCompiler.xhtml">getCompiler</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/set.xhtml">set</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/removeDefinition.xhtml">removeDefinition</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/has.xhtml">has</a>()
                    </li><li>public  <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/get.xhtml">get</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/merge.xhtml">merge</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtensionConfig.xhtml">getExtensionConfig</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/prependExtensionConfig.xhtml">prependExtensionConfig</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/compile.xhtml">compile</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getServiceIds.xhtml">getServiceIds</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addAliases.xhtml">addAliases</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setAliases.xhtml">setAliases</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setAlias.xhtml">setAlias</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/removeAlias.xhtml">removeAlias</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasAlias.xhtml">hasAlias</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getAliases.xhtml">getAliases</a>()
                    </li><li>public Alias <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getAlias.xhtml">getAlias</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/register.xhtml">register</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addDefinitions.xhtml">addDefinitions</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setDefinitions.xhtml">setDefinitions</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getDefinitions.xhtml">getDefinitions</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setDefinition.xhtml">setDefinition</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasDefinition.xhtml">hasDefinition</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getDefinition.xhtml">getDefinition</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findDefinition.xhtml">findDefinition</a>()
                    </li><li>private  <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/createService.xhtml">createService</a>()
                    </li><li>public mixed <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/resolveServices.xhtml">resolveServices</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findTaggedServiceIds.xhtml">findTaggedServiceIds</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findTags.xhtml">findTags</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findUnusedTags.xhtml">findUnusedTags</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addExpressionLanguageProvider.xhtml">addExpressionLanguageProvider</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExpressionLanguageProviders.xhtml">getExpressionLanguageProviders</a>()
                    </li><li>public static array <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getServiceConditionals.xhtml">getServiceConditionals</a>()
                    </li><li>private InstantiatorInterface <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getProxyInstantiator.xhtml">getProxyInstantiator</a>()
                    </li><li>private void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/callMethod.xhtml">callMethod</a>()
                    </li><li>private void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/shareService.xhtml">shareService</a>()
                    </li><li>private void <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExpressionLanguage.xhtml">getExpressionLanguage</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="Symfony\Component\DependencyInjection\Container" href="../classes/Symfony_Component_DependencyInjection_Container.xhtml">Symfony\Component\DependencyInjection\Container</a>
            </li>
          </ul>
          <h4>Implements</h4>
          <ul>
            <li>
              <a title="Symfony\Component\DependencyInjection\TaggedContainerInterface" href="../interfaces/Symfony_Component_DependencyInjection_TaggedContainerInterface.xhtml">Symfony\Component\DependencyInjection\TaggedContainerInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="aliasDefinitions"><strong>$aliasDefinitions</strong>
                —
                array</li>
            <li id="compiler"><strong>$compiler</strong>
                —
                <a title="Symfony\Component\DependencyInjection\Compiler\Compiler" href="../classes/Symfony_Component_DependencyInjection_Compiler_Compiler.xhtml">Symfony\Component\DependencyInjection\Compiler\Compiler</a></li>
            <li id="definitions"><strong>$definitions</strong>
                —
                array</li>
            <li id="expressionLanguage"><strong>$expressionLanguage</strong>
                —
                <a title="Symfony\Component\DependencyInjection\ExpressionLanguage|null" href="../classes/Symfony_Component_DependencyInjection_ExpressionLanguage|null.xhtml">Symfony\Component\DependencyInjection\ExpressionLanguage|null</a></li>
            <li id="expressionLanguageProviders"><strong>$expressionLanguageProviders</strong>
                —
                array</li>
            <li id="extensionConfigs">
              <strong>$extensionConfigs</strong>
            </li>
            <li id="extensions"><strong>$extensions</strong>
                —
                array</li>
            <li id="extensionsByNs"><strong>$extensionsByNs</strong>
                —
                array</li>
            <li id="obsoleteDefinitions"><strong>$obsoleteDefinitions</strong>
                —
                array</li>
            <li id="proxyInstantiator"><strong>$proxyInstantiator</strong>
                —
                <a title="Symfony\Component\DependencyInjection\InstantiatorInterface|null" href="../classes/Symfony_Component_DependencyInjection_InstantiatorInterface|null.xhtml">Symfony\Component\DependencyInjection\InstantiatorInterface|null</a></li>
            <li id="resources"><strong>$resources</strong>
                —
                array</li>
            <li id="trackResources">
              <strong>$trackResources</strong>
            </li>
            <li id="usedTags"><strong>$usedTags</strong>
                —
                array</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="callMethod">
              <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/callMethod.xhtml">callMethod()</a>
            </li>
            <li id="createService"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/createService.xhtml">createService()</a>
                — Creates a service for a service definition.</li>
            <li id="getExpressionLanguage">
              <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExpressionLanguage.xhtml">getExpressionLanguage()</a>
            </li>
            <li id="getProxyInstantiator"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getProxyInstantiator.xhtml">getProxyInstantiator()</a>
                — Retrieves the currently set proxy instantiator or instantiates one.</li>
            <li id="shareService"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/shareService.xhtml">shareService()</a>
                — Shares a given service in the container.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="addAliases"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addAliases.xhtml">addAliases()</a>
                — Adds the service aliases.</li>
            <li id="addClassResource"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addClassResource.xhtml">addClassResource()</a>
                — Adds the given class hierarchy as resources.</li>
            <li id="addCompilerPass"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addCompilerPass.xhtml">addCompilerPass()</a>
                — Adds a compiler pass.</li>
            <li id="addDefinitions"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addDefinitions.xhtml">addDefinitions()</a>
                — Adds the service definitions.</li>
            <li id="addExpressionLanguageProvider">
              <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addExpressionLanguageProvider.xhtml">addExpressionLanguageProvider()</a>
            </li>
            <li id="addObjectResource"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addObjectResource.xhtml">addObjectResource()</a>
                — Adds the object class hierarchy as resources.</li>
            <li id="addResource"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/addResource.xhtml">addResource()</a>
                — Adds a resource for this configuration.</li>
            <li id="compile"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/compile.xhtml">compile()</a>
                — Compiles the container.</li>
            <li id="findDefinition"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findDefinition.xhtml">findDefinition()</a>
                — Gets a service definition by id or alias.</li>
            <li id="findTaggedServiceIds"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findTaggedServiceIds.xhtml">findTaggedServiceIds()</a>
                — Returns service ids for a given tag.</li>
            <li id="findTags"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findTags.xhtml">findTags()</a>
                — Returns all tags the defined services use.</li>
            <li id="findUnusedTags"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/findUnusedTags.xhtml">findUnusedTags()</a>
                — Returns all tags not queried by findTaggedServiceIds.</li>
            <li id="get"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/get.xhtml">get()</a>
                — Gets a service.</li>
            <li id="getAlias"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getAlias.xhtml">getAlias()</a>
                — Gets an alias.</li>
            <li id="getAliases"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getAliases.xhtml">getAliases()</a>
                — Gets all defined aliases.</li>
            <li id="getCompiler"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getCompiler.xhtml">getCompiler()</a>
                — Returns the compiler.</li>
            <li id="getCompilerPassConfig"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getCompilerPassConfig.xhtml">getCompilerPassConfig()</a>
                — Returns the compiler pass config which can then be modified.</li>
            <li id="getDefinition"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getDefinition.xhtml">getDefinition()</a>
                — Gets a service definition.</li>
            <li id="getDefinitions"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getDefinitions.xhtml">getDefinitions()</a>
                — Gets all service definitions.</li>
            <li id="getExpressionLanguageProviders">
              <a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExpressionLanguageProviders.xhtml">getExpressionLanguageProviders()</a>
            </li>
            <li id="getExtension"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtension.xhtml">getExtension()</a>
                — Returns an extension by alias or namespace.</li>
            <li id="getExtensionConfig"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtensionConfig.xhtml">getExtensionConfig()</a>
                — Returns the configuration array for the given extension.</li>
            <li id="getExtensions"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getExtensions.xhtml">getExtensions()</a>
                — Returns all registered extensions.</li>
            <li id="getResources"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getResources.xhtml">getResources()</a>
                — Returns an array of resources loaded to build this configuration.</li>
            <li id="getServiceConditionals"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getServiceConditionals.xhtml">getServiceConditionals()</a>
                — Returns the Service Conditionals.</li>
            <li id="getServiceIds"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/getServiceIds.xhtml">getServiceIds()</a>
                — Gets all service ids.</li>
            <li id="has"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/has.xhtml">has()</a>
                — Returns true if the given service is defined.</li>
            <li id="hasAlias"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasAlias.xhtml">hasAlias()</a>
                — Returns true if an alias exists under the given identifier.</li>
            <li id="hasDefinition"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasDefinition.xhtml">hasDefinition()</a>
                — Returns true if a service definition exists under the given identifier.</li>
            <li id="hasExtension"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/hasExtension.xhtml">hasExtension()</a>
                — Checks if we have an extension.</li>
            <li id="isTrackingResources"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/isTrackingResources.xhtml">isTrackingResources()</a>
                — Checks if resources are tracked.</li>
            <li id="loadFromExtension"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/loadFromExtension.xhtml">loadFromExtension()</a>
                — Loads the configuration for an extension.</li>
            <li id="merge"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/merge.xhtml">merge()</a>
                — Merges a ContainerBuilder with the current ContainerBuilder configuration.</li>
            <li id="prependExtensionConfig"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/prependExtensionConfig.xhtml">prependExtensionConfig()</a>
                — Prepends a config array to the configs of the given extension.</li>
            <li id="register"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/register.xhtml">register()</a>
                — Registers a service definition.</li>
            <li id="registerExtension"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/registerExtension.xhtml">registerExtension()</a>
                — Registers an extension.</li>
            <li id="removeAlias"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/removeAlias.xhtml">removeAlias()</a>
                — Removes an alias.</li>
            <li id="removeDefinition"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/removeDefinition.xhtml">removeDefinition()</a>
                — Removes a service definition.</li>
            <li id="resolveServices"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/resolveServices.xhtml">resolveServices()</a>
                — Replaces service references by the real service instance and evaluates expressions.</li>
            <li id="set"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/set.xhtml">set()</a>
                — Sets a service.</li>
            <li id="setAlias"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setAlias.xhtml">setAlias()</a>
                — Sets an alias for an existing service.</li>
            <li id="setAliases"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setAliases.xhtml">setAliases()</a>
                — Sets the service aliases.</li>
            <li id="setDefinition"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setDefinition.xhtml">setDefinition()</a>
                — Sets a service definition.</li>
            <li id="setDefinitions"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setDefinitions.xhtml">setDefinitions()</a>
                — Sets the service definitions.</li>
            <li id="setProxyInstantiator"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setProxyInstantiator.xhtml">setProxyInstantiator()</a>
                — Sets the instantiator to be used when fetching proxies.</li>
            <li id="setResourceTracking"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setResourceTracking.xhtml">setResourceTracking()</a>
                — Sets the track resources flag.</li>
            <li id="setResources"><a title="Symfony\Component\DependencyInjection\ContainerBuilder" href="../classes/Symfony_Component_DependencyInjection_ContainerBuilder/setResources.xhtml">setResources()</a>
                — Sets the resources for this configuration.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
