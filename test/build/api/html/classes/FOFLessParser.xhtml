<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - FOFLessParser</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">FOFLessParser</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/libraries/fof/less/parser/parser.php.xhtml#line26">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>FOFLessParser</h1>
        <h4>This class is taken verbatim from:</h4>
        <p>lessphp v0.3.9<br/>http://leafo.net/lessphp<br/><br/>LESS css compiler, adapted from http://lesscss.org<br/><br/>Copyright 2012, Leaf Corcoran &lt;leafot@gmail.com&gt;<br/>Licensed under MIT or GPLv3, see LICENSE<br/><br/>Responsible for taking a string of LESS code and converting it into a syntax tree</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class FOFLessParser
            {<br/><ul class="none"><li>// members</li><li>protected static integer <a href="#members">$nextBlockId</a> =
                        0;
                    </li><li>protected static array <a href="#members">$precedence</a> =
                        ;
                    </li><li>protected static  <a href="#members">$whitePattern</a>;
                    </li><li>protected static  <a href="#members">$commentMulti</a>;
                    </li><li>protected static string <a href="#members">$commentSingle</a> =
                        "//";
                    </li><li>protected static string <a href="#members">$commentMultiLeft</a> =
                        "/*";
                    </li><li>protected static string <a href="#members">$commentMultiRight</a> =
                        "*/";
                    </li><li>protected static  <a href="#members">$operatorString</a>;
                    </li><li>protected static array <a href="#members">$supressDivisionProps</a> =
                        ;
                    </li><li>protected array <a href="#members">$blockDirectives</a> =
                        ;
                    </li><li>protected array <a href="#members">$lineDirectives</a> =
                        ;
                    </li><li>protected boolean <a href="#members">$inParens</a> =
                        false;
                    </li><li>protected static array <a href="#members">$literalCache</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="FOFLessParser" href="../classes/FOFLessParser/__construct.xhtml">__construct</a>()
                    </li><li>public [type] <a title="FOFLessParser" href="../classes/FOFLessParser/parse.xhtml">parse</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/parseChunk.xhtml">parseChunk</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/isDirective.xhtml">isDirective</a>()
                    </li><li>protected [type] <a title="FOFLessParser" href="../classes/FOFLessParser/fixTags.xhtml">fixTags</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/expressionList.xhtml">expressionList</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/expression.xhtml">expression</a>()
                    </li><li>protected string <a title="FOFLessParser" href="../classes/FOFLessParser/expHelper.xhtml">expHelper</a>()
                    </li><li>public boolean <a title="FOFLessParser" href="../classes/FOFLessParser/propertyValue.xhtml">propertyValue</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/parenValue.xhtml">parenValue</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/value.xhtml">value</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/import.xhtml">import</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/mediaQueryList.xhtml">mediaQueryList</a>()
                    </li><li>protected [type] <a title="FOFLessParser" href="../classes/FOFLessParser/mediaQuery.xhtml">mediaQuery</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/mediaExpression.xhtml">mediaExpression</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/openString.xhtml">openString</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/string.xhtml">string</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/interpolation.xhtml">interpolation</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/unit.xhtml">unit</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/color.xhtml">color</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/argumentValues.xhtml">argumentValues</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/argumentDef.xhtml">argumentDef</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/tags.xhtml">tags</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/mixinTags.xhtml">mixinTags</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/tagBracket.xhtml">tagBracket</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/tagExpression.xhtml">tagExpression</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/tag.xhtml">tag</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/func.xhtml">func</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/variable.xhtml">variable</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/assign.xhtml">assign</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/keyword.xhtml">keyword</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/end.xhtml">end</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/guards.xhtml">guards</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/guardGroup.xhtml">guardGroup</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/guard.xhtml">guard</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/literal.xhtml">literal</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/genericList.xhtml">genericList</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/to.xhtml">to</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/match.xhtml">match</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/whitespace.xhtml">whitespace</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/peek.xhtml">peek</a>()
                    </li><li>protected boolean <a title="FOFLessParser" href="../classes/FOFLessParser/seek.xhtml">seek</a>()
                    </li><li>public void <a title="FOFLessParser" href="../classes/FOFLessParser/throwError.xhtml">throwError</a>()
                    </li><li>protected stdClass <a title="FOFLessParser" href="../classes/FOFLessParser/pushBlock.xhtml">pushBlock</a>()
                    </li><li>protected stdClass <a title="FOFLessParser" href="../classes/FOFLessParser/pushSpecialBlock.xhtml">pushSpecialBlock</a>()
                    </li><li>protected void <a title="FOFLessParser" href="../classes/FOFLessParser/append.xhtml">append</a>()
                    </li><li>protected [type] <a title="FOFLessParser" href="../classes/FOFLessParser/pop.xhtml">pop</a>()
                    </li><li>protected [type] <a title="FOFLessParser" href="../classes/FOFLessParser/removeComments.xhtml">removeComments</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">146</td>
            <td>report where the block was opened</td>
          </tr>
          <tr>
            <td class="nummeric">412</td>
            <td>cache pattern in parser</td>
          </tr>
          <tr>
            <td class="nummeric">1738+</td>
            <td>rename to guardGroup</td>
          </tr>
          <tr>
            <td class="nummeric">2056</td>
            <td>this depends on $this-&gt;count</td>
          </tr>
          <tr>
            <td class="nummeric">2083</td>
            <td>kill me from here</td>
          </tr>
          <tr>
            <td class="nummeric">2147+</td>
            <td>: make it work for all functions, not just url</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="blockDirectives">
              <strong>$blockDirectives</strong>
            </li>
            <li id="commentMulti">
              <strong>$commentMulti</strong>
            </li>
            <li id="commentMultiLeft">
              <strong>$commentMultiLeft</strong>
            </li>
            <li id="commentMultiRight">
              <strong>$commentMultiRight</strong>
            </li>
            <li id="commentSingle">
              <strong>$commentSingle</strong>
            </li>
            <li id="inParens">
              <strong>$inParens</strong>
              <br/>
              <span class="indent">if we are in parens we can be more liberal with whitespace around operators because it must evaluate to a single value and thus is less ambiguous.</span>
            </li>
            <li id="lineDirectives">
              <strong>$lineDirectives</strong>
            </li>
            <li id="literalCache">
              <strong>$literalCache</strong>
            </li>
            <li id="nextBlockId">
              <strong>$nextBlockId</strong>
            </li>
            <li id="operatorString">
              <strong>$operatorString</strong>
            </li>
            <li id="precedence">
              <strong>$precedence</strong>
            </li>
            <li id="supressDivisionProps">
              <strong>$supressDivisionProps</strong>
            </li>
            <li id="whitePattern">
              <strong>$whitePattern</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="append"><a title="FOFLessParser" href="../classes/FOFLessParser/append.xhtml">append()</a>
                — Append a property to the current block</li>
            <li id="argumentDef"><a title="FOFLessParser" href="../classes/FOFLessParser/argumentDef.xhtml">argumentDef()</a>
                — Consume an argument definition list surrounded by () each argument is a variable name with optional value or at the end a ... or a variable named followed by ...</li>
            <li id="argumentValues"><a title="FOFLessParser" href="../classes/FOFLessParser/argumentValues.xhtml">argumentValues()</a>
                — Consume a list of property values delimited by ; and wrapped in ()</li>
            <li id="assign"><a title="FOFLessParser" href="../classes/FOFLessParser/assign.xhtml">assign()</a>
                — Consume an assignment operator Can optionally take a name that will be set to the current property name</li>
            <li id="color"><a title="FOFLessParser" href="../classes/FOFLessParser/color.xhtml">color()</a>
                — a # color</li>
            <li id="end"><a title="FOFLessParser" href="../classes/FOFLessParser/end.xhtml">end()</a>
                — Consume an end of statement delimiter</li>
            <li id="expHelper"><a title="FOFLessParser" href="../classes/FOFLessParser/expHelper.xhtml">expHelper()</a>
                — Recursively parse infix equation with $lhs at precedence $minP</li>
            <li id="expression"><a title="FOFLessParser" href="../classes/FOFLessParser/expression.xhtml">expression()</a>
                — Attempt to consume an expression.</li>
            <li id="expressionList"><a title="FOFLessParser" href="../classes/FOFLessParser/expressionList.xhtml">expressionList()</a>
                — a list of expressions</li>
            <li id="fixTags"><a title="FOFLessParser" href="../classes/FOFLessParser/fixTags.xhtml">fixTags()</a>
                — [fixTags description]</li>
            <li id="func"><a title="FOFLessParser" href="../classes/FOFLessParser/func.xhtml">func()</a>
                — A css function</li>
            <li id="genericList"><a title="FOFLessParser" href="../classes/FOFLessParser/genericList.xhtml">genericList()</a>
                — [genericList description]</li>
            <li id="guard"><a title="FOFLessParser" href="../classes/FOFLessParser/guard.xhtml">guard()</a>
                — [guard description]</li>
            <li id="guardGroup"><a title="FOFLessParser" href="../classes/FOFLessParser/guardGroup.xhtml">guardGroup()</a>
                — A bunch of guards that are and'd together</li>
            <li id="guards"><a title="FOFLessParser" href="../classes/FOFLessParser/guards.xhtml">guards()</a>
                — [guards description]</li>
            <li id="import"><a title="FOFLessParser" href="../classes/FOFLessParser/import.xhtml">import()</a>
                — an import statement</li>
            <li id="interpolation"><a title="FOFLessParser" href="../classes/FOFLessParser/interpolation.xhtml">interpolation()</a>
                — [interpolation description]</li>
            <li id="isDirective"><a title="FOFLessParser" href="../classes/FOFLessParser/isDirective.xhtml">isDirective()</a>
                — [isDirective description]</li>
            <li id="keyword"><a title="FOFLessParser" href="../classes/FOFLessParser/keyword.xhtml">keyword()</a>
                — Consume a keyword</li>
            <li id="literal"><a title="FOFLessParser" href="../classes/FOFLessParser/literal.xhtml">literal()</a>
                — [literal description]</li>
            <li id="match"><a title="FOFLessParser" href="../classes/FOFLessParser/match.xhtml">match()</a>
                — Try to match something on head of buffer</li>
            <li id="mediaExpression"><a title="FOFLessParser" href="../classes/FOFLessParser/mediaExpression.xhtml">mediaExpression()</a>
                — [mediaExpression description]</li>
            <li id="mediaQuery"><a title="FOFLessParser" href="../classes/FOFLessParser/mediaQuery.xhtml">mediaQuery()</a>
                — [mediaQuery description]</li>
            <li id="mediaQueryList"><a title="FOFLessParser" href="../classes/FOFLessParser/mediaQueryList.xhtml">mediaQueryList()</a>
                — [mediaQueryList description]</li>
            <li id="mixinTags"><a title="FOFLessParser" href="../classes/FOFLessParser/mixinTags.xhtml">mixinTags()</a>
                — List of tags of specifying mixin path Optionally separated by &gt; (lazy, accepts extra &gt;)</li>
            <li id="openString"><a title="FOFLessParser" href="../classes/FOFLessParser/openString.xhtml">openString()</a>
                — An unbounded string stopped by $end</li>
            <li id="parenValue"><a title="FOFLessParser" href="../classes/FOFLessParser/parenValue.xhtml">parenValue()</a>
                — [parenValue description]</li>
            <li id="parseChunk"><a title="FOFLessParser" href="../classes/FOFLessParser/parseChunk.xhtml">parseChunk()</a>
                — Parse a single chunk off the head of the buffer and append it to the current parse environment.</li>
            <li id="peek"><a title="FOFLessParser" href="../classes/FOFLessParser/peek.xhtml">peek()</a>
                — Match something without consuming it</li>
            <li id="pop"><a title="FOFLessParser" href="../classes/FOFLessParser/pop.xhtml">pop()</a>
                — Pop something off the stack</li>
            <li id="pushBlock"><a title="FOFLessParser" href="../classes/FOFLessParser/pushBlock.xhtml">pushBlock()</a>
                — [pushBlock description]</li>
            <li id="pushSpecialBlock"><a title="FOFLessParser" href="../classes/FOFLessParser/pushSpecialBlock.xhtml">pushSpecialBlock()</a>
                — Push a block that doesn't multiply tags</li>
            <li id="removeComments"><a title="FOFLessParser" href="../classes/FOFLessParser/removeComments.xhtml">removeComments()</a>
                — Remove comments from $text</li>
            <li id="seek"><a title="FOFLessParser" href="../classes/FOFLessParser/seek.xhtml">seek()</a>
                — Seek to a spot in the buffer or return where we are on no argument</li>
            <li id="string"><a title="FOFLessParser" href="../classes/FOFLessParser/string.xhtml">string()</a>
                — [string description]</li>
            <li id="tag"><a title="FOFLessParser" href="../classes/FOFLessParser/tag.xhtml">tag()</a>
                — A single tag</li>
            <li id="tagBracket"><a title="FOFLessParser" href="../classes/FOFLessParser/tagBracket.xhtml">tagBracket()</a>
                — A bracketed value (contained within in a tag definition)</li>
            <li id="tagExpression"><a title="FOFLessParser" href="../classes/FOFLessParser/tagExpression.xhtml">tagExpression()</a>
                — [tagExpression description]</li>
            <li id="tags"><a title="FOFLessParser" href="../classes/FOFLessParser/tags.xhtml">tags()</a>
                — Consume a list of tags This accepts a hanging delimiter</li>
            <li id="to"><a title="FOFLessParser" href="../classes/FOFLessParser/to.xhtml">to()</a>
                — Advance counter to next occurrence of $what $until - don't include $what in advance $allowNewline, if string, will be used as valid char set</li>
            <li id="unit"><a title="FOFLessParser" href="../classes/FOFLessParser/unit.xhtml">unit()</a>
                — [unit description]</li>
            <li id="value"><a title="FOFLessParser" href="../classes/FOFLessParser/value.xhtml">value()</a>
                — a single value</li>
            <li id="variable"><a title="FOFLessParser" href="../classes/FOFLessParser/variable.xhtml">variable()</a>
                — Consume a less variable</li>
            <li id="whitespace"><a title="FOFLessParser" href="../classes/FOFLessParser/whitespace.xhtml">whitespace()</a>
                — Watch some whitespace</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="FOFLessParser" href="../classes/FOFLessParser/__construct.xhtml">__construct()</a>
                — Constructor</li>
            <li id="parse"><a title="FOFLessParser" href="../classes/FOFLessParser/parse.xhtml">parse()</a>
                — Parse text</li>
            <li id="propertyValue"><a title="FOFLessParser" href="../classes/FOFLessParser/propertyValue.xhtml">propertyValue()</a>
                — Consume a list of values for a property</li>
            <li id="throwError"><a title="FOFLessParser" href="../classes/FOFLessParser/throwError.xhtml">throwError()</a>
                — [throwError description]</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
