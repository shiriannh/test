<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PHP_CodeSniffer</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">PHP_CodeSniffer</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/squizlabs/php_codesniffer/CodeSniffer.php.xhtml#line68">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>PHP_CodeSniffer</h1>
        <h4>PHP_CodeSniffer tokenizes PHP code and detects violations of a defined set of coding standards.</h4>
        <p>Standards are specified by classes that implement the PHP_CodeSniffer_Sniff<br/>interface. A sniff registers what token types it wishes to listen for, then<br/>PHP_CodeSniffer encounters that token, the sniff is invoked and passed<br/>information about where the token was found in the stack, and the token stack<br/>itself.<br/><br/>Sniff files and their containing class must be prefixed with Sniff, and<br/>have an extension of .php.<br/><br/>Multiple PHP_CodeSniffer operations can be performed by re-calling the<br/>process function with different parameters.</p>
        <ul>
          <li>Author: Greg Sherwood &lt;gsherwood@squiz.net&gt;</li>
          <li>Copyright: 2006-2014 Squiz Pty Ltd (ABN 77 084 670 600)</li>
          <li>License: https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt BSD Licence</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class PHP_CodeSniffer
            {<br/><ul class="none"><li>// constants</li><li>const VERSION = '2.6.2';</li><li>const STABILITY = 'stable';</li></ul><ul class="none"><li>// members</li><li>protected string <a href="#members">$file</a> =
                        '';
                    </li><li>protected static array <a href="#members">$rulesetDirs</a> =
                        ;
                    </li><li>public <span title="PHP_CodeSniffer_CLI">PHP_CodeSniffer_CLI</span> <a href="#members">$cli</a> =
                        null;
                    </li><li>public <span title="PHP_CodeSniffer_Reporting">PHP_CodeSniffer_Reporting</span> <a href="#members">$reporting</a> =
                        null;
                    </li><li>protected <span title="array(PHP_CodeSniffer_Sniff)">array(PHP_CodeSniffer_Sniff)</span> <a href="#members">$listeners</a> =
                        ;
                    </li><li>protected <span title="array(string)">array(string)</span> <a href="#members">$sniffs</a> =
                        ;
                    </li><li>public <span title="array&lt;string">array&lt;string</span> <a href="#members">$sniffCodes</a> =
                        ;
                    </li><li>private array <a href="#members">$_tokenListeners</a> =
                        ;
                    </li><li>protected array <a href="#members">$ruleset</a> =
                        ;
                    </li><li>protected array <a href="#members">$ignorePatterns</a> =
                        ;
                    </li><li>public array <a href="#members">$allowedFileExtensions</a> =
                        ;
                    </li><li>public array <a href="#members">$defaultFileExtensions</a> =
                        ;
                    </li><li>public static <span title="array(string)">array(string)</span> <a href="#members">$allowedTypes</a> =
                        ;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/__construct.xhtml">__construct</a>()
                    </li><li>public static void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/autoload.xhtml">autoload</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setVerbosity.xhtml">setVerbosity</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setTabWidth.xhtml">setTabWidth</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setEncoding.xhtml">setEncoding</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setInteractive.xhtml">setInteractive</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setAllowedFileExtensions.xhtml">setAllowedFileExtensions</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setIgnorePatterns.xhtml">setIgnorePatterns</a>()
                    </li><li>public array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getIgnorePatterns.xhtml">getIgnorePatterns</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setCli.xhtml">setCli</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/process.xhtml">process</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/initStandard.xhtml">initStandard</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processFiles.xhtml">processFiles</a>()
                    </li><li>public array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processRuleset.xhtml">processRuleset</a>()
                    </li><li>private array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_expandSniffDirectory.xhtml">_expandSniffDirectory</a>()
                    </li><li>private array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_expandRulesetReference.xhtml">_expandRulesetReference</a>()
                    </li><li>private void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_processRule.xhtml">_processRule</a>()
                    </li><li>private bool <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_shouldProcessElement.xhtml">_shouldProcessElement</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/registerSniffs.xhtml">registerSniffs</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/populateTokenListeners.xhtml">populateTokenListeners</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setSniffProperty.xhtml">setSniffProperty</a>()
                    </li><li>public array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getFilesToProcess.xhtml">getFilesToProcess</a>()
                    </li><li>public bool <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/shouldProcessFile.xhtml">shouldProcessFile</a>()
                    </li><li>public bool <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/shouldIgnoreFile.xhtml">shouldIgnoreFile</a>()
                    </li><li>public PHP_CodeSniffer_File <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processFile.xhtml">processFile</a>()
                    </li><li>private PHP_CodeSniffer_File <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_processFile.xhtml">_processFile</a>()
                    </li><li>public void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/generateDocs.xhtml">generateDocs</a>()
                    </li><li>public array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getSniffs.xhtml">getSniffs</a>()
                    </li><li>public array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getTokenSniffs.xhtml">getTokenSniffs</a>()
                    </li><li>public static boolean <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isCamelCaps.xhtml">isCamelCaps</a>()
                    </li><li>public static boolean <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isUnderscoreName.xhtml">isUnderscoreName</a>()
                    </li><li>public static string <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/suggestType.xhtml">suggestType</a>()
                    </li><li>public static string <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/prepareForOutput.xhtml">prepareForOutput</a>()
                    </li><li>public static array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandardPaths.xhtml">getInstalledStandardPaths</a>()
                    </li><li>public static array <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandards.xhtml">getInstalledStandards</a>()
                    </li><li>public static boolean <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isInstalledStandard.xhtml">isInstalledStandard</a>()
                    </li><li>public static string|null <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandardPath.xhtml">getInstalledStandardPath</a>()
                    </li><li>public static string|null <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getConfigData.xhtml">getConfigData</a>()
                    </li><li>public static boolean <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setConfigData.xhtml">setConfigData</a>()
                    </li><li>public static array&lt;string <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getAllConfigData.xhtml">getAllConfigData</a>()
                    </li><li>public static mixed <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isPharFile.xhtml">isPharFile</a>()
                    </li><li>public static mixed <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/realpath.xhtml">realpath</a>()
                    </li><li>public static void <a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/chdir.xhtml">chdir</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="VERSION">VERSION</td>
              <td>'2.6.2'</td>
            </tr>
            <tr>
              <td id="STABILITY">STABILITY</td>
              <td>'stable'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="_tokenListeners"><strong>$_tokenListeners</strong>
                —
                array<br/><span class="indent">The listeners array, indexed by token type.</span></li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="file"><strong>$file</strong>
                —
                string<br/><span class="indent">The file or directory that is currently being processed.</span></li>
            <li id="ignorePatterns"><strong>$ignorePatterns</strong>
                —
                array<br/><span class="indent">An array of patterns to use for skipping files.</span></li>
            <li id="listeners"><strong>$listeners</strong>
                —
                <a title="array(PHP_CodeSniffer_Sniff)" href="../classes/array(PHP_CodeSniffer_Sniff).xhtml">array(PHP_CodeSniffer_Sniff)</a><br/><span class="indent">An array of sniff objects that are being used to check files.</span></li>
            <li id="ruleset"><strong>$ruleset</strong>
                —
                array<br/><span class="indent">An array of rules from the ruleset.xml file.</span></li>
            <li id="rulesetDirs"><strong>$rulesetDirs</strong>
                —
                string<br/><span class="indent">The directories that the processed rulesets are in.</span></li>
            <li id="sniffs"><strong>$sniffs</strong>
                —
                <a title="array(string)" href="../classes/array(string).xhtml">array(string)</a><br/><span class="indent">An array of sniffs that are being used to check files.</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="allowedFileExtensions"><strong>$allowedFileExtensions</strong>
                —
                array<br/><span class="indent">An array of extensions for files we will check.</span></li>
            <li id="allowedTypes"><strong>$allowedTypes</strong>
                —
                <a title="array(string)" href="../classes/array(string).xhtml">array(string)</a><br/><span class="indent">An array of variable types for param/var we will check.</span></li>
            <li id="cli"><strong>$cli</strong>
                —
                <a title="PHP_CodeSniffer_CLI" href="../classes/PHP_CodeSniffer_CLI.xhtml">PHP_CodeSniffer_CLI</a><br/><span class="indent">The CLI object controlling the run.</span></li>
            <li id="defaultFileExtensions"><strong>$defaultFileExtensions</strong>
                —
                array<br/><span class="indent">An array of default extensions and associated tokenizers.</span></li>
            <li id="reporting"><strong>$reporting</strong>
                —
                <a title="PHP_CodeSniffer_Reporting" href="../classes/PHP_CodeSniffer_Reporting.xhtml">PHP_CodeSniffer_Reporting</a><br/><span class="indent">The Reporting object controlling report generation.</span></li>
            <li id="sniffCodes"><strong>$sniffCodes</strong>
                —
                <a title="array&lt;string" href="../classes/array&lt;string.xhtml">array&lt;string</a><br/><span class="indent">A mapping of sniff codes to fully qualified class names.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="_expandRulesetReference"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_expandRulesetReference.xhtml">_expandRulesetReference()</a>
                — Expands a ruleset reference into a list of sniff files.</li>
            <li id="_expandSniffDirectory"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_expandSniffDirectory.xhtml">_expandSniffDirectory()</a>
                — Expands a directory into a list of sniff files within.</li>
            <li id="_processFile"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_processFile.xhtml">_processFile()</a>
                — Process the sniffs for a single file.</li>
            <li id="_processRule"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_processRule.xhtml">_processRule()</a>
                — Processes a rule from a ruleset XML file, overriding built-in defaults.</li>
            <li id="_shouldProcessElement"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/_shouldProcessElement.xhtml">_shouldProcessElement()</a>
                — Determine if an element should be processed or ignored.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/__construct.xhtml">__construct()</a>
                — Constructs a PHP_CodeSniffer object.</li>
            <li id="autoload"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/autoload.xhtml">autoload()</a>
                — Autoload static method for loading classes and interfaces.</li>
            <li id="chdir"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/chdir.xhtml">chdir()</a>
                — CodeSniffer alternative for chdir().</li>
            <li id="generateDocs"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/generateDocs.xhtml">generateDocs()</a>
                — Generates documentation for a coding standard.</li>
            <li id="getAllConfigData"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getAllConfigData.xhtml">getAllConfigData()</a>
                — Get all config data in an array.</li>
            <li id="getConfigData"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getConfigData.xhtml">getConfigData()</a>
                — Get a single config value.</li>
            <li id="getFilesToProcess"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getFilesToProcess.xhtml">getFilesToProcess()</a>
                — Get a list of files that will be processed.</li>
            <li id="getIgnorePatterns"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getIgnorePatterns.xhtml">getIgnorePatterns()</a>
                — Gets the array of ignore patterns.</li>
            <li id="getInstalledStandardPath"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandardPath.xhtml">getInstalledStandardPath()</a>
                — Return the path of an installed coding standard.</li>
            <li id="getInstalledStandardPaths"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandardPaths.xhtml">getInstalledStandardPaths()</a>
                — Get a list paths where standards are installed.</li>
            <li id="getInstalledStandards"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getInstalledStandards.xhtml">getInstalledStandards()</a>
                — Get a list of all coding standards installed.</li>
            <li id="getSniffs"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getSniffs.xhtml">getSniffs()</a>
                — Gets the array of PHP_CodeSniffer_Sniff's.</li>
            <li id="getTokenSniffs"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/getTokenSniffs.xhtml">getTokenSniffs()</a>
                — Gets the array of PHP_CodeSniffer_Sniff's indexed by token type.</li>
            <li id="initStandard"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/initStandard.xhtml">initStandard()</a>
                — Initialise the standard that the run will use.</li>
            <li id="isCamelCaps"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isCamelCaps.xhtml">isCamelCaps()</a>
                — Returns true if the specified string is in the camel caps format.</li>
            <li id="isInstalledStandard"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isInstalledStandard.xhtml">isInstalledStandard()</a>
                — Determine if a standard is installed.</li>
            <li id="isPharFile"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isPharFile.xhtml">isPharFile()</a>
                — Return TRUE, if the path is a phar file.</li>
            <li id="isUnderscoreName"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/isUnderscoreName.xhtml">isUnderscoreName()</a>
                — Returns true if the specified string is in the underscore caps format.</li>
            <li id="populateTokenListeners"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/populateTokenListeners.xhtml">populateTokenListeners()</a>
                — Populates the array of PHP_CodeSniffer_Sniff's for this file.</li>
            <li id="prepareForOutput"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/prepareForOutput.xhtml">prepareForOutput()</a>
                — Prepares token content for output to screen.</li>
            <li id="process"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/process.xhtml">process()</a>
                — Start a PHP_CodeSniffer run.</li>
            <li id="processFile"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processFile.xhtml">processFile()</a>
                — Run the code sniffs over a single given file.</li>
            <li id="processFiles"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processFiles.xhtml">processFiles()</a>
                — Processes the files/directories that PHP_CodeSniffer was constructed with.</li>
            <li id="processRuleset"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/processRuleset.xhtml">processRuleset()</a>
                — Processes a single ruleset and returns a list of the sniffs it represents.</li>
            <li id="realpath"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/realpath.xhtml">realpath()</a>
                — CodeSniffer alternative for realpath.</li>
            <li id="registerSniffs"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/registerSniffs.xhtml">registerSniffs()</a>
                — Loads and stores sniffs objects used for sniffing files.</li>
            <li id="setAllowedFileExtensions"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setAllowedFileExtensions.xhtml">setAllowedFileExtensions()</a>
                — Sets an array of file extensions that we will allow checking of.</li>
            <li id="setCli"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setCli.xhtml">setCli()</a>
                — Sets the internal CLI object.</li>
            <li id="setConfigData"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setConfigData.xhtml">setConfigData()</a>
                — Set a single config value.</li>
            <li id="setEncoding"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setEncoding.xhtml">setEncoding()</a>
                — Sets the encoding.</li>
            <li id="setIgnorePatterns"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setIgnorePatterns.xhtml">setIgnorePatterns()</a>
                — Sets an array of ignore patterns that we use to skip files and folders.</li>
            <li id="setInteractive"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setInteractive.xhtml">setInteractive()</a>
                — Sets the interactive flag.</li>
            <li id="setSniffProperty"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setSniffProperty.xhtml">setSniffProperty()</a>
                — Set a single property for a sniff.</li>
            <li id="setTabWidth"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setTabWidth.xhtml">setTabWidth()</a>
                — Sets the tab width.</li>
            <li id="setVerbosity"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/setVerbosity.xhtml">setVerbosity()</a>
                — Sets the verbosity level.</li>
            <li id="shouldIgnoreFile"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/shouldIgnoreFile.xhtml">shouldIgnoreFile()</a>
                — Checks filtering rules to see if a file should be ignored.</li>
            <li id="shouldProcessFile"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/shouldProcessFile.xhtml">shouldProcessFile()</a>
                — Checks filtering rules to see if a file should be checked.</li>
            <li id="suggestType"><a title="PHP_CodeSniffer" href="../classes/PHP_CodeSniffer/suggestType.xhtml">suggestType()</a>
                — Returns a valid variable type for param/var tag.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
