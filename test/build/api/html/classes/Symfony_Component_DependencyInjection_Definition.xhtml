<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\DependencyInjection\Definition</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_DependencyInjection">Symfony\Component\DependencyInjection</a>
          </li>
          <li class="separator">Definition</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/symfony/dependency-injection/Definition.php.xhtml#line22">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\DependencyInjection\</small>Definition</h1>
        <h4>Definition represents a service definition.</h4>
        <p/>
        <ul>
          <li>Author: Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Definition
            {<br/><ul class="none"><li>// members</li><li>private  <a href="#members">$class</a>;
                    </li><li>private  <a href="#members">$file</a>;
                    </li><li>private  <a href="#members">$factory</a>;
                    </li><li>private boolean <a href="#members">$shared</a> =
                        true;
                    </li><li>private boolean <a href="#members">$deprecated</a> =
                        false;
                    </li><li>private string <a href="#members">$deprecationTemplate</a> =
                        'The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.';
                    </li><li>private array <a href="#members">$properties</a> =
                        ;
                    </li><li>private array <a href="#members">$calls</a> =
                        ;
                    </li><li>private  <a href="#members">$configurator</a>;
                    </li><li>private array <a href="#members">$tags</a> =
                        ;
                    </li><li>private boolean <a href="#members">$public</a> =
                        true;
                    </li><li>private boolean <a href="#members">$synthetic</a> =
                        false;
                    </li><li>private boolean <a href="#members">$abstract</a> =
                        false;
                    </li><li>private boolean <a href="#members">$lazy</a> =
                        false;
                    </li><li>private  <a href="#members">$decoratedService</a>;
                    </li><li>private boolean <a href="#members">$autowired</a> =
                        false;
                    </li><li>private array <a href="#members">$autowiringTypes</a> =
                        ;
                    </li><li>protected  <a href="#members">$arguments</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/__construct.xhtml">__construct</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactory.xhtml">setFactory</a>()
                    </li><li>public string|array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactory.xhtml">getFactory</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setDecoratedService.xhtml">setDecoratedService</a>()
                    </li><li>public null|array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getDecoratedService.xhtml">getDecoratedService</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setClass.xhtml">setClass</a>()
                    </li><li>public string|null <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getClass.xhtml">getClass</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setArguments.xhtml">setArguments</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperties.xhtml">setProperties</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getProperties.xhtml">getProperties</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperty.xhtml">setProperty</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addArgument.xhtml">addArgument</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/replaceArgument.xhtml">replaceArgument</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArguments.xhtml">getArguments</a>()
                    </li><li>public mixed <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArgument.xhtml">getArgument</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setMethodCalls.xhtml">setMethodCalls</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addMethodCall.xhtml">addMethodCall</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeMethodCall.xhtml">removeMethodCall</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasMethodCall.xhtml">hasMethodCall</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getMethodCalls.xhtml">getMethodCalls</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setTags.xhtml">setTags</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTags.xhtml">getTags</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTag.xhtml">getTag</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addTag.xhtml">addTag</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasTag.xhtml">hasTag</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTag.xhtml">clearTag</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTags.xhtml">clearTags</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFile.xhtml">setFile</a>()
                    </li><li>public string|null <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFile.xhtml">getFile</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setShared.xhtml">setShared</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isShared.xhtml">isShared</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setPublic.xhtml">setPublic</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isPublic.xhtml">isPublic</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setLazy.xhtml">setLazy</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isLazy.xhtml">isLazy</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynthetic.xhtml">setSynthetic</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynthetic.xhtml">isSynthetic</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAbstract.xhtml">setAbstract</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAbstract.xhtml">isAbstract</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setDeprecated.xhtml">setDeprecated</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isDeprecated.xhtml">isDeprecated</a>()
                    </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getDeprecationMessage.xhtml">getDeprecationMessage</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setConfigurator.xhtml">setConfigurator</a>()
                    </li><li>public callable|null <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getConfigurator.xhtml">getConfigurator</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAutowiringTypes.xhtml">setAutowiringTypes</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAutowired.xhtml">isAutowired</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAutowired.xhtml">setAutowired</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getAutowiringTypes.xhtml">getAutowiringTypes</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addAutowiringType.xhtml">addAutowiringType</a>()
                    </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeAutowiringType.xhtml">removeAutowiringType</a>()
                    </li><li>public bool <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasAutowiringType.xhtml">hasAutowiringType</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="abstract">
              <strong>$abstract</strong>
            </li>
            <li id="autowired">
              <strong>$autowired</strong>
            </li>
            <li id="autowiringTypes">
              <strong>$autowiringTypes</strong>
            </li>
            <li id="calls">
              <strong>$calls</strong>
            </li>
            <li id="class">
              <strong>$class</strong>
            </li>
            <li id="configurator">
              <strong>$configurator</strong>
            </li>
            <li id="decoratedService">
              <strong>$decoratedService</strong>
            </li>
            <li id="deprecated">
              <strong>$deprecated</strong>
            </li>
            <li id="deprecationTemplate">
              <strong>$deprecationTemplate</strong>
            </li>
            <li id="factory">
              <strong>$factory</strong>
            </li>
            <li id="file">
              <strong>$file</strong>
            </li>
            <li id="lazy">
              <strong>$lazy</strong>
            </li>
            <li id="properties">
              <strong>$properties</strong>
            </li>
            <li id="public">
              <strong>$public</strong>
            </li>
            <li id="shared">
              <strong>$shared</strong>
            </li>
            <li id="synthetic">
              <strong>$synthetic</strong>
            </li>
            <li id="tags">
              <strong>$tags</strong>
            </li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="arguments">
              <strong>$arguments</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/__construct.xhtml">__construct()</a>
            </li>
            <li id="addArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addArgument.xhtml">addArgument()</a>
                — Adds an argument to pass to the service constructor/factory method.</li>
            <li id="addAutowiringType"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addAutowiringType.xhtml">addAutowiringType()</a>
                — Adds a type that will default to this definition.</li>
            <li id="addMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addMethodCall.xhtml">addMethodCall()</a>
                — Adds a method to call after service initialization.</li>
            <li id="addTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addTag.xhtml">addTag()</a>
                — Adds a tag for this definition.</li>
            <li id="clearTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTag.xhtml">clearTag()</a>
                — Clears all tags for a given name.</li>
            <li id="clearTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTags.xhtml">clearTags()</a>
                — Clears the tags for this definition.</li>
            <li id="getArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArgument.xhtml">getArgument()</a>
                — Gets an argument to pass to the service constructor/factory method.</li>
            <li id="getArguments"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArguments.xhtml">getArguments()</a>
                — Gets the arguments to pass to the service constructor/factory method.</li>
            <li id="getAutowiringTypes"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getAutowiringTypes.xhtml">getAutowiringTypes()</a>
                — Gets autowiring types that will default to this definition.</li>
            <li id="getClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getClass.xhtml">getClass()</a>
                — Gets the service class.</li>
            <li id="getConfigurator"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getConfigurator.xhtml">getConfigurator()</a>
                — Gets the configurator to call after the service is fully initialized.</li>
            <li id="getDecoratedService"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getDecoratedService.xhtml">getDecoratedService()</a>
                — Gets the service that decorates this service.</li>
            <li id="getDeprecationMessage"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getDeprecationMessage.xhtml">getDeprecationMessage()</a>
                — Message to use if this definition is deprecated.</li>
            <li id="getFactory"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactory.xhtml">getFactory()</a>
                — Gets the factory.</li>
            <li id="getFile"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFile.xhtml">getFile()</a>
                — Gets the file to require before creating the service.</li>
            <li id="getMethodCalls"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getMethodCalls.xhtml">getMethodCalls()</a>
                — Gets the methods to call after service initialization.</li>
            <li id="getProperties">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getProperties.xhtml">getProperties()</a>
            </li>
            <li id="getTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTag.xhtml">getTag()</a>
                — Gets a tag by name.</li>
            <li id="getTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTags.xhtml">getTags()</a>
                — Returns all tags.</li>
            <li id="hasAutowiringType"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasAutowiringType.xhtml">hasAutowiringType()</a>
                — Will this definition default for the given type?</li>
            <li id="hasMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasMethodCall.xhtml">hasMethodCall()</a>
                — Check if the current definition has a given method to call after service initialization.</li>
            <li id="hasTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasTag.xhtml">hasTag()</a>
                — Whether this definition has a tag with the given name.</li>
            <li id="isAbstract"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAbstract.xhtml">isAbstract()</a>
                — Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            <li id="isAutowired"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAutowired.xhtml">isAutowired()</a>
                — Is the definition autowired?</li>
            <li id="isDeprecated"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isDeprecated.xhtml">isDeprecated()</a>
                — Whether this definition is deprecated, that means it should not be called anymore.</li>
            <li id="isLazy"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isLazy.xhtml">isLazy()</a>
                — Whether this service is lazy.</li>
            <li id="isPublic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isPublic.xhtml">isPublic()</a>
                — Whether this service is public facing.</li>
            <li id="isShared"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isShared.xhtml">isShared()</a>
                — Whether this service is shared.</li>
            <li id="isSynthetic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynthetic.xhtml">isSynthetic()</a>
                — Whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            <li id="removeAutowiringType"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeAutowiringType.xhtml">removeAutowiringType()</a>
                — Removes a type.</li>
            <li id="removeMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeMethodCall.xhtml">removeMethodCall()</a>
                — Removes a method to call after service initialization.</li>
            <li id="replaceArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/replaceArgument.xhtml">replaceArgument()</a>
                — Sets a specific argument.</li>
            <li id="setAbstract"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAbstract.xhtml">setAbstract()</a>
                — Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            <li id="setArguments"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setArguments.xhtml">setArguments()</a>
                — Sets the arguments to pass to the service constructor/factory method.</li>
            <li id="setAutowired"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAutowired.xhtml">setAutowired()</a>
                — Sets autowired.</li>
            <li id="setAutowiringTypes"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAutowiringTypes.xhtml">setAutowiringTypes()</a>
                — Sets types that will default to this definition.</li>
            <li id="setClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setClass.xhtml">setClass()</a>
                — Sets the service class.</li>
            <li id="setConfigurator"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setConfigurator.xhtml">setConfigurator()</a>
                — Sets a configurator to call after the service is fully initialized.</li>
            <li id="setDecoratedService"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setDecoratedService.xhtml">setDecoratedService()</a>
                — Sets the service that this service is decorating.</li>
            <li id="setDeprecated"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setDeprecated.xhtml">setDeprecated()</a>
                — Whether this definition is deprecated, that means it should not be called anymore.</li>
            <li id="setFactory"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactory.xhtml">setFactory()</a>
                — Sets a factory.</li>
            <li id="setFile"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFile.xhtml">setFile()</a>
                — Sets a file to require before creating the service.</li>
            <li id="setLazy"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setLazy.xhtml">setLazy()</a>
                — Sets the lazy flag of this service.</li>
            <li id="setMethodCalls"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setMethodCalls.xhtml">setMethodCalls()</a>
                — Sets the methods to call after service initialization.</li>
            <li id="setProperties">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperties.xhtml">setProperties()</a>
            </li>
            <li id="setProperty">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperty.xhtml">setProperty()</a>
            </li>
            <li id="setPublic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setPublic.xhtml">setPublic()</a>
                — Sets the visibility of this service.</li>
            <li id="setShared"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setShared.xhtml">setShared()</a>
                — Sets if the service must be shared or not.</li>
            <li id="setSynthetic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynthetic.xhtml">setSynthetic()</a>
                — Sets whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            <li id="setTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setTags.xhtml">setTags()</a>
                — Sets tags for this definition.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
