<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#"/>
          </li>
          <li class="separator">
            <a title="PHPUnit_Framework_TestCase" href="../../classes/PHPUnit_Framework_TestCase.xhtml">PHPUnit_Framework_TestCase</a>
          </li>
          <li class="separator">getMock</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="#throws">Throws</a>
          </li>
          <li>
            <a href="../../source/vendor/phpunit/phpunit/src/Framework/TestCase.php.xhtml#line1582">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>PHPUnit_Framework_TestCase::</small>getMock</h1>
        <h4>Returns a mock object for the specified class.</h4>
        <p/>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>protected function getMock(string
        $originalClassName,
            [array
        $methods = ,
            [array
        $arguments = ,
            [string
        $mockClassName = '',
            [boolean
        $callOriginalConstructor = true,
            [boolean
        $callOriginalClone = true,
            [boolean
        $callAutoload = true,
            [boolean
        $cloneArguments = false,
            [boolean
        $callOriginalMethods = false,
            [<a title="" href="../../classes/.xhtml"/>
        $proxyTarget = null]]]]]]]]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$originalClassName</code>
                —
                string</dt>
          <dd>Name of the class to mock.</dd>
          <dt><code>$methods</code>
                —
                array</dt>
          <dd>When provided, only methods whose names are in the array<br/>are replaced with a configurable test double. The behavior<br/>of the other methods is not changed.<br/>                                           Providing null means that no methods will be replaced.</dd>
          <dt><code>$arguments</code>
                —
                array</dt>
          <dd>Parameters to pass to the original class' constructor.</dd>
          <dt><code>$mockClassName</code>
                —
                string</dt>
          <dd>Class name for the generated test double class.</dd>
          <dt><code>$callOriginalConstructor</code>
                —
                boolean</dt>
          <dd>Can be used to disable the call to the original class' constructor.<br/><br/><br/>      </dd>
          <dt><code>$callOriginalClone</code>
                —
                boolean</dt>
          <dd>Can be used to disable the call to the original class' clone constructor.<br/><br/><br/>      </dd>
          <dt><code>$callAutoload</code>
                —
                boolean</dt>
          <dd>Can be used to disable __autoload() during the generation of the test double class.<br/><br/><br/>      </dd>
          <dt><code>$cloneArguments</code>
                —
                boolean</dt>
          <dd><br/><br/><br/>      </dd>
          <dt><code>$callOriginalMethods</code>
                —
                boolean</dt>
          <dd><br/><br/><br/>      </dd>
          <dt><code>$proxyTarget</code>
                —
                object</dt>
          <dd/>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>PHPUnit_Framework_MockObject_MockObject</dt>
          <dd><br/>
        </dd>
        </dl>
        <h2 id="throws">Errors/Exceptions</h2>
        <dl class="styled">
          <dt>
            <code>
              <a title="PHPUnit_Framework_Exception" href="../../classes/PHPUnit_Framework_Exception.xhtml">PHPUnit_Framework_Exception</a>
            </code>
          </dt>
          <dd/>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
