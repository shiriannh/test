<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - SebastianBergmann\CodeCoverage\CodeCoverage</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#SebastianBergmann_CodeCoverage">SebastianBergmann\CodeCoverage</a>
          </li>
          <li class="separator">CodeCoverage</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/phpunit/php-code-coverage/src/CodeCoverage.php.xhtml#line25">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>SebastianBergmann\CodeCoverage\</small>CodeCoverage</h1>
        <h4>Provides collection functionality for PHP code coverage information.</h4>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class CodeCoverage
            {<br/><ul class="none"><li>// members</li><li>private <span title="SebastianBergmann\CodeCoverage\Driver\Driver">Driver</span> <a href="#members">$driver</a>;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\Filter">Filter</span> <a href="#members">$filter</a>;
                    </li><li>private <span title="SebastianBergmann\CodeUnitReverseLookup\Wizard">Wizard</span> <a href="#members">$wizard</a>;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$cacheTokens</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$checkForUnintentionallyCoveredCode</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$forceCoversAnnotation</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$checkForUnexecutedCoveredCode</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$checkForMissingCoversAnnotation</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$addUncoveredFilesFromWhitelist</a> =
                        true;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$processUncoveredFilesFromWhitelist</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$ignoreDeprecatedCode</a> =
                        false;
                    </li><li>private  <a href="#members">$currentId</a>;
                    </li><li>private array <a href="#members">$data</a> =
                        ;
                    </li><li>private array <a href="#members">$ignoredLines</a> =
                        ;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$disableIgnoredLines</a> =
                        false;
                    </li><li>private array <a href="#members">$tests</a> =
                        ;
                    </li><li>private array <a href="#members">$unintentionallyCoveredSubclassesWhitelist</a> =
                        ;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$isInitialized</a> =
                        false;
                    </li><li>private <span title="SebastianBergmann\CodeCoverage\bool">bool</span> <a href="#members">$shouldCheckForDeadAndUnused</a> =
                        true;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/__construct.xhtml">__construct</a>()
                    </li><li>public Directory <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getReport.xhtml">getReport</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/clear.xhtml">clear</a>()
                    </li><li>public Filter <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/filter.xhtml">filter</a>()
                    </li><li>public array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getData.xhtml">getData</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setData.xhtml">setData</a>()
                    </li><li>public array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getTests.xhtml">getTests</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setTests.xhtml">setTests</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/start.xhtml">start</a>()
                    </li><li>public array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/stop.xhtml">stop</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/append.xhtml">append</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/merge.xhtml">merge</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCacheTokens.xhtml">setCacheTokens</a>()
                    </li><li>public bool <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getCacheTokens.xhtml">getCacheTokens</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForUnintentionallyCoveredCode.xhtml">setCheckForUnintentionallyCoveredCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setForceCoversAnnotation.xhtml">setForceCoversAnnotation</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForMissingCoversAnnotation.xhtml">setCheckForMissingCoversAnnotation</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForUnexecutedCoveredCode.xhtml">setCheckForUnexecutedCoveredCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setMapTestClassNameToCoveredClassName.xhtml">setMapTestClassNameToCoveredClassName</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setAddUncoveredFilesFromWhitelist.xhtml">setAddUncoveredFilesFromWhitelist</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setProcessUncoveredFilesFromWhitelist.xhtml">setProcessUncoveredFilesFromWhitelist</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setDisableIgnoredLines.xhtml">setDisableIgnoredLines</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setIgnoreDeprecatedCode.xhtml">setIgnoreDeprecatedCode</a>()
                    </li><li>public void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setUnintentionallyCoveredSubclassesWhitelist.xhtml">setUnintentionallyCoveredSubclassesWhitelist</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyCoversAnnotationFilter.xhtml">applyCoversAnnotationFilter</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyListsFilter.xhtml">applyListsFilter</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyIgnoredLinesFilter.xhtml">applyIgnoredLinesFilter</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/initializeFilesThatAreSeenTheFirstTime.xhtml">initializeFilesThatAreSeenTheFirstTime</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/addUncoveredFilesFromWhitelist.xhtml">addUncoveredFilesFromWhitelist</a>()
                    </li><li>private array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getLinesToBeIgnored.xhtml">getLinesToBeIgnored</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/performUnintentionallyCoveredCodeCheck.xhtml">performUnintentionallyCoveredCodeCheck</a>()
                    </li><li>private void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/performUnexecutedCoveredCodeCheck.xhtml">performUnexecutedCoveredCodeCheck</a>()
                    </li><li>private array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getAllowedLines.xhtml">getAllowedLines</a>()
                    </li><li>private Driver <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/selectDriver.xhtml">selectDriver</a>()
                    </li><li>private array <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/processUnintentionallyCoveredUnits.xhtml">processUnintentionallyCoveredUnits</a>()
                    </li><li>protected void <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/initializeData.xhtml">initializeData</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="addUncoveredFilesFromWhitelist"><strong>$addUncoveredFilesFromWhitelist</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="cacheTokens"><strong>$cacheTokens</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="checkForMissingCoversAnnotation"><strong>$checkForMissingCoversAnnotation</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="checkForUnexecutedCoveredCode"><strong>$checkForUnexecutedCoveredCode</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="checkForUnintentionallyCoveredCode"><strong>$checkForUnintentionallyCoveredCode</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="currentId"><strong>$currentId</strong>
                —
                mixed</li>
            <li id="data"><strong>$data</strong>
                —
                array<br/><span class="indent">Code coverage data.</span></li>
            <li id="disableIgnoredLines"><strong>$disableIgnoredLines</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="driver"><strong>$driver</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\Driver\Driver" href="../classes/SebastianBergmann_CodeCoverage_Driver_Driver.xhtml">SebastianBergmann\CodeCoverage\Driver\Driver</a></li>
            <li id="filter"><strong>$filter</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\Filter" href="../classes/SebastianBergmann_CodeCoverage_Filter.xhtml">SebastianBergmann\CodeCoverage\Filter</a></li>
            <li id="forceCoversAnnotation"><strong>$forceCoversAnnotation</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="ignoreDeprecatedCode"><strong>$ignoreDeprecatedCode</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="ignoredLines"><strong>$ignoredLines</strong>
                —
                array</li>
            <li id="isInitialized"><strong>$isInitialized</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a><br/><span class="indent">Determine if the data has been initialized or not</span></li>
            <li id="processUncoveredFilesFromWhitelist"><strong>$processUncoveredFilesFromWhitelist</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a></li>
            <li id="shouldCheckForDeadAndUnused"><strong>$shouldCheckForDeadAndUnused</strong>
                —
                <a title="SebastianBergmann\CodeCoverage\bool" href="../classes/SebastianBergmann_CodeCoverage_bool.xhtml">SebastianBergmann\CodeCoverage\bool</a><br/><span class="indent">Determine whether we need to check for dead and unused code on each test</span></li>
            <li id="tests"><strong>$tests</strong>
                —
                array<br/><span class="indent">Test data.</span></li>
            <li id="unintentionallyCoveredSubclassesWhitelist"><strong>$unintentionallyCoveredSubclassesWhitelist</strong>
                —
                array</li>
            <li id="wizard"><strong>$wizard</strong>
                —
                <a title="SebastianBergmann\CodeUnitReverseLookup\Wizard" href="../classes/SebastianBergmann_CodeUnitReverseLookup_Wizard.xhtml">SebastianBergmann\CodeUnitReverseLookup\Wizard</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="addUncoveredFilesFromWhitelist"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/addUncoveredFilesFromWhitelist.xhtml">addUncoveredFilesFromWhitelist()</a>
                — Processes whitelisted files that are not covered.</li>
            <li id="applyCoversAnnotationFilter"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyCoversAnnotationFilter.xhtml">applyCoversAnnotationFilter()</a>
                — Applies the @covers annotation filtering.</li>
            <li id="applyIgnoredLinesFilter"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyIgnoredLinesFilter.xhtml">applyIgnoredLinesFilter()</a>
                — Applies the "ignored lines" filtering.</li>
            <li id="applyListsFilter"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/applyListsFilter.xhtml">applyListsFilter()</a>
                — Applies the whitelist filtering.</li>
            <li id="getAllowedLines">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getAllowedLines.xhtml">getAllowedLines()</a>
            </li>
            <li id="getLinesToBeIgnored"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getLinesToBeIgnored.xhtml">getLinesToBeIgnored()</a>
                — Returns the lines of a source file that should be ignored.</li>
            <li id="initializeFilesThatAreSeenTheFirstTime">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/initializeFilesThatAreSeenTheFirstTime.xhtml">initializeFilesThatAreSeenTheFirstTime()</a>
            </li>
            <li id="performUnexecutedCoveredCodeCheck">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/performUnexecutedCoveredCodeCheck.xhtml">performUnexecutedCoveredCodeCheck()</a>
            </li>
            <li id="performUnintentionallyCoveredCodeCheck">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/performUnintentionallyCoveredCodeCheck.xhtml">performUnintentionallyCoveredCodeCheck()</a>
            </li>
            <li id="processUnintentionallyCoveredUnits">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/processUnintentionallyCoveredUnits.xhtml">processUnintentionallyCoveredUnits()</a>
            </li>
            <li id="selectDriver">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/selectDriver.xhtml">selectDriver()</a>
            </li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="initializeData"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/initializeData.xhtml">initializeData()</a>
                — If we are processing uncovered files from whitelist, we can initialize the data before we start to speed up the tests</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/__construct.xhtml">__construct()</a>
                — Constructor.</li>
            <li id="append"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/append.xhtml">append()</a>
                — Appends code coverage data.</li>
            <li id="clear"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/clear.xhtml">clear()</a>
                — Clears collected code coverage data.</li>
            <li id="filter"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/filter.xhtml">filter()</a>
                — Returns the filter object used.</li>
            <li id="getCacheTokens">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getCacheTokens.xhtml">getCacheTokens()</a>
            </li>
            <li id="getData"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getData.xhtml">getData()</a>
                — Returns the collected code coverage data.</li>
            <li id="getReport"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getReport.xhtml">getReport()</a>
                — Returns the code coverage information as a graph of node objects.</li>
            <li id="getTests"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/getTests.xhtml">getTests()</a>
                — Returns the test data.</li>
            <li id="merge"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/merge.xhtml">merge()</a>
                — Merges the data from another instance.</li>
            <li id="setAddUncoveredFilesFromWhitelist">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setAddUncoveredFilesFromWhitelist.xhtml">setAddUncoveredFilesFromWhitelist()</a>
            </li>
            <li id="setCacheTokens">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCacheTokens.xhtml">setCacheTokens()</a>
            </li>
            <li id="setCheckForMissingCoversAnnotation">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForMissingCoversAnnotation.xhtml">setCheckForMissingCoversAnnotation()</a>
            </li>
            <li id="setCheckForUnexecutedCoveredCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForUnexecutedCoveredCode.xhtml">setCheckForUnexecutedCoveredCode()</a>
            </li>
            <li id="setCheckForUnintentionallyCoveredCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setCheckForUnintentionallyCoveredCode.xhtml">setCheckForUnintentionallyCoveredCode()</a>
            </li>
            <li id="setData"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setData.xhtml">setData()</a>
                — Sets the coverage data.</li>
            <li id="setDisableIgnoredLines">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setDisableIgnoredLines.xhtml">setDisableIgnoredLines()</a>
            </li>
            <li id="setForceCoversAnnotation">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setForceCoversAnnotation.xhtml">setForceCoversAnnotation()</a>
            </li>
            <li id="setIgnoreDeprecatedCode">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setIgnoreDeprecatedCode.xhtml">setIgnoreDeprecatedCode()</a>
            </li>
            <li id="setMapTestClassNameToCoveredClassName">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setMapTestClassNameToCoveredClassName.xhtml">setMapTestClassNameToCoveredClassName()</a>
            </li>
            <li id="setProcessUncoveredFilesFromWhitelist">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setProcessUncoveredFilesFromWhitelist.xhtml">setProcessUncoveredFilesFromWhitelist()</a>
            </li>
            <li id="setTests"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setTests.xhtml">setTests()</a>
                — Sets the test data.</li>
            <li id="setUnintentionallyCoveredSubclassesWhitelist">
              <a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/setUnintentionallyCoveredSubclassesWhitelist.xhtml">setUnintentionallyCoveredSubclassesWhitelist()</a>
            </li>
            <li id="start"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/start.xhtml">start()</a>
                — Start collection of code coverage information.</li>
            <li id="stop"><a title="SebastianBergmann\CodeCoverage\CodeCoverage" href="../classes/SebastianBergmann_CodeCoverage_CodeCoverage/stop.xhtml">stop()</a>
                — Stop collection of code coverage information.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
