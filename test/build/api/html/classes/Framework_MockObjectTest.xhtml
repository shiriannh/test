<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Framework_MockObjectTest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">Framework_MockObjectTest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/vendor/phpunit/phpunit-mock-objects/tests/MockObjectTest.php.xhtml#line11">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>Framework_MockObjectTest</h1>
        <h4/>
        <p/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Framework_MockObjectTest
                extends <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase.xhtml">PHPUnit_Framework_TestCase</a>
            {<br/><ul class="none"><li>// methods</li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNeverCalled.xhtml">testMockedMethodIsNeverCalled</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNeverCalledWithParameter.xhtml">testMockedMethodIsNeverCalledWithParameter</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNotCalledWhenExpectsAnyWithParameter.xhtml">testMockedMethodIsNotCalledWhenExpectsAnyWithParameter</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNotCalledWhenMethodSpecifiedDirectlyWithParameter.xhtml">testMockedMethodIsNotCalledWhenMethodSpecifiedDirectlyWithParameter</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastOnce.xhtml">testMockedMethodIsCalledAtLeastOnce</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastOnce2.xhtml">testMockedMethodIsCalledAtLeastOnce2</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastTwice.xhtml">testMockedMethodIsCalledAtLeastTwice</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastTwice2.xhtml">testMockedMethodIsCalledAtLeastTwice2</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtMostTwice.xhtml">testMockedMethodIsCalledAtMostTwice</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtMosttTwice2.xhtml">testMockedMethodIsCalledAtMosttTwice2</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledOnce.xhtml">testMockedMethodIsCalledOnce</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledOnceWithParameter.xhtml">testMockedMethodIsCalledOnceWithParameter</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledExactly.xhtml">testMockedMethodIsCalledExactly</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedException.xhtml">testStubbedException</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedWillThrowException.xhtml">testStubbedWillThrowException</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnValue.xhtml">testStubbedReturnValue</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnValueMap.xhtml">testStubbedReturnValueMap</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnArgument.xhtml">testStubbedReturnArgument</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testFunctionCallback.xhtml">testFunctionCallback</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnSelf.xhtml">testStubbedReturnSelf</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnOnConsecutiveCalls.xhtml">testStubbedReturnOnConsecutiveCalls</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStaticMethodCallback.xhtml">testStaticMethodCallback</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testPublicMethodCallback.xhtml">testPublicMethodCallback</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassOnlyGeneratedOnce.xhtml">testMockClassOnlyGeneratedOnce</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassDifferentForPartialMocks.xhtml">testMockClassDifferentForPartialMocks</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassStoreOverrulable.xhtml">testMockClassStoreOverrulable</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockWithFixedClassNameCanProduceTheSameMockTwice.xhtml">testGetMockWithFixedClassNameCanProduceTheSameMockTwice</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testOriginalConstructorSettingConsidered.xhtml">testOriginalConstructorSettingConsidered</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testOriginalCloneSettingConsidered.xhtml">testOriginalCloneSettingConsidered</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForAbstractClass.xhtml">testGetMockForAbstractClass</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForTraversable.xhtml">testGetMockForTraversable</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMultipleInterfacesCanBeMockedInSingleObject.xhtml">testMultipleInterfacesCanBeMockedInSingleObject</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForTrait.xhtml">testGetMockForTrait</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectShouldStillEqualTheOriginal.xhtml">testClonedMockObjectShouldStillEqualTheOriginal</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockObjectsConstructedIndepentantlyShouldBeEqual.xhtml">testMockObjectsConstructedIndepentantlyShouldBeEqual</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockObjectsConstructedIndepentantlyShouldNotBeTheSame.xhtml">testMockObjectsConstructedIndepentantlyShouldNotBeTheSame</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectCanBeUsedInPlaceOfOriginalOne.xhtml">testClonedMockObjectCanBeUsedInPlaceOfOriginalOne</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectIsNotIdenticalToOriginalOne.xhtml">testClonedMockObjectIsNotIdenticalToOriginalOne</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testObjectMethodCallWithArgumentCloningEnabled.xhtml">testObjectMethodCallWithArgumentCloningEnabled</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testObjectMethodCallWithArgumentCloningDisabled.xhtml">testObjectMethodCallWithArgumentCloningDisabled</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testArgumentCloningOptionGeneratesUniqueMock.xhtml">testArgumentCloningOptionGeneratesUniqueMock</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithoutParameters.xhtml">testVerificationOfMethodNameFailsWithoutParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithParameters.xhtml">testVerificationOfMethodNameFailsWithParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithWrongParameters.xhtml">testVerificationOfMethodNameFailsWithWrongParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfNeverFailsWithEmptyParameters.xhtml">testVerificationOfNeverFailsWithEmptyParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfNeverFailsWithAnyParameters.xhtml">testVerificationOfNeverFailsWithAnyParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testWithAnythingInsteadOfWithAnyParameters.xhtml">testWithAnythingInsteadOfWithAnyParameters</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference.xhtml">testMockArgumentsPassedByReference</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference2.xhtml">testMockArgumentsPassedByReference2</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference3.xhtml">testMockArgumentsPassedByReference3</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference4.xhtml">testMockArgumentsPassedByReference4</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateMockFromWsdl.xhtml">testCreateMockFromWsdl</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateNamespacedMockFromWsdl.xhtml">testCreateNamespacedMockFromWsdl</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateTwoMocksOfOneWsdlFile.xhtml">testCreateTwoMocksOfOneWsdlFile</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testInterfaceWithStaticMethodCanBeStubbed.xhtml">testInterfaceWithStaticMethodCanBeStubbed</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testInvokingStubbedStaticMethodRaisesException.xhtml">testInvokingStubbedStaticMethodRaisesException</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubForClassThatImplementsSerializableCanBeCreatedWithoutInvokingTheConstructor.xhtml">testStubForClassThatImplementsSerializableCanBeCreatedWithoutInvokingTheConstructor</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForClassWithSelfTypeHint.xhtml">testGetMockForClassWithSelfTypeHint</a>()
                    </li><li>private void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/resetMockObjects.xhtml">resetMockObjects</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStringableClassDoesNotThrow.xhtml">testStringableClassDoesNotThrow</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStringableClassCanBeMocked.xhtml">testStringableClassCanBeMocked</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/traversableProvider.xhtml">traversableProvider</a>()
                    </li><li>public void <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testParameterCallbackConstraintOnlyEvaluatedOnce.xhtml">testParameterCallbackConstraintOnlyEvaluatedOnce</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase.xhtml">PHPUnit_Framework_TestCase</a>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="resetMockObjects">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/resetMockObjects.xhtml">resetMockObjects()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="testArgumentCloningOptionGeneratesUniqueMock">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testArgumentCloningOptionGeneratesUniqueMock.xhtml">testArgumentCloningOptionGeneratesUniqueMock()</a>
            </li>
            <li id="testClonedMockObjectCanBeUsedInPlaceOfOriginalOne">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectCanBeUsedInPlaceOfOriginalOne.xhtml">testClonedMockObjectCanBeUsedInPlaceOfOriginalOne()</a>
            </li>
            <li id="testClonedMockObjectIsNotIdenticalToOriginalOne">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectIsNotIdenticalToOriginalOne.xhtml">testClonedMockObjectIsNotIdenticalToOriginalOne()</a>
            </li>
            <li id="testClonedMockObjectShouldStillEqualTheOriginal">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testClonedMockObjectShouldStillEqualTheOriginal.xhtml">testClonedMockObjectShouldStillEqualTheOriginal()</a>
            </li>
            <li id="testCreateMockFromWsdl">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateMockFromWsdl.xhtml">testCreateMockFromWsdl()</a>
            </li>
            <li id="testCreateNamespacedMockFromWsdl">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateNamespacedMockFromWsdl.xhtml">testCreateNamespacedMockFromWsdl()</a>
            </li>
            <li id="testCreateTwoMocksOfOneWsdlFile">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testCreateTwoMocksOfOneWsdlFile.xhtml">testCreateTwoMocksOfOneWsdlFile()</a>
            </li>
            <li id="testFunctionCallback">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testFunctionCallback.xhtml">testFunctionCallback()</a>
            </li>
            <li id="testGetMockForAbstractClass">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForAbstractClass.xhtml">testGetMockForAbstractClass()</a>
            </li>
            <li id="testGetMockForClassWithSelfTypeHint">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForClassWithSelfTypeHint.xhtml">testGetMockForClassWithSelfTypeHint()</a>
            </li>
            <li id="testGetMockForTrait">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForTrait.xhtml">testGetMockForTrait()</a>
            </li>
            <li id="testGetMockForTraversable">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockForTraversable.xhtml">testGetMockForTraversable()</a>
            </li>
            <li id="testGetMockWithFixedClassNameCanProduceTheSameMockTwice">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testGetMockWithFixedClassNameCanProduceTheSameMockTwice.xhtml">testGetMockWithFixedClassNameCanProduceTheSameMockTwice()</a>
            </li>
            <li id="testInterfaceWithStaticMethodCanBeStubbed">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testInterfaceWithStaticMethodCanBeStubbed.xhtml">testInterfaceWithStaticMethodCanBeStubbed()</a>
            </li>
            <li id="testInvokingStubbedStaticMethodRaisesException">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testInvokingStubbedStaticMethodRaisesException.xhtml">testInvokingStubbedStaticMethodRaisesException()</a>
            </li>
            <li id="testMockArgumentsPassedByReference"><a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference.xhtml">testMockArgumentsPassedByReference()</a>
                — See https://github.com/sebastianbergmann/phpunit-mock-objects/issues/81</li>
            <li id="testMockArgumentsPassedByReference2"><a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference2.xhtml">testMockArgumentsPassedByReference2()</a>
                — See https://github.com/sebastianbergmann/phpunit-mock-objects/issues/81</li>
            <li id="testMockArgumentsPassedByReference3"><a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference3.xhtml">testMockArgumentsPassedByReference3()</a>
                — https://github.com/sebastianbergmann/phpunit-mock-objects/issues/116</li>
            <li id="testMockArgumentsPassedByReference4"><a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockArgumentsPassedByReference4.xhtml">testMockArgumentsPassedByReference4()</a>
                — https://github.com/sebastianbergmann/phpunit/issues/796</li>
            <li id="testMockClassDifferentForPartialMocks">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassDifferentForPartialMocks.xhtml">testMockClassDifferentForPartialMocks()</a>
            </li>
            <li id="testMockClassOnlyGeneratedOnce">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassOnlyGeneratedOnce.xhtml">testMockClassOnlyGeneratedOnce()</a>
            </li>
            <li id="testMockClassStoreOverrulable">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockClassStoreOverrulable.xhtml">testMockClassStoreOverrulable()</a>
            </li>
            <li id="testMockObjectsConstructedIndepentantlyShouldBeEqual">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockObjectsConstructedIndepentantlyShouldBeEqual.xhtml">testMockObjectsConstructedIndepentantlyShouldBeEqual()</a>
            </li>
            <li id="testMockObjectsConstructedIndepentantlyShouldNotBeTheSame">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockObjectsConstructedIndepentantlyShouldNotBeTheSame.xhtml">testMockObjectsConstructedIndepentantlyShouldNotBeTheSame()</a>
            </li>
            <li id="testMockedMethodIsCalledAtLeastOnce">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastOnce.xhtml">testMockedMethodIsCalledAtLeastOnce()</a>
            </li>
            <li id="testMockedMethodIsCalledAtLeastOnce2">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastOnce2.xhtml">testMockedMethodIsCalledAtLeastOnce2()</a>
            </li>
            <li id="testMockedMethodIsCalledAtLeastTwice">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastTwice.xhtml">testMockedMethodIsCalledAtLeastTwice()</a>
            </li>
            <li id="testMockedMethodIsCalledAtLeastTwice2">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtLeastTwice2.xhtml">testMockedMethodIsCalledAtLeastTwice2()</a>
            </li>
            <li id="testMockedMethodIsCalledAtMostTwice">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtMostTwice.xhtml">testMockedMethodIsCalledAtMostTwice()</a>
            </li>
            <li id="testMockedMethodIsCalledAtMosttTwice2">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledAtMosttTwice2.xhtml">testMockedMethodIsCalledAtMosttTwice2()</a>
            </li>
            <li id="testMockedMethodIsCalledExactly">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledExactly.xhtml">testMockedMethodIsCalledExactly()</a>
            </li>
            <li id="testMockedMethodIsCalledOnce">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledOnce.xhtml">testMockedMethodIsCalledOnce()</a>
            </li>
            <li id="testMockedMethodIsCalledOnceWithParameter">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsCalledOnceWithParameter.xhtml">testMockedMethodIsCalledOnceWithParameter()</a>
            </li>
            <li id="testMockedMethodIsNeverCalled">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNeverCalled.xhtml">testMockedMethodIsNeverCalled()</a>
            </li>
            <li id="testMockedMethodIsNeverCalledWithParameter">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNeverCalledWithParameter.xhtml">testMockedMethodIsNeverCalledWithParameter()</a>
            </li>
            <li id="testMockedMethodIsNotCalledWhenExpectsAnyWithParameter">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNotCalledWhenExpectsAnyWithParameter.xhtml">testMockedMethodIsNotCalledWhenExpectsAnyWithParameter()</a>
            </li>
            <li id="testMockedMethodIsNotCalledWhenMethodSpecifiedDirectlyWithParameter">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMockedMethodIsNotCalledWhenMethodSpecifiedDirectlyWithParameter.xhtml">testMockedMethodIsNotCalledWhenMethodSpecifiedDirectlyWithParameter()</a>
            </li>
            <li id="testMultipleInterfacesCanBeMockedInSingleObject">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testMultipleInterfacesCanBeMockedInSingleObject.xhtml">testMultipleInterfacesCanBeMockedInSingleObject()</a>
            </li>
            <li id="testObjectMethodCallWithArgumentCloningDisabled">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testObjectMethodCallWithArgumentCloningDisabled.xhtml">testObjectMethodCallWithArgumentCloningDisabled()</a>
            </li>
            <li id="testObjectMethodCallWithArgumentCloningEnabled">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testObjectMethodCallWithArgumentCloningEnabled.xhtml">testObjectMethodCallWithArgumentCloningEnabled()</a>
            </li>
            <li id="testOriginalCloneSettingConsidered">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testOriginalCloneSettingConsidered.xhtml">testOriginalCloneSettingConsidered()</a>
            </li>
            <li id="testOriginalConstructorSettingConsidered">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testOriginalConstructorSettingConsidered.xhtml">testOriginalConstructorSettingConsidered()</a>
            </li>
            <li id="testParameterCallbackConstraintOnlyEvaluatedOnce">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testParameterCallbackConstraintOnlyEvaluatedOnce.xhtml">testParameterCallbackConstraintOnlyEvaluatedOnce()</a>
            </li>
            <li id="testPublicMethodCallback">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testPublicMethodCallback.xhtml">testPublicMethodCallback()</a>
            </li>
            <li id="testStaticMethodCallback">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStaticMethodCallback.xhtml">testStaticMethodCallback()</a>
            </li>
            <li id="testStringableClassCanBeMocked">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStringableClassCanBeMocked.xhtml">testStringableClassCanBeMocked()</a>
            </li>
            <li id="testStringableClassDoesNotThrow">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStringableClassDoesNotThrow.xhtml">testStringableClassDoesNotThrow()</a>
            </li>
            <li id="testStubForClassThatImplementsSerializableCanBeCreatedWithoutInvokingTheConstructor">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubForClassThatImplementsSerializableCanBeCreatedWithoutInvokingTheConstructor.xhtml">testStubForClassThatImplementsSerializableCanBeCreatedWithoutInvokingTheConstructor()</a>
            </li>
            <li id="testStubbedException">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedException.xhtml">testStubbedException()</a>
            </li>
            <li id="testStubbedReturnArgument">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnArgument.xhtml">testStubbedReturnArgument()</a>
            </li>
            <li id="testStubbedReturnOnConsecutiveCalls">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnOnConsecutiveCalls.xhtml">testStubbedReturnOnConsecutiveCalls()</a>
            </li>
            <li id="testStubbedReturnSelf">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnSelf.xhtml">testStubbedReturnSelf()</a>
            </li>
            <li id="testStubbedReturnValue">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnValue.xhtml">testStubbedReturnValue()</a>
            </li>
            <li id="testStubbedReturnValueMap">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedReturnValueMap.xhtml">testStubbedReturnValueMap()</a>
            </li>
            <li id="testStubbedWillThrowException">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testStubbedWillThrowException.xhtml">testStubbedWillThrowException()</a>
            </li>
            <li id="testVerificationOfMethodNameFailsWithParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithParameters.xhtml">testVerificationOfMethodNameFailsWithParameters()</a>
            </li>
            <li id="testVerificationOfMethodNameFailsWithWrongParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithWrongParameters.xhtml">testVerificationOfMethodNameFailsWithWrongParameters()</a>
            </li>
            <li id="testVerificationOfMethodNameFailsWithoutParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfMethodNameFailsWithoutParameters.xhtml">testVerificationOfMethodNameFailsWithoutParameters()</a>
            </li>
            <li id="testVerificationOfNeverFailsWithAnyParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfNeverFailsWithAnyParameters.xhtml">testVerificationOfNeverFailsWithAnyParameters()</a>
            </li>
            <li id="testVerificationOfNeverFailsWithEmptyParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testVerificationOfNeverFailsWithEmptyParameters.xhtml">testVerificationOfNeverFailsWithEmptyParameters()</a>
            </li>
            <li id="testWithAnythingInsteadOfWithAnyParameters">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/testWithAnythingInsteadOfWithAnyParameters.xhtml">testWithAnythingInsteadOfWithAnyParameters()</a>
            </li>
            <li id="traversableProvider">
              <a title="Framework_MockObjectTest" href="../classes/Framework_MockObjectTest/traversableProvider.xhtml">traversableProvider()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
