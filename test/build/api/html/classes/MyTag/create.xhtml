<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#"/>
          </li>
          <li class="separator">
            <a title="MyTag" href="../../classes/MyTag.xhtml">MyTag</a>
          </li>
          <li class="separator">create</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="../../source/vendor/phpdocumentor/reflection-docblock/examples/04-adding-your-own-tag.php.xhtml#line89">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>MyTag::</small>create</h1>
        <h4>A static Factory that creates a new instance of the current Tag.</h4>
        <p>In this example the MyTag tag can be created by passing a description text as $body. Because we have added
a $descriptionFactory that is type-hinted as DescriptionFactory we can now construct a new Description object
and pass that to the constructor.
&gt; You could directly instantiate a Description object here but that won't be parsed for inline tags and Types
&gt; won't be resolved. The DescriptionFactory will take care of those actions.
The `create` method's interface states that this method only features a single parameter (`$body`) but the
 will read the signature of this method and if it has more parameters then it will try
to find declarations for it in the ServiceLocator of the TagFactory (see ).
&gt; Important: all properties following the `$body` should default to `null`, otherwise PHP will error because
&gt; it no longer matches the interface. This is why you often see the default tags check that an optional argument
&gt; is not null nonetheless.
</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function create(string
        $body,
            [<a title="phpDocumentor\Reflection\DocBlock\DescriptionFactory" href="../../classes/phpDocumentor_Reflection_DocBlock_DescriptionFactory.xhtml">DescriptionFactory</a>
        $descriptionFactory = null,
            [<a title="Context|null" href="../../classes/Context|null.xhtml">Context|null</a>
        $context = null]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$body</code>
                —
                string</dt>
          <dd/>
          <dt><code>$descriptionFactory</code>
                —
                object</dt>
          <dd><br/><br/><br/>      </dd>
          <dt><code>$context</code>
                —
                object</dt>
          <dd>The Context is used to resolve Types and FQSENs, although optional<br/>it is highly recommended to pass it. If you omit it then it is assumed that<br/>                                   the DocBlock is in the global namespace and has no `use` statements.</dd>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>MyTag</dt>
          <dd><br/>
        </dd>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
